IF EXISTS (SELECT 1 FROM SYS.objects WHERE name ='sp_ProductInfo')

exec('ALTER PROCEDURE [dbo].[sp_ProductInfo] (@ProductCode varchar(25), @PriceTable char(2), @StoreName varchar(25), @GetPicture bit)  
 AS  
 BEGIN  
  SELECT  
   A.PRODUTO
   ,left(A.DESC_PROD_NF+space(40),40) as DESC_PROD_NF
   /*, A.DESC_PROD_NF */
   , A.UNIDADE, A.VARIA_PRECO_COR, A.VARIA_PRECO_TAM, A.PESO, A.INATIVO,   
   A.PONTEIRO_PRECO_TAM, B.COR_PRODUTO, B.DESC_COR_PRODUTO, C.TAMANHO, C.GRADE,   
   D.CLASSIF_FISCAL, D.CLASSIF_REDUZIDA, A.TRIBUT_ICMS, A.TRIBUT_ORIGEM,   
   dbo.fn_TaxException(A.CLASSIF_FISCAL, K.UF, @StoreName, 2, D.IPI) AS IPI,   
   dbo.fn_TaxException(A.CLASSIF_FISCAL, K.UF, @StoreName, 1, NULL) AS ALIQUOTA,   
   dbo.fn_TaxException(A.CLASSIF_FISCAL, K.UF, @StoreName, 14, -10) AS ISS,   
   PRECO, LIMITE_DESCONTO, PROMOCAO_DESCONTO, INICIO_PROMOCAO, FIM_PROMOCAO,   
   CASE WHEN @GetPicture = 1 THEN ISNULL(CONTEUDO_FOTO, ISNULL(THUMBNAIL_FOTO, PATH_FOTO)) ELSE CONVERT(VARCHAR(10), '''') END AS PATH_FOTO,   
   A.VARIA_CUSTO_TAM,   
   CASE A.VARIA_CUSTO_COR WHEN 1 THEN B.CUSTO_REPOSICAO1 ELSE A.CUSTO_REPOSICAO1 END AS CUSTO_REPOSICAO1,   
   CASE A.VARIA_CUSTO_COR WHEN 1 THEN B.CUSTO_REPOSICAO2 ELSE A.CUSTO_REPOSICAO2 END AS CUSTO_REPOSICAO2,   
   CASE A.VARIA_CUSTO_COR WHEN 1 THEN B.CUSTO_REPOSICAO3 ELSE A.CUSTO_REPOSICAO3 END AS CUSTO_REPOSICAO3,   
   CASE A.VARIA_CUSTO_COR WHEN 1 THEN B.CUSTO_REPOSICAO4 ELSE A.CUSTO_REPOSICAO4 END AS CUSTO_REPOSICAO4,   
   CONVERT(INT,ISNULL(CASE C.TAMANHO WHEN 1 THEN ES1 WHEN 2 THEN ES2 WHEN 3 THEN ES3 WHEN 4 THEN ES4 WHEN 5 THEN ES5 WHEN 6 THEN ES6 WHEN 7 THEN ES7  
   WHEN 8 THEN ES8 WHEN 9 THEN ES9 WHEN 10 THEN ES10 WHEN 11 THEN ES11 WHEN 12 THEN ES12 WHEN 13 THEN ES13 WHEN 14 THEN ES14 WHEN 15 THEN ES15  
   WHEN 16 THEN ES16 WHEN 17 THEN ES17 WHEN 18 THEN ES18 WHEN 19 THEN ES19 WHEN 20 THEN ES20 WHEN 21 THEN ES21 WHEN 22 THEN ES22 WHEN 23 THEN ES23  
   WHEN 24 THEN ES24 WHEN 25 THEN ES25 WHEN 26 THEN ES26 WHEN 27 THEN ES27 WHEN 28 THEN ES28 WHEN 29 THEN ES29 WHEN 30 THEN ES30 WHEN 31 THEN ES31  
   WHEN 32 THEN ES32 WHEN 33 THEN ES33 WHEN 34 THEN ES34 WHEN 35 THEN ES35 WHEN 36 THEN ES36 WHEN 37 THEN ES37 WHEN 38 THEN ES38 WHEN 39 THEN ES39  
   WHEN 40 THEN ES40 WHEN 41 THEN ES41 WHEN 42 THEN ES42 WHEN 43 THEN ES43 WHEN 44 THEN ES44 WHEN 45 THEN ES45 WHEN 46 THEN ES46 WHEN 47 THEN ES47  
   WHEN 48 THEN ES48 ELSE 0 END, 0)) AS ESTOQUE, ISNULL(I.INDICADOR_CFOP, A.INDICADOR_CFOP) AS INDICADOR_CFOP
   , H.DESCRICAO AS TRIBUT_ORIGEM_DESCRICAO
   , D.DESC_CLASSIFICACAO
   , J.DESCRICAO_INDICADOR_CFOP
   , A.CONTA_CONTABIL, A.CONTA_CONTABIL_VENDA, A.CONTA_CONTABIL_DEV_VENDA 
  FROM   
   PRODUTOS A   
   INNER JOIN PRODUTO_CORES B ON A.PRODUTO = B.PRODUTO  
   INNER JOIN PRODUTOS_BARRA C ON A.PRODUTO = C.PRODUTO AND B.COR_PRODUTO = C.COR_PRODUTO  
   INNER JOIN CLASSIF_FISCAL D ON A.CLASSIF_FISCAL = D.CLASSIF_FISCAL  
   LEFT JOIN (SELECT C.CODIGO_TAB_PRECO, 
                                 A.PRODUTO, 
                                 B.COR_PRODUTO,          
                                 F.GRADE, 
                                 F.TAMANHO, 
                                 F.CODIGO_BARRA,            
                                 PRECO = CONVERT(NUMERIC(14, 2),   
                                 CASE SUBSTRING(A.PONTEIRO_PRECO_TAM, F.TAMANHO, 1)   
                                          WHEN 1 THEN CASE WHEN ISNULL(D.PRECO_LIQUIDO1,0) > 0 THEN D.PRECO_LIQUIDO1 ELSE D.PRECO1 END 
                                          WHEN 2 THEN CASE WHEN ISNULL(D.PRECO_LIQUIDO2,0) > 0 THEN D.PRECO_LIQUIDO2 ELSE D.PRECO2 END
                                          WHEN 3 THEN CASE WHEN ISNULL(D.PRECO_LIQUIDO3,0) > 0 THEN D.PRECO_LIQUIDO3 ELSE D.PRECO3 END
                                          WHEN 4 THEN CASE WHEN ISNULL(D.PRECO_LIQUIDO4,0) > 0 THEN D.PRECO_LIQUIDO4 ELSE D.PRECO4 END    
                                    END),   
                                    PROMOCAO_DESCONTO = D.PROMOCAO_DESCONTO,   
                                    INICIO_PROMOCAO = D.INICIO_PROMOCAO,   
                                    FIM_PROMOCAO = D.FIM_PROMOCAO,           
                                    LIMITE_DESCONTO  
                         FROM PRODUTOS A   
                         INNER JOIN PRODUTO_CORES B ON A.PRODUTO = B.PRODUTO   
                         INNER JOIN PRODUTOS_PRECOS C ON A.PRODUTO = C.PRODUTO   
                         LEFT JOIN PRODUTOS_PRECO_COR D ON C.CODIGO_TAB_PRECO = D.CODIGO_TAB_PRECO 
                                                                             AND C.PRODUTO = D.PRODUTO 
                                                                             AND B.COR_PRODUTO = D.COR_PRODUTO   
                         INNER JOIN PRODUTOS_TAMANHOS E ON A.GRADE = E.GRADE   
                         INNER JOIN PRODUTOS_BARRA F ON A.PRODUTO = F.PRODUTO AND B.COR_PRODUTO = F.COR_PRODUTO  
       )/* ProductPrice */ E ON C.CODIGO_BARRA = E.CODIGO_BARRA AND E.CODIGO_TAB_PRECO = @PriceTable  
   LEFT JOIN ESTOQUE_PRODUTOS F ON A.PRODUTO = F.PRODUTO AND B.COR_PRODUTO = F.COR_PRODUTO AND F.FILIAL = @StoreName  
   LEFT JOIN (SELECT A.PRODUTO, A.CONTEUDO_FOTO, A.THUMBNAIL_FOTO, A.PATH_FOTO FROM PRODUTOS_FOTO A INNER JOIN (SELECT PRODUTO, MIN(NUMERO_FOTO) AS NUMERO_FOTO FROM PRODUTOS_FOTO GROUP BY PRODUTO) B ON A.PRODUTO = B.PRODUTO AND A.NUMERO_FOTO = B.NUMERO_FOTO) G ON A.PRODUTO = G.PRODUTO  
   INNER JOIN TRIBUT_ORIGEM H ON A.TRIBUT_ORIGEM = H.TRIBUT_ORIGEM   
   INNER JOIN TRIBUT_ICMS L ON A.TRIBUT_ICMS = L.TRIBUT_ICMS  
   LEFT JOIN PRODUTOS_INDICADOR_CFOP I ON A.PRODUTO = I.PRODUTO AND I.FILIAL = @StoreName   
   LEFT JOIN CTB_LX_INDICADOR_CFOP J ON ISNULL(I.INDICADOR_CFOP, A.INDICADOR_CFOP) = J.INDICADOR_CFOP   
   LEFT JOIN CADASTRO_CLI_FOR K ON K.NOME_CLIFOR = @StoreName   
  WHERE   
   C.CODIGO_BARRA = @ProductCode  
 END')

