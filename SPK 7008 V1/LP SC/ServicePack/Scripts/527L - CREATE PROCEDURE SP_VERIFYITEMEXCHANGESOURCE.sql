CREATE PROCEDURE [dbo].[SP_VERIFYITEMEXCHANGESOURCE]
 ( @CODIGO_FILIAL		CHAR(6), 
   @PRODUTO				CHAR(12),
   @QTDE				INT,
   @PRECO_LIQUIDO		NUMERIC(14, 2),
   @CODIGO_CLIENTE		VARCHAR(14),
   @COR_PRODUTO			CHAR(10),
   @PRECO_LIQUIDO_FIM	NUMERIC(14, 2) = NULL,
   @TICKET				CHAR(8) = NULL,
   @DATA_VENDA			DATETIME = NULL,
   @DATA_VENDA_FIM      DATETIME = NULL,
   @DOCUMENTO			CHAR(44) = NULL,
   @HORA_DIGITACAO		CHAR(8) = NULL,
   @HORA_DIGITACAO_FIM  CHAR(8) = NULL,
   @QTREGISTROS		    INT = 999,
   @DATA_LIMITE		    DATETIME = NULL
 )
   AS
  
	BEGIN
	
		DECLARE @VENDAORIGEM TABLE(	CODIGO_FILIAL CHAR(6) COLLATE DATABASE_DEFAULT NOT NULL, 
									TICKET CHAR(8) COLLATE DATABASE_DEFAULT NOT NULL, 
									TERMINAL CHAR(03) COLLATE DATABASE_DEFAULT NULL, 
									DATA_VENDA DATETIME, 
									HORA_DIGITACAO TIME, 
									PRODUTO CHAR(12) COLLATE DATABASE_DEFAULT NOT NULL,
									ITEM CHAR(04) COLLATE DATABASE_DEFAULT NULL, 
									QTDE INT, 
									QTDE_DISPONIVEL INT,
									VALOR_ICMS NUMERIC(14,2), 
									VALOR_CUPOM NUMERIC(14,2), 
									VALOR_LIQUIDO NUMERIC(14,2), 
									NUMERO_CUPOM_FISCAL VARCHAR(8) COLLATE DATABASE_DEFAULT NULL, 
									NF_NUMERO CHAR(15) COLLATE DATABASE_DEFAULT NULL,
									SERIE_NF CHAR(06) COLLATE DATABASE_DEFAULT NULL, 
									NUMERO_MODELO_FISCAL CHAR(03) COLLATE DATABASE_DEFAULT NULL, 
									ID_EQUIPAMENTO VARCHAR(20) COLLATE DATABASE_DEFAULT NULL, 
									ID_EQUIPAMENTO_SAT INT ,
									NUMERO_FISCAL_VENDA CHAR(15) COLLATE DATABASE_DEFAULT NULL,
									SERIE_NF_SAIDA CHAR(06) COLLATE DATABASE_DEFAULT NULL,
									LANCAMENTO_CAIXA CHAR(07) COLLATE DATABASE_DEFAULT NULL,
									DATA DATETIME NULL,
									CHAVE_NFE_ORIGEM VARCHAR(44) COLLATE DATABASE_DEFAULT NULL
								  ) 
		SET NOCOUNT ON

		IF @DATA_LIMITE IS NULL
			SET @DATA_LIMITE = DATEADD(DAY, -45, CONVERT(VARCHAR, GETDATE(), 112))

		INSERT INTO @VENDAORIGEM
			SELECT TOP (@QTREGISTROS)
					C.CODIGO_FILIAL, C.TICKET, A.TERMINAL, C.DATA_VENDA, CONVERT(TIME, A.DATA_DIGITACAO), C.PRODUTO, C.ITEM, C.QTDE,
					QTDE_DISPONIVEL = C.QTDE -	(
													SELECT COUNT(*)
													FROM LOJA_VENDA_TROCA_ORIGEM F 
													WHERE C.CODIGO_FILIAL = F.CODIGO_FILIAL_ORIGEM 
														AND C.TICKET = F.TICKET_ORIGEM
														AND C.DATA_VENDA = F.DATA_VENDA_ORIGEM 
														AND C.ITEM = F.ITEM_ORIGEM 
														AND F.CODIGO_FILIAL_ORIGEM = @CODIGO_FILIAL
												),
					ROUND( CASE	WHEN C.ALIQUOTA > 0 
								THEN ((C.PRECO_LIQUIDO * C.QTDE) - (C.PRECO_LIQUIDO * C.QTDE * C.FATOR_DESCONTO_VENDA)) * (C.ALIQUOTA / 100) 
								ELSE 0 END, 2, 1) AS VALOR_ICMS,
					(C.PRECO_LIQUIDO * @QTDE) AS VALOR_CUPOM,
					(C.PRECO_LIQUIDO - (C.PRECO_LIQUIDO * C.FATOR_DESCONTO_VENDA)) AS VALOR_LIQUIDO, 
					B.NUMERO_CUPOM_FISCAL,
					NULL AS NF_NUMERO,
					NULL AS SERIE_NF,
					CAST('' AS CHAR(3)) AS NUMERO_MODELO_FISCAL,
					B.ID_EQUIPAMENTO, 
					NULL AS ID_EQUIPAMENTO_SAT,
					ISNULL(B.NUMERO_FISCAL_VINCULADA, B.NUMERO_FISCAL_VENDA) AS NUMERO_FISCAL_VENDA,
					ISNULL(B.SERIE_NF_VINCULADA, B.SERIE_NF_SAIDA) AS SERIE_NF_SAIDA,
					B.LANCAMENTO_CAIXA,
					DATA,
					NULL AS CHAVE_NFE_ORIGEM
			FROM	LOJA_VENDA A
					INNER JOIN	LOJA_VENDA_PGTO B 
							ON	A.CODIGO_FILIAL_PGTO = B.CODIGO_FILIAL 
								AND A.TERMINAL_PGTO = B.TERMINAL 
								AND A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
								AND B.DATA > = @DATA_LIMITE 
					INNER JOIN	LOJA_VENDA_PRODUTO C 
							ON	A.CODIGO_FILIAL = C.CODIGO_FILIAL
								AND A.TICKET = C.TICKET 
								AND A.DATA_VENDA = C.DATA_VENDA  
			WHERE	A.CODIGO_FILIAL = @CODIGO_FILIAL
					AND (@DATA_VENDA IS NULL OR A.DATA_VENDA BETWEEN @DATA_VENDA AND @DATA_VENDA_FIM  )
					AND (@HORA_DIGITACAO IS NULL OR CONVERT(TIME, A.DATA_DIGITACAO) BETWEEN CONVERT(TIME, @HORA_DIGITACAO) AND CONVERT(TIME, @HORA_DIGITACAO_FIM) )
					AND C.PRODUTO = @PRODUTO
--					AND C.QTDE >=  @QTDE
					AND (@TICKET IS NULL OR A.TICKET = @TICKET)
					AND ( @PRECO_LIQUIDO_FIM IS NULL OR ( ROUND ( C.PRECO_LIQUIDO - (C.PRECO_LIQUIDO * C.FATOR_DESCONTO_VENDA), 2) ) BETWEEN @PRECO_LIQUIDO AND @PRECO_LIQUIDO_FIM ) 
					AND C.COR_PRODUTO = @COR_PRODUTO
					AND B.VENDA_FINALIZADA = 1 
					AND A.DATA_VENDA >= @DATA_LIMITE
					AND (@CODIGO_CLIENTE IS NULL OR ISNULL(A.CODIGO_CLIENTE, A.CPF_CGC_ECF) = @CODIGO_CLIENTE) 
					AND C.QTDE > (
									SELECT COUNT(*)
									FROM LOJA_VENDA_TROCA_ORIGEM F 
									WHERE C.CODIGO_FILIAL = F.CODIGO_FILIAL_ORIGEM 
										AND C.TICKET = F.TICKET_ORIGEM
										AND C.DATA_VENDA = F.DATA_VENDA_ORIGEM 
										AND C.ITEM = F.ITEM_ORIGEM 
										AND F.CODIGO_FILIAL_ORIGEM = @CODIGO_FILIAL
									)
			ORDER  BY	ISNULL(A.CODIGO_CLIENTE, A.CPF_CGC_ECF) DESC, C.QTDE,
						CASE WHEN C.DATA_VENDA = CONVERT(DATETIME, CONVERT(VARCHAR, GETDATE(), 112)) THEN 1 ELSE 0 END,
						A.DATA_VENDA DESC, A.DATA_DIGITACAO
	
		
		SET NOCOUNT OFF
	
	 	
		-- NFC-e / NF-e
		SELECT	B.CODIGO_FILIAL, TICKET, B.TERMINAL, DATA_VENDA, HORA_DIGITACAO, PRODUTO, ITEM , QTDE, QTDE_DISPONIVEL,
				VALOR_ICMS, VALOR_CUPOM, VALOR_LIQUIDO, ISNULL(NUMERO_CUPOM_FISCAL,0) AS NUMERO_CUPOM_FISCAL,
				CASE WHEN ISNULL(G.STATUS_NFE,'') = '5' THEN ISNULL(G.NF_NUMERO,'') ELSE '' END AS NF_NUMERO,
				CASE WHEN ISNULL(G.STATUS_NFE,'') = '5' THEN ISNULL(G.SERIE_NF,'') ELSE '' END AS SERIE_NF,
				ISNULL(ENF.NUMERO_MODELO_FISCAL,'') AS NUMERO_MODELO_FISCAL,
				CASE WHEN ISNULL(B.ID_EQUIPAMENTO,'0') = 0 THEN '0' ELSE ISNULL(B.ID_EQUIPAMENTO,'0') END AS ID_EQUIPAMENTO_SAT ,'0' AS ID_EQUIPAMENTO,
				G.CHAVE_NFE AS CHAVE_NFE_ORIGEM
		FROM	@VENDAORIGEM B
				INNER JOIN	(
							LOJA_NOTA_FISCAL G (NOLOCK)
							INNER JOIN	SERIES_NF SNF (NOLOCK)
									ON	SNF.SERIE_NF = G.SERIE_NF
							INNER JOIN	CTB_ESPECIE_SERIE ENF (NOLOCK)
									ON	ENF.ESPECIE_SERIE = SNF.ESPECIE_SERIE
							)
							ON	B.NUMERO_FISCAL_VENDA = G.NF_NUMERO
								AND B.CODIGO_FILIAL = G.CODIGO_FILIAL
								AND B.SERIE_NF_SAIDA = G.SERIE_NF
								AND G.EMISSAO >= @DATA_LIMITE
		WHERE	G.STATUS_NFE = '5'
				AND (@DOCUMENTO IS NULL OR LEN(@DOCUMENTO) < 44 OR G.CHAVE_NFE = @DOCUMENTO)

		UNION

		-- SAT
		SELECT	B.CODIGO_FILIAL, TICKET, B.TERMINAL, DATA_VENDA, HORA_DIGITACAO, PRODUTO, ITEM , QTDE, QTDE_DISPONIVEL,
				VALOR_ICMS, VALOR_CUPOM, VALOR_LIQUIDO, ISNULL(NUMERO_CUPOM_FISCAL,0) AS NUMERO_CUPOM_FISCAL,
				'' AS NF_NUMERO,
				''  SERIE_NF,
				ISNULL(ENF.NUMERO_MODELO_FISCAL,'') AS NUMERO_MODELO_FISCAL,
				ISNULL(K.ID_EQUIPAMENTO,'0') AS ID_EQUIPAMENTO_SAT , '0' AS ID_EQUIPAMENTO,
				'' AS CHAVE_NFE_ORIGEM
		FROM	@VENDAORIGEM B
				INNER JOIN	( 
							LOJA_CF_SAT K (NOLOCK)
							INNER JOIN	SERIES_NF SSAT (NOLOCK)
									ON	SSAT.SERIE_NF = K.SERIE_NF
							INNER JOIN	CTB_ESPECIE_SERIE ENF (NOLOCK)
									ON	ENF.ESPECIE_SERIE = SSAT.ESPECIE_SERIE
							)
							ON	B.CODIGO_FILIAL = K.CODIGO_FILIAL
								AND B.TERMINAL = K.TERMINAL
								AND B.LANCAMENTO_CAIXA = K.LANCAMENTO_CAIXA
								AND B.DATA = K.EMISSAO
								AND K.EMISSAO >= @DATA_LIMITE
		WHERE	K.STATUS_CFE = '5'

		UNION		
		
		-- ECF
		SELECT	CODIGO_FILIAL, TICKET, TERMINAL, DATA_VENDA, HORA_DIGITACAO, PRODUTO, ITEM, QTDE, QTDE_DISPONIVEL,
				VALOR_ICMS, VALOR_CUPOM, VALOR_LIQUIDO, ISNULL(NUMERO_CUPOM_FISCAL, 0) AS NUMERO_CUPOM_FISCAL,				
				'' AS NF_NUMERO, '' AS SERIE_NF, '2D' AS NUMERO_MODELO_FISCAL,
				'0' AS ID_EQUIPAMENTO_SAT, ID_EQUIPAMENTO AS ID_EQUIPAMENTO,
				'' AS CHAVE_NFE_ORIGEM
		FROM	@VENDAORIGEM B
		WHERE	ISNULL(ID_EQUIPAMENTO,'') <> ''
				AND (@DOCUMENTO IS NULL OR LEN(@DOCUMENTO) = 44 OR CAST(NULLIF(B.NUMERO_CUPOM_FISCAL,'') AS INT) = CONVERT(INT, @DOCUMENTO))

   END
