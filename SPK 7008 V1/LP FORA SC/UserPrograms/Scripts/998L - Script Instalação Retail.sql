IF EXISTS (SELECT 1 FROM SYS.objects WHERE NAME = 'SP_HR_SYNC_REPROCESSA_INFO')
BEGIN
	DROP PROCEDURE [SP_HR_SYNC_REPROCESSA_INFO]

END

EXEC('
CREATE PROCEDURE [dbo].[SP_HR_SYNC_REPROCESSA_INFO](@DATA_INICIO DATE, @DATA_FIM DATE)
AS
BEGIN
 
 IF @DATA_INICIO > @DATA_FIM 
 BEGIN
  RAISERROR(''Data de ínicio não pode ser superior a data de fim do processamento.'', 16, 1)
  RETURN
 END
 
 IF DATEDIFF(DAY, @DATA_INICIO, GETDATE()) > 45
 BEGIN  
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''REPROCESSAMENTO_VENDA'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.CODIGO_FILIAL) +''{#}LANCAMENTO_CAIXA=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.LANCAMENTO_CAIXA) +''{#}TERMINAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM LOJA_VENDA_PGTO
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''REPROCESSAMENTO_VENDA''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And LOJA_VENDA_PGTO.VENDA_FINALIZADA = 1
	 AND DATA <= CONVERT(DATE, GETDATE()-45)
	 AND DATA BETWEEN @DATA_INICIO AND @DATA_FIM 
 END   

 
 UPDATE LOJA_VENDA_PGTO SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  DATA BETWEEN @DATA_INICIO AND @DATA_FIM AND DATA > CONVERT(DATE, GETDATE()-45)

 UPDATE LOJA_ENTRADAS SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  EMISSAO  BETWEEN @DATA_INICIO AND @DATA_FIM

 UPDATE LOJA_SAIDAS SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  EMISSAO  BETWEEN @DATA_INICIO AND @DATA_FIM           

 UPDATE LOJA_CAIXA_LANCAMENTOS SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  DATA  BETWEEN @DATA_INICIO AND @DATA_FIM         

 UPDATE LJ_DOCUMENTO_ECF SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  CONVERT(DATE,DATA_HORA_EMISSAO)  BETWEEN @DATA_INICIO AND @DATA_FIM          

 UPDATE LOJA_RESERVA SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  EMISSAO  BETWEEN @DATA_INICIO AND @DATA_FIM  

 UPDATE INVENTARIO SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  EMISSAO  BETWEEN @DATA_INICIO AND @DATA_FIM             

 UPDATE LOJA_CONSERTO SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  DATA_PROTOCOLO  BETWEEN @DATA_INICIO AND @DATA_FIM                                

 UPDATE LOJA_IMPRESSORAS_FISCAIS SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE   CONVERT(DATE,DATA_PARA_TRANSFERENCIA)  BETWEEN @DATA_INICIO AND @DATA_FIM                      

 UPDATE LOJA_PEDIDO SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE   DATA  BETWEEN @DATA_INICIO AND @DATA_FIM              

 UPDATE LOJA_NOTA_FISCAL SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  EMISSAO  BETWEEN @DATA_INICIO AND @DATA_FIM                   

 UPDATE LOJA_CONTROLE_FISCAL  SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  DATA_FISCAL   BETWEEN @DATA_INICIO AND @DATA_FIM               

 UPDATE LOJA_CF_SAT SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  EMISSAO BETWEEN @DATA_INICIO AND @DATA_FIM

 UPDATE CLIENTES_VAREJO SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE,DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM  
 
 UPDATE LOJA_HISTORICO_VENDA SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  DATA_VENDA BETWEEN @DATA_INICIO AND @DATA_FIM
 
 UPDATE LOJA_EVENTOS_LOG SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE  CONVERT(DATE,LOJA_EVENTOS_LOG.DATA_EVENTO) BETWEEN @DATA_INICIO AND @DATA_FIM
 
 UPDATE LOJA_PROCESSOS SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, DATA_PROCESSO) BETWEEN @DATA_INICIO AND @DATA_FIM
 
 DECLARE @QUERY NVARCHAR(1000)
 IF EXISTS( SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''HR_GUIA_PGTO'')
 BEGIN
    SET @QUERY = '' UPDATE HR_GUIA_PGTO SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
          WHERE CONVERT(DATE, HR_GUIA_PGTO.DATA_HORA_PGTO) BETWEEN @DATA_INICIO AND @DATA_FIM''
 EXEC SP_executesql @QUERY, N''@DATA_INICIO DATETIME, @DATA_FIM DATETIME'',@DATA_INICIO, @DATA_FIM
 END      
 
 IF EXISTS( SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''LOJA_CAIXA_FECHADO_HERING'')
 BEGIN
 SET @QUERY =  '' UPDATE LOJA_CAIXA_FECHADO_HERING SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
     WHERE CONVERT(DATE, LOJA_CAIXA_FECHADO_HERING.DATA_LOJA) BETWEEN @DATA_INICIO AND @DATA_FIM''
 EXEC SP_executesql @QUERY, N''@DATA_INICIO DATETIME, @DATA_FIM DATETIME'',@DATA_INICIO, @DATA_FIM
 END
 
 IF EXISTS( SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''HR_LOJA_ENTRADA_CAIXAS'')
 BEGIN
 SET @QUERY = ''  UPDATE HR_LOJA_ENTRADA_CAIXAS SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
  WHERE CONVERT(DATE, HR_LOJA_ENTRADA_CAIXAS.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM'' 
 EXEC SP_executesql  @QUERY, N''@DATA_INICIO DATETIME, @DATA_FIM DATETIME'',@DATA_INICIO, @DATA_FIM
 END
 
 IF EXISTS( SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''HR_PROPOSTAS_CARTAO'')
 BEGIN
 SET @QUERY = '' UPDATE HR_PROPOSTAS_CARTAO SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
       WHERE CONVERT(DATE, HR_PROPOSTAS_CARTAO.DATA) BETWEEN @DATA_INICIO AND @DATA_FIM''
    
 EXEC SP_executesql @QUERY, N''@DATA_INICIO DATETIME, @DATA_FIM DATETIME'',@DATA_INICIO, @DATA_FIM
 END
 
 IF EXISTS( SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''HR_LOTES_ENTRADA'')
 BEGIN
 SET @QUERY ='' UPDATE HR_LOTES_ENTRADA SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
      WHERE CONVERT(DATE, HR_LOTES_ENTRADA.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM''
 EXEC SP_executesql @QUERY, N''@DATA_INICIO DATETIME, @DATA_FIM DATETIME'',@DATA_INICIO, @DATA_FIM
 END
 
 UPDATE LJ_ECF_AC1704_E01 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LJ_ECF_AC1704_E01.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
 
 UPDATE LJ_ECF_AC1704_E12 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LJ_ECF_AC1704_E12.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
 
 UPDATE LJ_ECF_AC1704_E13 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LJ_ECF_AC1704_E13.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
 
 UPDATE LJ_ECF_AC1704_E14 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LJ_ECF_AC1704_E14.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
 
 UPDATE LJ_ECF_AC1704_E15 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LJ_ECF_AC1704_E15.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
   
 UPDATE LJ_ECF_AC1704_E21 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LJ_ECF_AC1704_E21.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
  
 UPDATE LX_IMP_MFD_E01 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LX_IMP_MFD_E01.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
 
 UPDATE LX_IMP_MFD_E14 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LX_IMP_MFD_E14.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
 
 UPDATE LX_IMP_MFD_E15 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LX_IMP_MFD_E15.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
 
 UPDATE LX_IMP_MFD_E21 SET DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA
 WHERE CONVERT(DATE, LX_IMP_MFD_E21.DATA_PARA_TRANSFERENCIA) BETWEEN @DATA_INICIO AND @DATA_FIM
 
END')


 

exec('
/* 001 - Criação Tabelas ETL.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 001 - Criação Tabelas ETL.sql'')

SET NOCOUNT ON

BEGIN TRAN

BEGIN TRY

 IF SCHEMA_ID(N''DBO'') IS NULL EXECUTE(N''CREATE SCHEMA DBO'');

 /*
 -------------------------------------------------------------------------------------------------------------------------------------
 -- CURSOR COM A ESTRUTURA DAS TABELAS
 -------------------------------------------------------------------------------------------------------------------------------------
 */


 DECLARE @TABELAS TABLE (TABLE_NAME VARCHAR(100)
       , COLUMN_NAME VARCHAR(100)
       , ORDINAL_POSITION INT
       , COLUMN_DEFAULT VARCHAR(100)
       , IS_NULLABLE VARCHAR(10)
       , DATA_TYPE VARCHAR(100)
       , CHARACTER_MAXIMUM_LENGTH INT
       , NUMERIC_PRECISION INT
       , NUMERIC_SCALE INT
       ,PRIMARYKEY INT
       ,IDENT VARCHAR(100))
 -- LJ_ETL_ARQUIVO
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''ID_ETL_TIPO'',  1, '''', ''NO'', ''SMALLINT'', 0, 5, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''CODIGO_FILIAL'',  2, '''', ''NO'', ''CHAR'', 6, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''ID_ETL_ARQUIVO'',  3, '''', ''NO'', ''INT'', 0, 10, 0,1,''IDENTITY(1,1)'')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''DATA_HORA_CRIACAO'',  4, '''', ''NO'', ''DATETIME'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''XML_ARQUIVO'',  5, '''', ''NO'', ''TEXT'', '''', 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''PROCESSADO'',  6, '''', ''NO'', ''SMALLINT'', 0, 5, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''DATA_HORA_PROXIMO_PROCESSO'',  7, '''', ''YES'', ''DATETIME'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''VERSAO'',  8, '''', ''YES'', ''VARCHAR'', 10, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''PREFIXO_ERP_ORIGEM'',  9, ''DEFAULT('''''''')'', ''NO'', ''VARCHAR'', 5, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''ID_MSG_ENSEMBLE'',  10, '''', ''YES'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ARQUIVO'',  ''PRIORIDADE'',  11, ''DEFAULT(0)'', ''NO'', ''BIT'', 0, 0, 0,0,'''')

 -- LJ_ETL_CARGA
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA'',  ''ID_TABELA'',  1, '''', ''NO'', ''INT'', 0, 10, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA'',  ''TABELA'',  2, '''', ''NO'', ''VARCHAR'', 100, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA'',  ''TABELA_JOIN'',  3, '''', ''NO'', ''VARCHAR'', 500, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA'',  ''SOMENTE_MASTER'',  4, '''', ''NO'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA'',  ''DATA_INICIAL_VENDAS'',  5, '''', ''YES'', ''DATETIME'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA'',  ''DATA_HORA_ULTIMA_CARGA'',  6, '''', ''YES'', ''DATETIME'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA'',  ''FILTRO'',  7, '''', ''YES'', ''VARCHAR'', 8000, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA'',  ''INATIVO'',  8, ''DEFAULT(0)'', ''NO'', ''BIT'', 0, 0, 0,0,'''')

 -- LJ_ETL_CARGA_COLUNA
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA_COLUNA'',  ''ID_TABELA_COLUNA'',  1, '''', ''NO'', ''INT'', 0, 10, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA_COLUNA'',  ''ID_TABELA'',  2, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA_COLUNA'',  ''COLUNA'',  3, '''', ''NO'', ''VARCHAR'', 200, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA_COLUNA'',  ''CHAVE'',  4, '''', ''NO'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA_COLUNA'',  ''TIPO_DADO'',  5, '''', ''NO'', ''NVARCHAR'', 26, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA_COLUNA'',  ''TAMANHO'',  6, '''', ''YES'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA_COLUNA'',  ''NUMERICO_PRECISAO'',  7, '''', ''YES'', ''TINYINT'', 0, 3, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CARGA_COLUNA'',  ''NUMERICO_ESCALA'',  8, '''', ''YES'', ''INT'', 0, 10, 0,0,'''')

 -- LJ_ETL_CONFERENCIA
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CONFERENCIA'',  ''ID'',  1, '''', ''NO'', ''INT'', 0, 10, 0,1,''IDENTITY(1,1)'')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CONFERENCIA'',  ''CODIGO_FILIAL'',  2, '''', ''NO'', ''NVARCHAR'', 6, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CONFERENCIA'',  ''FILIAL'',  3, '''', ''NO'', ''NVARCHAR'', 25, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_CONFERENCIA'',  ''DATA_MOVIMENTO'',  4, '''', ''NO'', ''DATETIME'', 0, 0, 0,0,'''')

 -- LJ_ETL_ESTATISTICA
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ESTATISTICA'',  ''CODIGO_FILIAL'',  1, '''', ''NO'', ''CHAR'', 6, 0, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ESTATISTICA'',  ''DATA_ESTATISTICA'',  2, '''', ''NO'', ''DATETIME'', 0, 0, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ESTATISTICA'',  ''ID_ETL_TIPO'',  3, '''', ''NO'', ''SMALLINT'', 0, 5, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ESTATISTICA'',  ''QTDE_PROCESSADA'',  4, ''DEFAULT(0)'', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ESTATISTICA'',  ''QTDE_ERRO'',  5, ''DEFAULT(0)'', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_ESTATISTICA'',  ''DATA_HORA_ULTIMO_PROCESSO'',  6, '''', ''YES'', ''DATETIME'', 0, 0, 0,0,'''')

 -- LJ_ETL_LOG
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG'',  ''ID_ETL_LOG'',  1, '''', ''NO'', ''INT'', 0, 10, 0,1,''IDENTITY(1,1)'')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG'',  ''CODIGO_FILIAL'',  2, '''', ''YES'', ''CHAR'', 6, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG'',  ''METODO'',  3, '''', ''NO'', ''VARCHAR'', 500, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG'',  ''ERRO'',  4, '''', ''YES'', ''TEXT'', '''', 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG'',  ''DATA_HORA_LOG'',  5, '''', ''YES'', ''DATETIME'', 0, 0, 0,0,'''')

 -- LJ_ETL_LOG_STATUS
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG_STATUS'',  ''ID_ETL_LOG_STATUS'',  1, '''', ''NO'', ''INT'', 0, 10, 0,1,''IDENTITY(1,1)'')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG_STATUS'',  ''CODIGO_FILIAL'',  2, '''', ''NO'', ''CHAR'', 6, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG_STATUS'',  ''ID_ETL_ARQUIVO'',  3, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG_STATUS'',  ''ID_ETL_TIPO'',  4, '''', ''NO'', ''SMALLINT'', 0, 5, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG_STATUS'',  ''COD_RETORNO'',  5, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG_STATUS'',  ''CRITICA_PROCESSO'',  6, '''', ''NO'', ''TEXT'', '''', 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_LOG_STATUS'',  ''XML_ARQUIVO'',  7, '''', ''YES'', ''TEXT'', '''', 0, 0,0,'''')

 -- LJ_ETL_MONITOR
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''CODIGO_FILIAL'',  1, '''', ''NO'', ''NVARCHAR'', 6, 0, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''FILIAL'',  2, '''', ''NO'', ''NVARCHAR'', 25, 0, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''EMPRESA'',  3, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''UF'',  4, '''', ''NO'', ''CHAR'', 2, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA'',  5, '''', ''NO'', ''INT'', 0, 10, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''MES'',  6, '''', ''NO'', ''INT'', 0, 10, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''ANO'',  7, '''', ''NO'', ''INT'', 0, 10, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA1'',  8, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA2'',  9, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA3'',  10, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA4'',  11, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA5'',  12, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA6'',  13, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA7'',  14, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA8'',  15, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA9'',  16, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA10'',  17, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA11'',  18, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA12'',  19, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA13'',  20, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA14'',  21, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA15'',  22, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA16'',  23, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA17'',  24, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA18'',  25, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA19'',  26, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA20'',  27, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA21'',  28, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA22'',  29, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA23'',  30, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA24'',  31, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA25'',  32, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA26'',  33, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA27'',  34, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA28'',  35, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA29'',  36, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA30'',  37, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''DIA31'',  38, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR'',  ''ID'',  39, '''', ''NO'', ''INT'', 0, 10, 0,1,''IDENTITY(1,1)'')

 -- LJ_ETL_MONITOR_DETALHES
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''CODIGO_FILIAL'',  1, '''', ''NO'', ''NVARCHAR'', 6, 0, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''FILIAL'',  2, '''', ''NO'', ''NVARCHAR'', 25, 0, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''LANCAMENTO_CAIXA'',  3, '''', ''YES'', ''NVARCHAR'', 7, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''MENSAGEM'',  4, '''', ''YES'', ''NVARCHAR(MAX)'', '''', 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''ID_ETL_ARQUIVO'',  5, ''DEFAULT(0)'', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''ID_ETL_PROCESSO'',  6, ''DEFAULT(0)'', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''TICKET'',  7, '''', ''YES'', ''NVARCHAR'', 8, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''TERMINAL'',  8, '''', ''YES'', ''NVARCHAR'', 3, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''STATUS_MOVIMENTO'',  9, '''', ''YES'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''ORIGEM'',  10, '''', ''YES'', ''NVARCHAR'', 100, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''DATA_PROCESSO'',  11, '''', ''YES'', ''DATETIME'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''DIA'',  12, '''', ''NO'', ''INT'', 0, 10, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''MES'',  13, '''', ''NO'', ''INT'', 0, 10, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''ANO'',  14, '''', ''NO'', ''INT'', 0, 10, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_MONITOR_DETALHES'',  ''ID'',  15, '''', ''NO'', ''INT'', 0, 10, 0,1,''IDENTITY(1,1)'')

 -- LJ_ETL_PROCESSO
 INSERT INTO @TABELAS VALUES (''LJ_ETL_PROCESSO'',  ''ID_ETL_PROCESSO'',  1, '''', ''NO'', ''INT'', 0, 10, 0,1,''IDENTITY(1,1)'')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_PROCESSO'',  ''CRITICA_PROCESSO'',  2, '''', ''YES'', ''TEXT'', '''', 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_PROCESSO'',  ''ID_ETL_ARQUIVO'',  3, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_PROCESSO'',  ''COD_RETORNO'',  4, ''DEFAULT(0)'', ''NO'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_PROCESSO'',  ''DATA_HORA_PROCESSO'',  5, '''', ''NO'', ''DATETIME'', 0, 0, 0,0,'''')

 -- LJ_ETL_REPOSITORIO
 INSERT INTO @TABELAS VALUES (''LJ_ETL_REPOSITORIO'',  ''ID'',  1, '''', ''NO'', ''BIGINT'', 0, 19, 0,1,''IDENTITY(1,1)'')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_REPOSITORIO'',  ''TABELA'',  2, '''', ''NO'', ''VARCHAR'', 50, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_REPOSITORIO'',  ''FILTRO'',  3, '''', ''NO'', ''VARCHAR'', 500, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_REPOSITORIO'',  ''ID_ETL_TIPO'',  4, '''', ''NO'', ''SMALLINT'', 0, 5, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_REPOSITORIO'',  ''INDICA_EXCLUSAO'',  5, '''', ''NO'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_REPOSITORIO'',  ''CODIGO_FILIAL'',  6, '''', ''YES'', ''CHAR'', 6, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_REPOSITORIO'',  ''DATA_HORA_CRIACAO'',  7, ''DEFAULT GETDATE()'', ''NO'', ''DATETIME'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_ETL_REPOSITORIO'',  ''VERSAO'',  8, '''', ''YES'', ''VARCHAR'', 50, 0, 0,0,'''')

 -- LJ_LX_ETL_TIPO
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''DESC_ETL_TIPO'',  1, '''', ''NO'', ''VARCHAR'', 40, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''EXCLUI_PROCESSO_CONCLUIDO'',  2, ''DEFAULT(0)'', ''NO'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''ID_ETL_TIPO'',  3, '''', ''NO'', ''SMALLINT'', 0, 5, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''INATIVO'',  4, ''DEFAULT(0)'', ''NO'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''ORIGEM'',  5, ''DEFAULT(1)'', ''NO'', ''TINYINT'', 0, 3, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''DESC_EAD'',  6, '''', ''YES'', ''VARCHAR'', 150, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''DESC_EAD_DESTINO'',  7, '''', ''YES'', ''VARCHAR'', 150, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''UTILIZA_LOTE'',  8, ''DEFAULT(0)'', ''NO'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''ULTIMO_LOTE'',  9, ''DEFAULT(0)'', ''YES'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''PERIODO_FECHAMENTO_LOTE'',  10, ''DEFAULT(0)'', ''YES'', ''INT'', 0, 10, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''DATA_HORA_ULTIMO_LOTE'',  11, '''', ''YES'', ''DATETIME'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''FILTRO'',  12, ''DEFAULT('''''''')'', ''YES'', ''TEXT'', '''', 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''INDICA_SOMENTE_MASTER'',  13, ''DEFAULT(0)'', ''NO'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''IND_SOMENTE_ENTIDADE_PRINCIPAL'',  14, ''DEFAULT(0)'', ''NO'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''TOTAL_REGISTROS_ARQUIVO'',  15, '''', ''YES'', ''TINYINT'', 0, 3, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''CTRL_EMPRESA'',  16, '''', ''YES'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''CTRL_REDE'',  17, '''', ''YES'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''CTRL_FILIAL'',  18, '''', ''YES'', ''BIT'', 0, 0, 0,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''INICIO_PROCESSAMENTO_LOTE'',  19, ''DEFAULT(0.0)'', ''NO'', ''DECIMAL'', 0, 5, 2,0,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO'',  ''FIM_PROCESSAMENTO_LOTE'',  20, ''DEFAULT(23.59)'', ''NO'', ''DECIMAL'', 0, 5, 2,0,'''')

 -- LJ_LX_ETL_TIPO_FILIAL
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO_FILIAL'',  ''ID_ETL_TIPO'',  1, '''', ''NO'', ''SMALLINT'', 0, 5, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO_FILIAL'',  ''CODIGO_FILIAL'',  2, '''', ''NO'', ''NVARCHAR'', 6, 0, 0,1,'''')
 INSERT INTO @TABELAS VALUES (''LJ_LX_ETL_TIPO_FILIAL'',  ''ULTIMO_LOTE'',  3, '''', ''NO'', ''INT'', 0, 10, 0,0,'''')

 -- LJ_ETL_TIPO_COMPONENTE
 INSERT INTO @TABELAS VALUES(''LJ_ETL_TIPO_COMPONENTE'',''ID_ETL_TIPO_COMPONENTE'',''1'','''',''NO'',''SMALLINT'',''0'',''5'',''0'',''1'',''IDENTITY(1,1)'')
 INSERT INTO @TABELAS VALUES(''LJ_ETL_TIPO_COMPONENTE'',''ID_ETL_TIPO'',''2'','''',''NO'',''SMALLINT'',''0'',''5'',''0'',''0'','''')
 INSERT INTO @TABELAS VALUES(''LJ_ETL_TIPO_COMPONENTE'',''DESC_EAD'',''3'','''',''YES'',''VARCHAR'',''150'',''0'',''0'',''0'','''')
 INSERT INTO @TABELAS VALUES(''LJ_ETL_TIPO_COMPONENTE'',''DESC_EAD_DESTINO'',''4'','''',''YES'',''VARCHAR'',''150'',''0'',''0'',''0'','''')
 INSERT INTO @TABELAS VALUES(''LJ_ETL_TIPO_COMPONENTE'',''VERSAO'',''5'','''',''YES'',''VARCHAR'',''150'',''0'',''0'',''0'','''')
 INSERT INTO @TABELAS VALUES(''LJ_ETL_TIPO_COMPONENTE'',''INATIVO'',''6'','''',''NO'',''BIT'','''',''0'',''0'',''0'','''')

 -- LJ_ETL_VERSAO_LOJA
 INSERT INTO @TABELAS VALUES(''LJ_ETL_VERSAO_LOJA'',''ID_VERSAO_LOJA'',''1'','''',''NO'',''INT'','''','''',''0'',''1'',''IDENTITY(1,1)'')
 INSERT INTO @TABELAS VALUES(''LJ_ETL_VERSAO_LOJA'',''VERSAO'',''2'','''',''YES'',''VARCHAR'',''50'',''0'',''0'','''','''')
 INSERT INTO @TABELAS VALUES(''LJ_ETL_VERSAO_LOJA'',''CODIGO_FILIAL'',''3'','''',''NO'',''CHAR'',''6'',''0'',''0'','''','''')
 INSERT INTO @TABELAS VALUES(''LJ_ETL_VERSAO_LOJA'',''FILIAL'',''4'','''',''YES'',''VARCHAR'',''50'',''0'',''0'','''','''')
 INSERT INTO @TABELAS VALUES(''LJ_ETL_VERSAO_LOJA'',''INATIVO'',''5'',''DEFAULT (0)'',''YES'',''BIT'','''',''0'',''0'',''0'','''')


 -- LJ_ETL_INSTANCIA 

INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA'',''ID_ETL_INSTANCIA'',''1'','''',''NO'',''smallint'','''','''','''',''1'','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA'',''DESCRICAO'',''2'','''',''NO'',''VARCHAR'',''50'',''0'',''0'',''0'','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA'',''FATOR_PROCESSADOR'',''3'',''DEFAULT (10)'',''NO'',''smallint'','''','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA'',''PERIODO_ARQUIVO'',''4'',''DEFAULT (0)'',''NO'',''smallint'','''','''','''','''','''')

 -- LJ_ETL_INSTANCIA_ACAO 

INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA_ACAO'',''ID_ETL_INSTANCIA_ACAO'',''1'','''',''NO'',''smallint'','''','''','''',''1'','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA_ACAO'',''ID_ETL_INSTANCIA'',''2'','''',''NO'',''smallint'','''','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA_ACAO'',''DESCRICAO'',''3'','''',''NO'',''VARCHAR'',''50'',''0'',''0'',''0'','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA_ACAO'',''QTDE_REGISTRO'',''4'',''DEFAULT (100)'',''NO'',''smallint'','''','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA_ACAO'',''QTDE_REPETICAO'',''5'',''DEFAULT (1000)'',''NO'',''smallint'','''','''','''','''','''')


-- LJ_ETL_INSTANCIA_ACAO_TIPO 

INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA_ACAO_TIPO'',''ID_ETL_INSTANCIA_ACAO'',''1'','''',''NO'',''smallint'','''','''','''',''1'','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA_ACAO_TIPO'',''ID_ETL_TIPO'',''2'','''',''NO'',''smallint'','''','''','''',''1'','''')

-- LJ_ETL_INSTANCIA_LOJA

INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA_LOJA'',''ID_ETL_INSTANCIA'',''1'','''',''NO'',''smallint'','''','''','''',''1'','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_INSTANCIA_LOJA'',''CODIGO_FILIAL'',''2'','''',''NO'',''CHAR'',''6'','''','''',''1'','''')

--- LJ_ETL_ESTATISTICA_ARQUIVO

INSERT INTO @TABELAS VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''ID_ETL_ESTATISTICA_ARQUIVO'',''1'','''',''NO'',''INT'','''','''','''',''1'',''IDENTITY(1,1)'')
INSERT INTO @TABELAS VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''ID_ETL_TIPO'',''2'','''',''NO'',''smallint'','''','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''ID_ETL_ARQUIVO'',''3'','''',''YES'',''INT'','''','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''CODIGO_FILIAL'',''4'','''',''NO'',''CHAR'',''6'','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''DATA_ESTATISTICA'',''5'',''DEFAULT (getdate())'',''NO'',''datetime'','''','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''DATA_HORA_INICIO'',''6'',''DEFAULT (getdate())'',''NO'',''datetime'','''','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''DATA_HORA_FIM'',''7'','''',''NO'',''datetime'','''','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''QTDE_REGISTROS'',''8'','''',''NO'',''INT'','''','''','''','''','''')
INSERT INTO @TABELAS VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''SUCESSO'',''9'',''DEFAULT (1)'',''NO'',''BIT'','''','''','''','''','''')


 -------------------------------------------------------------------------------------------------------
 --------------------------- ESTRUTURA DE NOMES DAS TABELAS------------------------------------------------
 -------------------------------------------------------------------------------------------------------
 DECLARE @TABELA TABLE (TABLE_NAME VARCHAR(100))
 INSERT INTO @TABELA VALUES (''LJ_ETL_ARQUIVO'')

 -- LJ_ETL_CARGA
 INSERT INTO @TABELA VALUES (''LJ_ETL_CARGA'')

 -- LJ_ETL_CARGA_COLUNA
 INSERT INTO @TABELA VALUES (''LJ_ETL_CARGA_COLUNA'')

 -- LJ_ETL_CONFERENCIA
 INSERT INTO @TABELA VALUES (''LJ_ETL_CONFERENCIA'')

 -- LJ_ETL_ESTATISTICA
 INSERT INTO @TABELA VALUES (''LJ_ETL_ESTATISTICA'')

 -- LJ_ETL_LOG
 INSERT INTO @TABELA VALUES (''LJ_ETL_LOG'')

 -- LJ_ETL_LOG_STATUS
 INSERT INTO @TABELA VALUES (''LJ_ETL_LOG_STATUS'')

 -- LJ_ETL_MONITOR
 INSERT INTO @TABELA VALUES (''LJ_ETL_MONITOR'')

 -- LJ_ETL_MONITOR_DETALHES
 INSERT INTO @TABELA VALUES (''LJ_ETL_MONITOR_DETALHES'')

 -- LJ_ETL_PROCESSO
 INSERT INTO @TABELA VALUES (''LJ_ETL_PROCESSO'')

 -- LJ_ETL_REPOSITORIO
 INSERT INTO @TABELA VALUES (''LJ_ETL_REPOSITORIO'')

 -- LJ_LX_ETL_TIPO
 INSERT INTO @TABELA VALUES (''LJ_LX_ETL_TIPO'')

 -- LJ_LX_ETL_TIPO_FILIAL
 INSERT INTO @TABELA VALUES (''LJ_LX_ETL_TIPO_FILIAL'')

 -- LJ_ETL_TIPO_COMPONENTE
 INSERT INTO @TABELA VALUES (''LJ_ETL_TIPO_COMPONENTE'')

 -- LJ_ETL_VERSAO_LOJA
 INSERT INTO @TABELA VALUES (''LJ_ETL_VERSAO_LOJA'')

 -- LJ_ETL_INSTANCIA
 INSERT INTO @TABELA VALUES (''LJ_ETL_INSTANCIA'')


 -- LJ_ETL_INSTANCIA_ACAO
 INSERT INTO @TABELA VALUES (''LJ_ETL_INSTANCIA_ACAO'')

 
 -- LJ_ETL_INSTANCIA_ACAO_TIPO
 INSERT INTO @TABELA VALUES (''LJ_ETL_INSTANCIA_ACAO_TIPO'')

  -- LJ_ETL_INSTANCIA_LOJA
 INSERT INTO @TABELA VALUES (''LJ_ETL_INSTANCIA_LOJA'')
 
 --- LJ_ETL_ESTATISTICA_ARQUIVO
 INSERT INTO @TABELA VALUES (''LJ_ETL_ESTATISTICA_ARQUIVO'')



 -------------------------------------------------------------------------------------------------------
 --------------------------- ESTRUTURA DAS  FOREIGN KEY ------------------------------------------------
 -------------------------------------------------------------------------------------------------------
 DECLARE @FOREIGNKEY TABLE (TABLE_NAME VARCHAR(100)
       , CONSTRAINT_NAME VARCHAR(100)      
       , FOREIGNKEY_NAME VARCHAR(100)
       ,REFERENCES_NAME VARCHAR(100)
       )

 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_ARQUIVO'',''FK_LJ_ETL_ARQUIVO_LJ_LX_ETL_TIPO'',''ID_ETL_TIPO'',''LJ_LX_ETL_TIPO'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_CARGA_COLUNA'',''FK_LJ_ETL_CARGA_COLUNA_LJ_ETL_CARGA'',''ID_TABELA'',''LJ_ETL_CARGA'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_ESTATISTICA'',''XFK2777_LJ_ETL_ESTATISTICA'',''ID_ETL_TIPO'',''LJ_LX_ETL_TIPO'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_PROCESSO'',''XFK2590_LJ_ETL_PROCESSO'',''ID_ETL_ARQUIVO'',''LJ_ETL_ARQUIVO'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_LX_ETL_TIPO_FILIAL'',''FK_LJ_LX_ETL_TIPO_FILIAL_LJ_LX_ETL_TIPO'',''ID_ETL_TIPO'',''LJ_LX_ETL_TIPO'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_ARQUIVO'',''FK_LJ_ETL_ARQUIVO_LOJAS_VAREJO'',''CODIGO_FILIAL'',''LOJAS_VAREJO'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_ESTATISTICA'',''FK_LJ_ETL_ESTATISTICA_LOJAS_VAREJO'',''CODIGO_FILIAL'',''LOJAS_VAREJO'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_TIPO_COMPONENTE'',''FK_LJ_ETL_TIPO_COMPONENTE_LJ_LX_ETL_TIPO'',''ID_ETL_TIPO'',''LJ_LX_ETL_TIPO'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_INSTANCIA_ACAO'',''FK_LJ_ETL_INSTANCIA_ACAO_LJ_ETL_INSTANCIA'',''ID_ETL_INSTANCIA'',''LJ_ETL_INSTANCIA'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_INSTANCIA_ACAO_TIPO'',''FK_LJ_ETL_INSTANCIA_ACAO_TIPO_LJ_ETL_INSTANCIA_ACAO'',''ID_ETL_INSTANCIA_ACAO'',''LJ_ETL_INSTANCIA_ACAO'')
 INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_INSTANCIA_LOJA'',''FK_LJ_ETL_INSTANCIA_LOJA_LJ_ETL_INSTANCIA'',''ID_ETL_INSTANCIA'',''LJ_ETL_INSTANCIA'')

 --INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''FK_LJ_ETL_ESTATISTICA_ARQUIVO_LJ_ETL_ARQUIVO'',''ID_ETL_ARQUIVO'',''LJ_ETL_ARQUIVO'')
 --- comentado pois criamos esta fk no script 004
 --INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''FK_LJ_ETL_ESTATISTICA_ARQUIVO_LJ_LX_ETL_TIPO'',''ID_ETL_TIPO'',''LJ_LX_ETL_TIPO'')
 --INSERT INTO @FOREIGNKEY VALUES(''LJ_ETL_ESTATISTICA_ARQUIVO'',''FK_LJ_ETL_ESTATISTICA_ARQUIVO_LOJAS_VAREJO'',''CODIGO_FILIAL'',''LOJAS_VAREJO'')



 -------------------------------------------------------------------------------------------------------
 --------------------------- ESTRUTURA DOS  INDEX ------------------------------------------------
 -------------------------------------------------------------------------------------------------------

 DECLARE @INDEX_TABLE TABLE (INDEX_NAME VARCHAR(100)
       ,TABLE_NAME VARCHAR(100)      
       , COLUMN_NAME VARCHAR(100)
       , INCLUDE_NAME VARCHAR(500 )
       )

 INSERT INTO @INDEX_TABLE VALUES(''IX_ID_ETL_TIPO'',''LJ_ETL_ARQUIVO'',''ID_ETL_TIPO'','''')

 INSERT INTO @INDEX_TABLE VALUES(''IX_LJ_ETL_ARQUIVO'',''LJ_ETL_ARQUIVO'',''CODIGO_FILIAL ASC,VERSAO ASC,PRIORIDADE'',''[DATA_HORA_PROXIMO_PROCESSO],[ID_ETL_TIPO],[PROCESSADO]'')

 INSERT INTO @INDEX_TABLE VALUES(''IX_ID_ETL_ARQUIVO'',''LJ_ETL_PROCESSO'',''ID_ETL_ARQUIVO'',''[COD_RETORNO]'')

 INSERT INTO @INDEX_TABLE VALUES(''IX_FILTRO'',''LJ_ETL_REPOSITORIO'',''FILTRO'','''')

 INSERT INTO @INDEX_TABLE VALUES(''IX_ID_ETL_TIPO'',''LJ_ETL_REPOSITORIO'',''ID_ETL_TIPO'','''')

 INSERT INTO @INDEX_TABLE VALUES(''IX_TABELA_DATA_HORA_CRIACAO'',''LJ_ETL_REPOSITORIO'',''TABELA ASC,DATA_HORA_CRIACAO'',''[FILTRO],[ID_ETL_TIPO]'')

 INSERT INTO @INDEX_TABLE VALUES(''IX_LJ_ETL_ESTATISTICA'',''LJ_ETL_ESTATISTICA'',''CODIGO_FILIAL ASC,DATA_ESTATISTICA ASC,ID_ETL_TIPO'','''')

 INSERT INTO @INDEX_TABLE VALUES(''IX_LJ_ETL_INSTANCIA'',''LJ_ETL_INSTANCIA_ACAO'',''ID_ETL_INSTANCIA'','''')
  
 INSERT INTO @INDEX_TABLE VALUES(''IX_ETL_TIPO'',''LJ_ETL_INSTANCIA_ACAO_TIPO'',''ID_ETL_TIPO'','''')

 INSERT INTO @INDEX_TABLE VALUES(''IX_ORIGEM_INATIVO'',''LJ_LX_ETL_TIPO'',''INATIVO,ORIGEM'','''')
 INSERT INTO @INDEX_TABLE VALUES(''IX_ETL_TIPO'',''LJ_ETL_TIPO_COMPONENTE'',''INATIVO,DESC_EAD_DESTINO,DESC_EAD,VERSAO'','''')


 --tabela de outro sistema
 --INSERT INTO @INDEX_TABLE VALUES(''IX_LOJAS_ENTRADAS_ETL'',''LOJA_ENTRADAS'',''ENTRADA_CONFERIDA'',''[ROMANEIO_PRODUTO],[FILIAL]'')
 --


 --/*
 ----------------------------------------------------------------------------------------------------------------------------------------------------------
 ---- CRIAÇÃO DOS CAMPOS PARA ATUALIZAÇÃO DA VERSÃO
 ----------------------------------------------------------------------------------------------------------------------------------------------------------
 --*/


 DECLARE @TABLE_NAME VARCHAR(100)
 SET  @TABLE_NAME = ''''
 DECLARE @EXCLUIU BIT
 SET @EXCLUIU = 0
   
 DECLARE curTables CURSOR FOR
 SELECT  *
  FROM @TABELA

 OPEN curTables

 FETCH NEXT FROM curTables INTO @TABLE_NAME
        
 WHILE @@FETCH_STATUS = 0
 BEGIN

  DECLARE @SQLEXEC VARCHAR(MAX)
  SET @SQLEXEC = ''''

  --SE NAO EXISTIR A TABELA, ELE CRIA. ELSE DELETA TODAS AS CONS,FORN E PRIM
  IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N''[dbo].[''+ @TABLE_NAME +'']'') AND type in (N''U''))
   BEGIN
   
    SET @SQLEXEC = ''CREATE TABLE [dbo].[''+ @TABLE_NAME +'']( ''
    
    DECLARE
    --@TABLE_NAME  
    @COLUMN_NAME VARCHAR(100)
    , @ORDINAL_POSITION INT
    , @COLUMN_DEFAULT VARCHAR(100)
    , @IS_NULLABLE VARCHAR(10)
    , @DATA_TYPE VARCHAR(100)
    , @CHARACTER_MAXIMUM_LENGTH INT
    , @NUMERIC_PRECISION INT
    , @NUMERIC_SCALE INT
    , @PRIMARYKEY INT
    , @IDENT VARCHAR(100)

    DECLARE curTablesCol CURSOR FOR
    SELECT  *
     FROM @TABELAS T WHERE T.TABLE_NAME = @TABLE_NAME

    DECLARE @TOTALCOLUNA INT
    SET @TOTALCOLUNA = 0
    SET @TOTALCOLUNA = (SELECT COUNT(TAB.COLUMN_NAME) FROM @TABELAS TAB WHERE TAB.TABLE_NAME = @TABLE_NAME)
    DECLARE @CONTADOR  AS INT
    SET @CONTADOR = 0

    OPEN curTablesCol

    FETCH NEXT FROM curTablesCol INTO @TABLE_NAME
            , @COLUMN_NAME
            , @ORDINAL_POSITION
            , @COLUMN_DEFAULT
            , @IS_NULLABLE
            , @DATA_TYPE
            , @CHARACTER_MAXIMUM_LENGTH
            , @NUMERIC_PRECISION
            , @NUMERIC_SCALE
            , @PRIMARYKEY
            , @IDENT

    WHILE @@FETCH_STATUS = 0
    BEGIN
     SET @CONTADOR = @CONTADOR + 1

     SET @SQLEXEC = @SQLEXEC + @COLUMN_NAME
     IF(@CHARACTER_MAXIMUM_LENGTH = 0 AND UPPER(@DATA_TYPE) != ''DECIMAL'' AND UPPER(@DATA_TYPE) != ''NUMERIC'')
      BEGIN
       SET @SQLEXEC = @SQLEXEC + '' '' + @DATA_TYPE
      END
     ELSE
      BEGIN
       IF(UPPER(@DATA_TYPE) = ''DECIMAL'' OR UPPER(@DATA_TYPE) = ''NUMERIC'')
        BEGIN
         SET @SQLEXEC = @SQLEXEC + '' '' + @DATA_TYPE + ''('' + CAST(@NUMERIC_PRECISION AS VARCHAR) + '','' + CAST(@NUMERIC_SCALE AS VARCHAR) + '')''
        END
       ELSE
        BEGIN
         SET @SQLEXEC = @SQLEXEC + '' '' + @DATA_TYPE + ''('' + CAST(@CHARACTER_MAXIMUM_LENGTH AS VARCHAR) + '')''
        END
      END

     IF(@IDENT != '''')
      BEGIN
       SET @SQLEXEC = @SQLEXEC + '' '' + @IDENT
      END
     IF(@COLUMN_DEFAULT != '''')
      BEGIN
       SET @SQLEXEC = @SQLEXEC + '' CONSTRAINT [DF_'' + @TABLE_NAME + ''_'' + @COLUMN_NAME + ''] '' + @COLUMN_DEFAULT
      END
     IF(UPPER(@IS_NULLABLE) = ''YES'')
      BEGIN
       SET @SQLEXEC = @SQLEXEC + '' '' + ''NULL''
      END     
     ELSE
      BEGIN
       SET @SQLEXEC = @SQLEXEC + '' '' + ''NOT NULL''
      END
              
     SET @SQLEXEC = @SQLEXEC + '','' 
         
     IF(@TOTALCOLUNA = @CONTADOR)
      BEGIN
       DECLARE @PRIMARY VARCHAR(MAX)
       SET @PRIMARY = ''''
          
       IF((SELECT COUNT(P.COLUMN_NAME) FROM @TABELAS P WHERE P.TABLE_NAME = @TABLE_NAME AND P.PRIMARYKEY = 1) >= 2)
        BEGIN
         SELECT @PRIMARY =  @PRIMARY +  COALESCE(P.COLUMN_NAME, '''') + '','' FROM @TABELAS P WHERE P.TABLE_NAME = @TABLE_NAME AND P.PRIMARYKEY = 1
         set  @PRIMARY = SUBSTRING(@PRIMARY,1, LEN(@PRIMARY)-1)
        END
       ELSE
        BEGIN
         SET @PRIMARY = (SELECT P.COLUMN_NAME FROM @TABELAS P WHERE P.TABLE_NAME = @TABLE_NAME AND P.PRIMARYKEY = 1)
        END

       SET @SQLEXEC = @SQLEXEC + ''CONSTRAINT [PK_''+ @TABLE_NAME +''] PRIMARY KEY CLUSTERED 
          (
           ''+ @PRIMARY + '' ASC
          )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY])'' 

       --SET @SQLEXEC = SUBSTRING(@SQLEXEC,1, LEN(@SQLEXEC)-1)
          
      
       EXEC(@SQLEXEC)
      END

     FETCH NEXT FROM curTablesCol INTO @TABLE_NAME
     , @COLUMN_NAME
     , @ORDINAL_POSITION
     , @COLUMN_DEFAULT
     , @IS_NULLABLE
     , @DATA_TYPE
     , @CHARACTER_MAXIMUM_LENGTH
     , @NUMERIC_PRECISION
     , @NUMERIC_SCALE
     , @PRIMARYKEY
     , @IDENT

    END
        
    CLOSE curTablesCol;
    DEALLOCATE curTablesCol;
       
   END -- END DO BEGIN DO IF NOT EXISTE TABELA

  ELSE -- ELSE(JA EXISTE A TABELA)

   BEGIN

     IF(@EXCLUIU != 1)
     BEGIN

      --------------------------------------------------------------------------------------------------------------------------------------------------------
      ----------------------------------- EXCLUSÃO DOS ÍNDICES -----------------------------------------------------------------------------------------------
      --------------------------------------------------------------------------------------------------------------------------------------------------------

      PRINT(''EXCLUSÃO DOS ÍNDICES '')
      BEGIN

       DECLARE @INDEX_NAME_INDEX VARCHAR(100)
       SET @INDEX_NAME_INDEX =''''
       DECLARE curNOMEI CURSOR FOR
       SELECT T.INDEX_NAME FROM @INDEX_TABLE T
           
       OPEN curNOMEI

       FETCH NEXT FROM curNOMEI INTO @INDEX_NAME_INDEX

       WHILE @@FETCH_STATUS = 0
       BEGIN


        DECLARE @TableNamei VARCHAR(1000), @IndexNameI VARCHAR(1000)

        DECLARE curIndices CURSOR FOR
        SELECT  ISNULL(OBJECT_NAME(object_id), '''') As TableNamei, ISNULL(name, '''') As IndexNameI
         FROM sys.indexes 
         WHERE name = @INDEX_NAME_INDEX                
           AND is_primary_key = 0
         ORDER BY 1, 2

        OPEN curIndices

        FETCH NEXT FROM curIndices INTO @TableNamei, @IndexNameI

         WHILE @@FETCH_STATUS = 0
          BEGIN
           IF (@IndexNameI <> '''' AND @TableNamei <> '''')
            BEGIN
             EXEC (''DROP INDEX '' + @IndexNameI + '' ON [dbo].['' + @TableNamei + '']'')
            END

           FETCH NEXT FROM curIndices INTO @TableNamei, @IndexNameI

          END
                
          CLOSE curIndices;
          DEALLOCATE curIndices;

          FETCH NEXT FROM curNOMEI INTO @INDEX_NAME_INDEX

       END
      
       CLOSE curNOMEI;
       DEALLOCATE curNOMEI;

       --// trecho adicionado para remover index antigo
       IF EXISTS(SELECT ISNULL(OBJECT_NAME(object_id), '''') As TableNamei, ISNULL(name, '''') As IndexNameI FROM sys.indexes WHERE name = ''XFK2590_LJ_ETL_PROCESSO'' AND is_primary_key = 0)              
       BEGIN
        EXEC (''DROP INDEX '' + ''XFK2590_LJ_ETL_PROCESSO'' + '' ON [dbo].['' + ''LJ_ETL_PROCESSO'' + '']'')
       END
       
      END
      PRINT(''EXCLUSÃO DOS ÍNDICES CONCLUIDO'')


      --------------------------------------------------------------------------------------------------------------------------------------------------------
      ----------------------------------- EXCLUSÃO DAS FOREN KEY----------------------------------------------------------------------------------------------
      --------------------------------------------------------------------------------------------------------------------------------------------------------

      PRINT(''EXCLUSÃO DAS FOREN KEY '')    
      BEGIN
       DECLARE @NOMETABELAF VARCHAR(100)
       SET @NOMETABELAF =''''
       
       DECLARE curNOMEF CURSOR FOR
       SELECT T.TABLE_NAME FROM @TABELA T
       
       OPEN curNOMEF

       FETCH NEXT FROM curNOMEF INTO @NOMETABELAF

       WHILE @@FETCH_STATUS = 0
       BEGIN

         
        DECLARE @TableNameFK VARCHAR(1000), @ForenkeyNameFK VARCHAR(1000)

        DECLARE curForenKey CURSOR FOR
        SELECT  ISNULL(OBJECT_NAME(parent_object_id), '''') As TableNameFK, ISNULL(name, '''') As ForenkeyNameFK
         FROM sys.objects 
         WHERE parent_object_id IN (OBJECT_ID(@NOMETABELAF)
           ) 
           AND type = ''F''
         ORDER BY 1, 2

        OPEN curForenKey

        FETCH NEXT FROM curForenKey INTO @TableNameFK, @ForenkeyNameFK

        WHILE @@FETCH_STATUS = 0
        BEGIN

         IF (@TableNameFK <> '''' AND @ForenkeyNameFK <> '''')
          BEGIN
           EXEC (''ALTER TABLE [dbo].['' + @TableNameFK + ''] DROP CONSTRAINT ['' + @ForenkeyNameFK + '']'')
          END

         FETCH NEXT FROM curForenKey INTO @TableNameFK, @ForenkeyNameFK

        END
   
        CLOSE curForenKey;
        DEALLOCATE curForenKey;

        FETCH NEXT FROM curNOMEF INTO @NOMETABELAF

       END
   
       CLOSE curNOMEF;
       DEALLOCATE curNOMEF;
      END  
      PRINT(''EXCLUSÃO DAS FOREN KEY CONCLUIDO '')


      ----------------------------------------------------------------------------------------------------------------------------------------------------------
      ----------------------------------- EXCLUSÃO DAS CONSTRAINT''S DOS DEFAULT''s ------------------------------------------------------------------------------
      ----------------------------------------------------------------------------------------------------------------------------------------------------------

      PRINT(''EXCLUSÃO DAS CONSTRAINTS DOS DEFAULTs'')
      BEGIN
       DECLARE @NOMETABELACD VARCHAR(100)
       SET @NOMETABELACD =''''

       DECLARE curNOMECD CURSOR FOR
       SELECT T.TABLE_NAME FROM @TABELA T
             
       OPEN curNOMECD

       FETCH NEXT FROM curNOMECD INTO @NOMETABELACD

       WHILE @@FETCH_STATUS = 0
       BEGIN
        DECLARE @TableNameC VARCHAR(1000), @DefaultNameC VARCHAR(1000)

        DECLARE curDefaults CURSOR FOR
        SELECT  ISNULL(OBJECT_NAME(parent_object_id), '''') As TableNameC, ISNULL(name, '''') As DefaultNameC
         FROM sys.objects 
         WHERE parent_object_id IN (
            OBJECT_ID(@NOMETABELACD)
           ) 
           AND type = ''D''
         ORDER BY 1, 2

        OPEN curDefaults

        FETCH NEXT FROM curDefaults INTO @TableNameC, @DefaultNameC

        WHILE @@FETCH_STATUS = 0
        BEGIN

         IF (@TableNameC <> '''' AND @DefaultNameC <> '''')
          BEGIN
           EXEC (''ALTER TABLE [dbo].['' + @TableNameC + ''] DROP CONSTRAINT ['' + @DefaultNameC + '']'')
          END

         FETCH NEXT FROM curDefaults INTO @TableNameC, @DefaultNameC

        END
         
        CLOSE curDefaults;
        DEALLOCATE curDefaults;

        FETCH NEXT FROM curNOMECD INTO @NOMETABELACD

       END -- end begin while do curNomeCD

       CLOSE curNOMECD;
       DEALLOCATE curNOMECD;
      END         
      PRINT(''EXCLUSÃO DAS CONSTRAINTS DOS DEFAULTs CONCLUIDO'')



      --------------------------------------------------------------------------------------------------------------------------------------------------------
      ----------------------------------- EXCLUSÃO DAS CONSTRAINTS PK GERAL ----------------------------------------------------------------------------------------------
      --------------------------------------------------------------------------------------------------------------------------------------------------------

       
      PRINT(''EXCLUSÃO DAS CONSTRAINTS PK Geral '')
      BEGIN
       DECLARE @TABLE_NAMEGeral VARCHAR(100)
       SET @TABLE_NAMEGeral = ''''
       DECLARE curTABELAEXPKGERAL CURSOR FOR
       SELECT * FROM @TABELA

       OPEN curTABELAEXPKGERAL
 
       FETCH NEXT FROM curTABELAEXPKGERAL INTO @TABLE_NAMEGeral
              
       WHILE @@FETCH_STATUS = 0 
       BEGIN
        IF EXISTS(SELECT * FROM sys.objects WHERE parent_object_id = OBJECT_ID(N''[dbo].[''+ @TABLE_NAMEGeral+'']'') AND TYPE = ''PK'') 
        BEGIN 
         DECLARE @SQLEXECEXCONSTRAINTGERAL VARCHAR(MAX)
         SET @SQLEXECEXCONSTRAINTGERAL = ''''
         DECLARE @IndexNameGeral VARCHAR(1000)
  
         DECLARE curExcluir CURSOR FOR
         SELECT name as IndexNameGeral FROM sys.objects WHERE parent_object_id = OBJECT_ID(N''[dbo].[''+ @TABLE_NAMEGeral+'']'') AND TYPE = ''PK''
  
         OPEN curExcluir

         FETCH NEXT FROM curExcluir INTO @IndexNameGeral
         WHILE @@FETCH_STATUS = 0
         BEGIN
         IF (@IndexNameGeral <> '''')
          SET @SQLEXECEXCONSTRAINTGERAL = ''ALTER TABLE [dbo].['' +@TABLE_NAMEGeral+''] DROP CONSTRAINT [''+ @IndexNameGeral + '']''

          EXEC(@SQLEXECEXCONSTRAINTGERAL)
          FETCH NEXT FROM curExcluir INTO @IndexNameGeral

         END
  
         CLOSE curExcluir;
         DEALLOCATE curExcluir;

        END

        FETCH NEXT FROM curTABELAEXPKGERAL INTO @TABLE_NAMEGeral 

       END  

       CLOSE curTABELAEXPKGERAL;
       DEALLOCATE curTABELAEXPKGERAL;

      END
      PRINT(''EXCLUSÃO DAS CONSTRAINTS PK Geral CONCLUIDO '')


      --------------------------------------------------------------------------------------------------------------------------------------------------------
      ----------------------------------- EXCLUSÃO DAS CONSTRAINTS PK ----------------------------------------------------------------------------------------------
      --------------------------------------------------------------------------------------------------------------------------------------------------------
     
      PRINT(''EXCLUSÃO DAS CONSTRAINTS PK '')
      BEGIN

       DECLARE @TABLE_NAMEConsPK VARCHAR(100)
       SET @TABLE_NAMEConsPK = '''' 
       DECLARE curTABELAEXPK CURSOR FOR
       SELECT * FROM @TABELA

      
       OPEN curTABELAEXPK
 
       FETCH NEXT FROM curTABELAEXPK INTO @TABLE_NAMEConsPK
                    
              
       WHILE @@FETCH_STATUS = 0 
       BEGIN
        IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N''[dbo].[PK_''+ @TABLE_NAMEConsPK + '']'') AND parent_object_id = OBJECT_ID(N''[dbo].[''+ @TABLE_NAMEConsPK+'']'') AND TYPE = ''PK'') 
        BEGIN 
        DECLARE @SQLEXECEXCONSTRAINTPK VARCHAR(MAX)
        SET @SQLEXECEXCONSTRAINTPK = ''''
  
        SET @SQLEXECEXCONSTRAINTPK = ''ALTER TABLE [dbo].['' +@TABLE_NAMEConsPK+''] DROP CONSTRAINT [PK_''+ @TABLE_NAMEConsPK+ '']''

        EXEC(@SQLEXECEXCONSTRAINTPK)
  
        END

        FETCH NEXT FROM curTABELAEXPK INTO @TABLE_NAMEConsPK 

       END  

       CLOSE curTABELAEXPK;
       DEALLOCATE curTABELAEXPK;

      END
      PRINT(''EXCLUSÃO DAS CONSTRAINTS PK CONCLUIDO '')

      --------------------------------------------------------------------------------------------------------------------------------------------------------
      ----------------------------------- EXCLUSÃO DOS CAMPOS QU NÂO SERÂO MAIS USADOS ----------------------------------------------------------------------------------------------
      --------------------------------------------------------------------------------------------------------------------------------------------------------

       
      PRINT(''EXCLUSÃO DOS CAMPOS'')
      BEGIN
       DECLARE @TABLE_NAME_EX_C VARCHAR(100)
       SET  @TABLE_NAME_EX_C= '''' 
       DECLARE @COLUMN_NAME_EX_C VARCHAR(100)
       SET @COLUMN_NAME_EX_C = '''' 
       DECLARE curTABELACAMPOS CURSOR FOR
       SELECT  TABLE_NAME, COLUMN_NAME
        FROM INFORMATION_SCHEMA.COLUMNS 
        WHERE TABLE_NAME IN (SELECT DISTINCT TABLE_NAME FROM @TABELAS)
          AND COLUMN_NAME NOT IN (SELECT COLUMN_NAME FROM @TABELAS)

       OPEN curTABELACAMPOS
 
       FETCH NEXT FROM curTABELACAMPOS INTO @TABLE_NAME_EX_C, @COLUMN_NAME_EX_C
                   
              
       WHILE @@FETCH_STATUS = 0 
       BEGIN
        DECLARE @SQLEXECEXCAMPOS VARCHAR(MAX)
        SET @SQLEXECEXCAMPOS = ''''
  
        SET @SQLEXECEXCAMPOS = ''ALTER TABLE [dbo].['' +@TABLE_NAME_EX_C+''] DROP COLUMN [''+ @COLUMN_NAME_EX_C + '']''

        PRINT(''EXCLUINDO CAMPO '' +@TABLE_NAME_EX_C+''.''+@COLUMN_NAME_EX_C)

        EXEC(@SQLEXECEXCAMPOS)
  
        FETCH NEXT FROM curTABELACAMPOS INTO @TABLE_NAME_EX_C, @COLUMN_NAME_EX_C

       END  

       CLOSE curTABELACAMPOS;
       DEALLOCATE curTABELACAMPOS;
      END
      PRINT(''EXCLUSÃO DOS CAMPOS CONCLUÍDO'')

      --------------------------------------------------------------------------------------------------------------------------------------------------------
      --------------------------------------------------------------------------------------------------------------------------------------------------------
      --------------------------------------------------------------------------------------------------------------------------------------------------------

      SET @EXCLUIU = 1
 
     END -- end begin do if excluiu

     PRINT(''CRIAÇÃO DAS COLUNAS'')

     DECLARE @TABLE_NAMEAlter VARCHAR(100)    
       ,@COLUMN_NAMEAlter VARCHAR(100)
       ,@ORDINAL_POSITIONAlter INT
       ,@COLUMN_DEFAULTAlter VARCHAR(100)
       ,@IS_NULLABLEAlter VARCHAR(10)
       ,@DATA_TYPEAlter VARCHAR(100)
       ,@CHARACTER_MAXIMUM_LENGTHAlter INT
       ,@NUMERIC_PRECISIONAlter INT
       ,@NUMERIC_SCALEAlter INT
       ,@PRIMARYKEYAlter INT
       ,@IDENTAlter VARCHAR(100)

     DECLARE curTablesColALTER CURSOR FOR
     SELECT  *
      FROM @TABELAS T WHERE T.TABLE_NAME = @TABLE_NAME

     DECLARE @TOTALCOLUNAALTER INT
     SET @TOTALCOLUNAALTER = 0
     SET @TOTALCOLUNAALTER = (SELECT COUNT(TAB.COLUMN_NAME) FROM @TABELAS TAB WHERE TAB.TABLE_NAME = @TABLE_NAME)
     DECLARE @CONTADORALTER  AS INT
     SET @CONTADORALTER = 0

     OPEN curTablesColALTER

     FETCH NEXT FROM curTablesColALTER INTO @TABLE_NAMEAlter
             , @COLUMN_NAMEAlter
             , @ORDINAL_POSITIONAlter
             , @COLUMN_DEFAULTAlter
             , @IS_NULLABLEAlter
             , @DATA_TYPEAlter
             , @CHARACTER_MAXIMUM_LENGTHAlter
             , @NUMERIC_PRECISIONAlter
             , @NUMERIC_SCALEAlter
             , @PRIMARYKEYAlter
             , @IDENTAlter

     WHILE @@FETCH_STATUS = 0
     BEGIN

      SET @CONTADORALTER = @CONTADORALTER + 1

       --VERIFICO SE EXISTE A COLUNA QUE ESTA NA TABELA DO MODELO
      IF EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TABLE_NAMEAlter AND COLUMN_NAME = @COLUMN_NAMEAlter)
       BEGIN
        
        DECLARE @SQL VARCHAR(MAX)
        SET @SQL =''''
        
        -- VERIFICO SE A COLUNA NÃO TEM TODOS OS PARAMETROS IGUAIS AO MODELO
        IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TABLE_NAMEAlter AND COLUMN_NAME = @COLUMN_NAMEAlter AND UPPER(DATA_TYPE) = UPPER(@DATA_TYPEAlter) AND UPPER(IS_NULLABLE) = UPPER(@IS_NULLABLEAlter) AND ISNULL(CHARACTER_MAXIMUM_LENGTH,0) = (SELECT CASE UPPER(@DATA_TYPEAlter)  WHEN ''TEXT'' THEN 2147483647 ELSE ISNULL(CHARACTER_MAXIMUM_LENGTH,0) END) AND ISNULL(NUMERIC_PRECISION,0) = @NUMERIC_PRECISIONAlter AND ISNULL(NUMERIC_SCALE,0) = @NUMERIC_SCALEAlter)
         BEGIN
          SET @SQL = '' ALTER TABLE ''+ @TABLE_NAMEAlter + '' ALTER COLUMN '' + @COLUMN_NAMEAlter 
          IF(@CHARACTER_MAXIMUM_LENGTHAlter = 0 AND UPPER(@DATA_TYPEAlter) != ''DECIMAL'' AND UPPER(@DATA_TYPEAlter) != ''NUMERIC'')
           BEGIN
            SET @SQL = @SQL + '' '' + @DATA_TYPEAlter
           END
          ELSE
           BEGIN
            IF(UPPER(@DATA_TYPEAlter) = ''DECIMAL'' OR UPPER(@DATA_TYPEAlter) = ''NUMERIC'')
             BEGIN
              SET @SQL = @SQL + '' '' + @DATA_TYPEAlter + ''('' + CAST(@NUMERIC_PRECISIONAlter AS VARCHAR) + '','' + CAST(@NUMERIC_SCALEAlter AS VARCHAR) + '')''
             END
            ELSE
             BEGIN
              SET @SQL = @SQL + '' '' + @DATA_TYPEAlter + ''('' + CAST(@CHARACTER_MAXIMUM_LENGTHAlter AS VARCHAR) + '')''
             END
           END
           --IF(@IDENTAlter != '''') --##comentado pois o sql nao consegue setar para identity no alter, entao ele mantem o identity da coluna 
           -- BEGIN
           --  SET @SQL += '' '' + @IDENTAlter
           -- END       
          IF(UPPER(@IS_NULLABLEAlter) = ''YES'')
           BEGIN
            SET @SQL = @SQL + '' '' + ''NULL''
           END
           ELSE
            BEGIN
             SET @SQL = @SQL + '' '' + ''NOT NULL''
            END
          EXEC(@SQL)
        END --FIM DO IF
          
       END --FIM DO IF
      ELSE
       BEGIN
       
       --IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TABLE_NAME AND COLUMN_NAME = @COLUMN_NAME AND UPPER(DATA_TYPE) = UPPER(@DATA_TYPE) OR ISNULL(CHARACTER_MAXIMUM_LENGTH,0) = (SELECT CASE UPPER(@DATA_TYPE)  WHEN ''TEXT'' THEN 2147483647 ELSE ISNULL(CHARACTER_MAXIMUM_LENGTH,0) END) OR NUMERIC_PRECISION = @NUMERIC_PRECISION OR NUMERIC_SCALE = @NUMERIC_SCALE)
        BEGIN
         SET @SQL = ''ALTER TABLE '' + @TABLE_NAMEAlter + '' ADD '' + @COLUMN_NAMEAlter + '' ''
         IF(@CHARACTER_MAXIMUM_LENGTHAlter = 0 AND UPPER(@DATA_TYPEAlter) != ''DECIMAL'' AND UPPER(@DATA_TYPEAlter) != ''NUMERIC'')
          BEGIN
           SET @SQL = @SQL + '' '' + @DATA_TYPEAlter
          END
         ELSE
          IF(UPPER(@DATA_TYPEAlter) = ''DECIMAL'' OR UPPER(@DATA_TYPEAlter) = ''NUMERIC'')
           BEGIN
            SET @SQL = @SQL + '' '' + @DATA_TYPEAlter + ''('' + CAST(@NUMERIC_PRECISIONAlter AS VARCHAR) + '','' + CAST(@NUMERIC_SCALEAlter AS VARCHAR) + '')''
           END
          ELSE
           BEGIN
            SET @SQL = @SQL +  '' '' + @DATA_TYPEAlter + ''('' + CAST(@CHARACTER_MAXIMUM_LENGTHAlter AS VARCHAR) + '')''
           END
          IF(@COLUMN_DEFAULTAlter != '''')
          BEGIN
           SET @SQL = @SQL + '' '' + @COLUMN_DEFAULTAlter
          END
          IF(UPPER(@IS_NULLABLEAlter) = ''YES'')
           BEGIN
            SET @SQL = @SQL + '' '' + ''NULL''
           END
          ELSE
           BEGIN
            SET @SQL = @SQL + '' '' + ''NOT NULL''
           END
          EXEC(@SQL)
        END
       END -- FIM DO BEGIN DO ELSE

      FETCH NEXT FROM curTablesColALTER INTO @TABLE_NAMEAlter
      , @COLUMN_NAMEAlter
      , @ORDINAL_POSITIONAlter
      , @COLUMN_DEFAULTAlter
      , @IS_NULLABLEAlter
      , @DATA_TYPEAlter
      , @CHARACTER_MAXIMUM_LENGTHAlter
      , @NUMERIC_PRECISIONAlter
      , @NUMERIC_SCALEAlter
      , @PRIMARYKEYAlter
      , @IDENTAlter
        
        
     END -- END BEGIN WHILE curTablesColALTER
       
     CLOSE curTablesColALTER;
     DEALLOCATE curTablesColALTER;
   
   
     PRINT(''CRIAÇÃO DAS COLUNAS CONCLUIDO'')

  END --end begin do else
 
  FETCH NEXT FROM curTables INTO @TABLE_NAME
  
 END -- end begin while curTables
  
 CLOSE curTables;
 DEALLOCATE curTables;
     

 ----------------------------------------------------------------------------------------------------------------------------------------------------------
 ---- CRIAÇÃO DAS CONSTRAINT DEFAULT
 ----------------------------------------------------------------------------------------------------------------------------------------------------------
 IF(@EXCLUIU = 1)
 BEGIN
 
  PRINT(''CRIAÇÃO DAS CONSTRAINT DEFAULT'')
  BEGIN 
   DECLARE  
    @TABLE_NAMEDF VARCHAR(100)
    , @COLUMN_NAMEDF VARCHAR(100)
    , @ORDINAL_POSITIONDF INT
    , @COLUMN_DEFAULTDF VARCHAR(100)
    , @IS_NULLABLEDF VARCHAR(10)
    , @DATA_TYPEDF VARCHAR(100)
    , @CHARACTER_MAXIMUM_LENGTHDF INT
    , @NUMERIC_PRECISIONDF INT
    , @NUMERIC_SCALEDF INT
    ,@PRIMARYKEYDF INT
    ,@IDENTDF VARCHAR(100)

   DECLARE curCONSTRAINTDF CURSOR FOR
   SELECT * FROM @TABELAS TAB WHERE TAB.COLUMN_DEFAULT != ''''
      
   OPEN curCONSTRAINTDF

   FETCH NEXT FROM curCONSTRAINTDF INTO @TABLE_NAMEDF
   , @COLUMN_NAMEDF
   , @ORDINAL_POSITIONDF
   , @COLUMN_DEFAULTDF
   , @IS_NULLABLEDF
   , @DATA_TYPEDF
   , @CHARACTER_MAXIMUM_LENGTHDF
   , @NUMERIC_PRECISIONDF
   , @NUMERIC_SCALEDF
   ,@PRIMARYKEYDF
   ,@IDENTDF
              
   WHILE @@FETCH_STATUS = 0
   BEGIN

    DECLARE @SQLEXECCONSTRAINTDF VARCHAR(MAX)
    SET @SQLEXECCONSTRAINTDF = ''''
  
    IF NOT EXISTS(SELECT * FROM sys.default_constraints d INNER JOIN sys.columns c ON d.parent_column_id = c.column_id WHERE d.parent_object_id = OBJECT_ID(@TABLE_NAMEDF) AND c.name = @COLUMN_NAMEDF)
    BEGIN
     IF NOT EXISTS(SELECT * FROM sys.objects WHERE parent_object_id IN (OBJECT_ID(@TABLE_NAMEDF)) and upper(name)  like ''%''+Upper(@COLUMN_NAMEDF)+''%'' or UPPER(name) = UPPER(''[DF_'' + @TABLE_NAMEDF + ''_'' + @COLUMN_NAMEDF +'']'') AND type = ''D'')
     BEGIN
      SET @SQLEXECCONSTRAINTDF =  @SQLEXECCONSTRAINTDF + ''ALTER TABLE [dbo].['' + @TABLE_NAMEDF + '']  WITH CHECK ADD  CONSTRAINT [DF_'' + @TABLE_NAMEDF + ''_'' + @COLUMN_NAMEDF + ''] '' + @COLUMN_DEFAULTDF + '' FOR ['' + @COLUMN_NAMEDF + '']''
      EXEC(@SQLEXECCONSTRAINTDF)
     END
    END
        
    FETCH NEXT FROM curCONSTRAINTDF INTO @TABLE_NAMEDF
    , @COLUMN_NAMEDF
    , @ORDINAL_POSITIONDF
    , @COLUMN_DEFAULTDF
    , @IS_NULLABLEDF
    , @DATA_TYPEDF
    , @CHARACTER_MAXIMUM_LENGTHDF
    , @NUMERIC_PRECISIONDF
    , @NUMERIC_SCALEDF
    ,@PRIMARYKEYDF
    ,@IDENTDF


   END

   CLOSE curCONSTRAINTDF;
   DEALLOCATE curCONSTRAINTDF;

  END
  PRINT(''CRIAÇÃO DAS CONSTRAINT CONCLUIDO DEFAULT'')

 END

 --------------------------------------------------------------------------------------------------------------------------------------------------------
 -- CRIAÇÃO DAS CONSTRAINT PK
 --------------------------------------------------------------------------------------------------------------------------------------------------------

 IF(@EXCLUIU = 1)
 BEGIN

  PRINT(''CRIAÇÃO DAS CONSTRAINT PK'')

  DECLARE @TABLE_NAMEPK VARCHAR(100)
  SET @TABLE_NAMEPK = ''''
   DECLARE curTABELAPK CURSOR FOR
        SELECT * FROM @TABELA
      
  OPEN curTABELAPK
 
  FETCH NEXT FROM curTABELAPK INTO @TABLE_NAMEPK
              
  WHILE @@FETCH_STATUS = 0
  BEGIN

   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N''[dbo].[PK_''+ @TABLE_NAMEPK + '']'')) --AND parent_object_id = OBJECT_ID(N''[dbo].[''+ @TABLE_NAMEPK+'']''))
   BEGIN --EXLUIR  
    DECLARE @PRIMARYALTER VARCHAR(MAX)
    SET @PRIMARYALTER = ''''
    DECLARE @SQLEXECCONSTRAINTPK VARCHAR(MAX)
    SET @SQLEXECCONSTRAINTPK = ''''
    IF((SELECT COUNT(P.COLUMN_NAME) FROM @TABELAS P WHERE P.TABLE_NAME = @TABLE_NAMEPK AND P.PRIMARYKEY = 1) >= 2)
     BEGIN
       SELECT @PRIMARYALTER =  @PRIMARYALTER +  COALESCE(P.COLUMN_NAME, '''') + '','' FROM @TABELAS P WHERE P.TABLE_NAME = @TABLE_NAMEPK AND P.PRIMARYKEY = 1
                  SET  @PRIMARYALTER = SUBSTRING(@PRIMARYALTER,1, LEN(@PRIMARYALTER)-1)
     END
    ELSE
     BEGIN
      SET @PRIMARYALTER = (SELECT P.COLUMN_NAME FROM @TABELAS P WHERE P.TABLE_NAME = @TABLE_NAMEPK AND P.PRIMARYKEY = 1)
     END


    SET @SQLEXECCONSTRAINTPK = @SQLEXECCONSTRAINTPK + ''ALTER TABLE [dbo].['' + @TABLE_NAMEPK + '']  WITH CHECK ADD CONSTRAINT [PK_''+ @TABLE_NAMEPK +''] PRIMARY KEY CLUSTERED 
    (
     ''+ @PRIMARYALTER + '' ASC
    )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]'' 
    --SET @SQL = SUBSTRING(@SQLEXEC,1, LEN(@SQLEXEC)-1)

    EXEC(@SQLEXECCONSTRAINTPK)
  
   END 
   FETCH NEXT FROM curTABELAPK INTO @TABLE_NAMEPK

  END -- FIM DO BEGIN DO WHILE

  CLOSE curTABELAPK;
  DEALLOCATE curTABELAPK;
 
  PRINT(''CRIAÇÃO DAS CONSTRAINT CONCLUIDO PK'')

 END

 --------------------------------------------------------------------------------------------------------------------------------------------------------
 -- CRIAÇÃO DAS FOREIGN KEY
 --------------------------------------------------------------------------------------------------------------------------------------------------------

 PRINT(''CRIAÇÃO DAS FOREIGN KEY'')
 BEGIN 


  DECLARE @TABLE_NAMEFK VARCHAR(100)
    ,@CONSTRAINT_NAME VARCHAR(100)      
    , @FOREIGNKEY_NAME VARCHAR(100)
    ,@REFERENCES_NAME VARCHAR(100)

  DECLARE curFOREIGNKEY CURSOR FOR
  SELECT  *
   FROM @FOREIGNKEY 
      
  OPEN curFOREIGNKEY

  FETCH NEXT FROM curFOREIGNKEY INTO @TABLE_NAMEFK
          , @CONSTRAINT_NAME
          , @FOREIGNKEY_NAME
          , @REFERENCES_NAME
              
              
  WHILE @@FETCH_STATUS = 0
  BEGIN
   DECLARE @SQLEXECFORN VARCHAR(MAX)
   SET @SQLEXECFORN = ''''
       
   SET @SQLEXECFORN = @SQLEXECFORN + ''ALTER TABLE [dbo].['' + @TABLE_NAMEFK + '']  WITH CHECK ADD  CONSTRAINT ['' + @CONSTRAINT_NAME + ''] FOREIGN KEY(['' + @FOREIGNKEY_NAME + '']) REFERENCES [dbo].['' + @REFERENCES_NAME
    + ''] (['' + @FOREIGNKEY_NAME +''])ON DELETE CASCADE''

   FETCH NEXT FROM curFOREIGNKEY INTO @TABLE_NAMEFK
           , @CONSTRAINT_NAME
           , @FOREIGNKEY_NAME
           , @REFERENCES_NAME
               


   EXEC(@SQLEXECFORN)

  END

  CLOSE curFOREIGNKEY;
  DEALLOCATE curFOREIGNKEY;

 END
 PRINT(''CRIAÇÃO DAS FOREIGN KEY CONCLUIDO'')

 --------------------------------------------------------------------------------------------------------------------------------------------------------
 -- CRIAÇÃO DOS ÍNDICES
 --------------------------------------------------------------------------------------------------------------------------------------------------------

 PRINT(''CRIAÇÃO DOS ÍNDICES'')
 BEGIN

  DECLARE    
    @INDEX_NAME VARCHAR(100)
    ,@TABLE_NAMEIX VARCHAR(100)      
    ,@COLUMN_NAMEIX VARCHAR(100)
    ,@INCLUDE_NAME VARCHAR(100)

  DECLARE curINDEXTABLE CURSOR FOR
  SELECT  *
   FROM @INDEX_TABLE 

      
  OPEN curINDEXTABLE

  FETCH NEXT FROM curINDEXTABLE INTO @INDEX_NAME
          ,@TABLE_NAMEIX
          , @COLUMN_NAMEIX
          , @INCLUDE_NAME
              
              
  WHILE @@FETCH_STATUS = 0
   BEGIN

    DECLARE @SQLEXECINDEX VARCHAR(MAX)
    SET @SQLEXECINDEX = ''''
        
    SET @SQLEXECINDEX = @SQLEXECINDEX + ''CREATE NONCLUSTERED INDEX ['' + @INDEX_NAME + ''] ON [dbo].['' + @TABLE_NAMEIX + '']('' + @COLUMN_NAMEIX + '' ASC )''
     IF(@INCLUDE_NAME != '''')
      BEGIN
       SET @SQLEXECINDEX = @SQLEXECINDEX + ''INCLUDE ('' + @INCLUDE_NAME + '')''
      END
    SET @SQLEXECINDEX = @SQLEXECINDEX + '' WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]''

    FETCH NEXT FROM curINDEXTABLE INTO @INDEX_NAME
            , @TABLE_NAMEIX
            , @COLUMN_NAMEIX
            , @INCLUDE_NAME

    EXEC(@SQLEXECINDEX)

   END

   CLOSE curINDEXTABLE;
   DEALLOCATE curINDEXTABLE;

 END
 PRINT(''CRIAÇÃO DOS ÍNDICES CONCLUIDO'')  


 PRINT ''COMMIT'';
 COMMIT;

END TRY
BEGIN CATCH

 PRINT ''ROLLBACK'';
 ROLLBACK;


 IF CURSOR_STATUS(''global'',''curTables'') >= -1
  BEGIN
   CLOSE curTables;
   DEALLOCATE curTables;
  END


 IF CURSOR_STATUS(''global'',''curTablesCol'') >= -1
  BEGIN
   CLOSE curTablesCol;
   DEALLOCATE curTablesCol;
  END

 IF CURSOR_STATUS(''global'',''curNOMEI'') >= -1
  BEGIN
   CLOSE curNOMEI;
   DEALLOCATE curNOMEI;
  END

 IF CURSOR_STATUS(''global'',''curIndices'') >= -1
  BEGIN
   CLOSE curIndices;
   DEALLOCATE curIndices;
  END

 IF CURSOR_STATUS(''global'',''curNOMEF'') >= -1
  BEGIN
   CLOSE curNOMEF;
   DEALLOCATE curNOMEF;
  END

 IF CURSOR_STATUS(''global'',''curForenKey'') >= -1
  BEGIN
   CLOSE curForenKey;
   DEALLOCATE curForenKey;
  END

 IF CURSOR_STATUS(''global'',''curNOMECD'') >= -1
  BEGIN
   CLOSE curNOMECD;
   DEALLOCATE curNOMECD;
  END

 IF CURSOR_STATUS(''global'',''curDefaults'') >= -1
  BEGIN
   CLOSE curDefaults;
   DEALLOCATE curDefaults;
  END

 IF CURSOR_STATUS(''global'',''curTABELAEXPKGERAL'') >= -1
  BEGIN
   CLOSE curTABELAEXPKGERAL;
   DEALLOCATE curTABELAEXPKGERAL;
  END

 IF CURSOR_STATUS(''global'',''curExcluir'') >= -1
  BEGIN
   CLOSE curExcluir;
   DEALLOCATE curExcluir;
  END

 IF CURSOR_STATUS(''global'',''curTABELAEXPK'') >= -1
  BEGIN
   CLOSE curTABELAEXPK;
   DEALLOCATE curTABELAEXPK;
  END

 IF CURSOR_STATUS(''global'',''curTABELACAMPOS'') >= -1
  BEGIN
   CLOSE curTABELACAMPOS;
   DEALLOCATE curTABELACAMPOS;
  END

 IF CURSOR_STATUS(''global'',''curTablesColALTER'') >= -1
  BEGIN
   CLOSE curTablesColALTER;
   DEALLOCATE curTablesColALTER;
  END

 IF CURSOR_STATUS(''global'',''curCONSTRAINTDF'') >= -1
  BEGIN
   CLOSE curCONSTRAINTDF;
   DEALLOCATE curCONSTRAINTDF;
  END

 IF CURSOR_STATUS(''global'',''curTABELAPK'') >= -1
  BEGIN
   CLOSE curTABELAPK;
   DEALLOCATE curTABELAPK;
  END

 IF CURSOR_STATUS(''global'',''curFOREIGNKEY'') >= -1
  BEGIN
   CLOSE curFOREIGNKEY;
   DEALLOCATE curFOREIGNKEY;
  END

 IF CURSOR_STATUS(''global'',''curINDEXTABLE'') >= -1
  BEGIN
   CLOSE curINDEXTABLE;
   DEALLOCATE curINDEXTABLE;
  END


 SELECT ERROR_NUMBER() AS ErrorNumber, ERROR_MESSAGE() AS ErrorMessage

END CATCH
print(convert(varchar(100),getdate(),121)+'' Fim    - 001 - Criação Tabelas ETL.sql'')
/* 001 - Criação Tabelas ETL.sql */
')

exec('
/* 002 - Criação Tipos ETL.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 002 - Criação Tipos ETL.sql'')

SET NOCOUNT ON

BEGIN TRAN

BEGIN TRY


DECLARE @TABELA TABLE(DESC_ETL_TIPO VARCHAR(100)
      ,EXCLUI_PROCESSO_CONCLUIDO INT
      ,ID_ETL_TIPO VARCHAR(100)
      ,INATIVO INT
      ,ORIGEM VARCHAR(100)
      ,DESC_EAD VARCHAR(100)
      ,DESC_EAD_DESTINO VARCHAR(100)
      ,UTILIZA_LOTE INT
      ,ULTIMO_LOTE INT
      ,PERIODO_FECHAMENTO_LOTE INT
      ,DATA_HORA_ULTIMO_LOTE VARCHAR(100)
      ,FILTRO VARCHAR(100)
      ,INDICA_SOMENTE_MASTER INT
      ,IND_SOMENTE_ENTIDADE_PRINCIPAL INT
      ,TOTAL_REGISTROS_ARQUIVO VARCHAR(100)
      ,CTRL_EMPRESA INT
      ,CTRL_REDE INT
      ,CTRL_FILIAL INT
      ,INICIO_PROCESSAMENTO_LOTE VARCHAR(100)
      ,FIM_PROCESSAMENTO_LOTE VARCHAR(100))



INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LX_LJ_ETL_VALIDA_MOVIMENTO'',''0'',''0'',''0'',''3'','''','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'','''','''','''','''',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJAS_VAREJO'',''1'',''1'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojasVarejo.LojasVarejo'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_VENDEDORES'',''1'',''2'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaVendedores.LojaVendedores'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_IMPRESSORAS_FISCAIS'',''1'',''3'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaImpressorasFiscais.LojaImpressorasFiscais'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_DOCUMENTO_ECF'',''1'',''4'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLjDocumentoECF.LjDocumentoEcf'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_ENTRADAS'',''1'',''5'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaEntradas.LojaEntradas'',''Linx.ETL9002.BO.LjEtlLojaEntradas.LojaEntradasDif'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_VENDA_PGTO'',''1'',''6'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaVendaPgto.LojaVendaPgto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_SAIDAS'',''1'',''7'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaSaidas.LojaSaidas'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_CONTROLE_FISCAL'',''1'',''8'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaControleFiscal.LojaControleFiscal'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_CAIXA_LANCAMENTOS'',''1'',''9'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaCaixaLancamentos.LojaCaixaLancamentos'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_PEDIDO'',''1'',''10'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaPedido.LojaPedido'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''FATURAMENTO_SEQUENCIAIS'',''1'',''11'',''0'',''1'',''Linx.ETL9002.BO.LjEtlFaturamentoSequencias.FaturamentoSequenciais'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''INVENTARIO'',''1'',''12'',''0'',''1'',''Linx.ETL9002.BO.LjEtlInventario.Inventario'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_RESERVA'',''1'',''13'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaReserva.LojaReserva'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PARAMETROS_LOJA'',''1'',''14'',''1'',''1'',''Linx.ETL9002.BO.(Tipo Descontinuado - 3.0)'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_CONSERTO'',''1'',''15'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaConserto.LojaConserto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_NOTA_FISCAL'',''1'',''16'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaNotaFiscal.LojaNotaFiscal'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CLIENTES_VAREJO'',''1'',''17'',''0'',''1'',''Linx.ETL9002.BO.LjEtlClientesVarejo.ClientesVarejo'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_HISTORICO_VENDA'',''1'',''18'',''0'',''1'',''Linx.ETL9002.BO.LjEtlHistoricoVenda.LojaHistoricoVenda'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_TRANSITO_HISTORICO'',''1'',''19'',''1'',''1'',''Linx.ETL9002.BO.LjEtlLojaTransitoHistorico.wLojaTransitoHistorico'',''Linx.ETL9002.BO.LjEtlLojaTransitoHistorico.LojaTransitoHistorico'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CLIENTES_VAREJO_LOG'',''1'',''20'',''1'',''1'',''Linx.ETL9002.BO.LjEtlClientesVarejoLog.ClientesVarejoLog'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_EVENTOS_LOG'',''1'',''21'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaVendaPgto.LojaEventosLog'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PARAMETROS'',''1'',''22'',''1'',''1'',''Linx.ETL9002.BO.LjEtlParametros.Parametros'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PARAMETROS_LOJA'',''1'',''23'',''0'',''1'',''Linx.ETL9002.BO.LjEtlParametrosLojas.ParametrosLoja'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PARAMETROS_LOJA_TERMINAL'',''1'',''24'',''1'',''1'',''Linx.ETL9002.BO.LjEtlParametrosLojasTerminal.ParametrosLojaTerminal'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LX_IMP_MFD_E01'',''1'',''25'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLxImpMfdE01.LxImpMfdE01'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LX_IMP_MFD_E14'',''1'',''26'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLxImpMfdE14.LxImpMfdE14'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LX_IMP_MFD_E15'',''1'',''27'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLxImpMfdE15.LxImpMfdE15'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LX_IMP_MFD_E21'',''1'',''28'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLxImpMfdE21.LxImpMfdE21'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ECF_AC1704_E01'',''1'',''29'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E01'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ECF_AC1704_E12'',''1'',''30'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E12'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ECF_AC1704_E13'',''1'',''31'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E13'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ECF_AC1704_E14'',''1'',''32'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E14'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ECF_AC1704_E15'',''1'',''33'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E15'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ECF_AC1704_E21'',''1'',''34'',''0'',''1'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E21'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''DADOS_CADASTRO_XML_NFE'',''1'',''35'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLojaNotaFiscal.DadosCadastroXmlNfe'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ETL_LOG'',''1'',''36'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLog.LjEtlLog'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ETL_LOG_STATUS'',''1'',''37'',''0'',''1'',''Linx.ETL9002.BO.LjEtlLog.LjEtlLogStatus'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_CF_SAT'',''1'',''38'',''0'',''1'',''Linx.ETL9002.BO.LjEtlSat.LojaCfSat'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ID_PAF_ECF'',''1'',''39'',''0'',''1'',''Linx.ETL9002.BO.LjEtlPaf.LjIdPafEcf'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_ID_PAF_ECF_FILIAL'',''1'',''40'',''0'',''1'',''Linx.ETL9002.BO.LjEtlPaf.LjIdPafEcfFilial'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PROPRIEDADE'',''1'',''41'',''0'',''1'',''Linx.ETL9002.BO.LjEtlPropriedade.Propriedade'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''BANCOS'',''1'',''100'',''0'',''2'',''Linx.ETL9001.BO.LjEtlBancos.Bancos'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''MOEDAS'',''1'',''101'',''0'',''2'',''Linx.ETL9001.BO.LjEtlMoedas.Moedas'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''UNIDADES_FEDERACAO'',''1'',''102'',''0'',''2'',''Linx.ETL9001.BO.LjEtlUnidadesFederacao.UnidadesFederacao'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''UNIDADES_FEDERACAO_ICMS'',''1'',''103'',''0'',''2'',''Linx.ETL9001.BO.LjEtlUnidadesFederacaoIcms.UnidadesFederacaoIcms'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_RESERVA_TIPO'',''1'',''104'',''0'',''2'',''Linx.ETL9001.BO.LjEtlReservaTipo.LojaReservaTipo'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJAS_NATUREZA_OPERACAO'',''1'',''105'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojasNaturezaOperacao.LojasNaturezaOperacao'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_TIPOS_ENTRADA_SAIDA'',''1'',''106'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaTiposEntradaSaida.LojaTiposEntradaSaida'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_CAIXA_TIPOS'',''1'',''107'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaCaixaTipos.LojaCaixaTipos'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_MOTIVOS_CANCELAMENTOS'',''1'',''108'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaMotivosCancelamentos.LojaMotivosCancelamentos'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_PEDIDO_TIPO'',''1'',''109'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaPedidoTipo.LojaPedidoTipo'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TRIBUT_ORIGEM'',''1'',''110'',''0'',''2'',''Linx.ETL9001.BO.LjEtlTributOrigem.TributOrigem'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TRIBUT_ICMS'',''1'',''111'',''0'',''2'',''Linx.ETL9001.BO.LjEtlTributIcms.TributIcms'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TIPOS_PGTO'',''1'',''113'',''0'',''2'',''Linx.ETL9001.BO.LjEtlTiposPgto.TiposPgto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CADASTRO_CLI_FOR'',''1'',''116'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCadastroCliFor.CadastroCliFor'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''FILIAIS'',''1'',''117'',''0'',''2'',''Linx.ETL9001.BO.LjEtlFiliais.Filiais'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''1'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_VENDEDORES'',''1'',''121'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaVendedores.LojaVendedores'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LX_ADMINISTRADORAS_CARTAO'',''1'',''126'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLxAdministradorasCartao.LxAdministradorasCartao'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_FORMAS_PGTO'',''1'',''127'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaFormasPgto.LojaFormasPgto'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_FIDELIDADE_PROGRAMA'',''1'',''128'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLjFidelidadePrograma.LjFidelidadePrograma'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_LIMITE_PARCELAMENTO'',''1'',''130'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLjLimiteParcelamento.LjLimiteParcelamento'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TABELAS_PRECO'',''1'',''133'',''0'',''2'',''Linx.ETL9001.BO.LjEtlTabelasPreco.TabelasPreco'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TABELAS_PRECO_FILIAL'',''1'',''134'',''0'',''2'',''Linx.ETL9001.BO.LjEtlTabelasPrecoFilial.wTabelasPrecoFilial'',''Linx.ETL9001.BO.LjEtlTabelasPrecoFilial.TabelasPrecoFilial'',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_OPERACAO_FILIAL'',''1'',''139'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaOperacaoFilial.LojaOperacaoFilial'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_FORMA_PGTO_LIMITE'',''1'',''144'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLjFormaPgtoLimite.LjFormaPgtoLimite'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CLASSIF_FISCAL'',''1'',''145'',''0'',''2'',''Linx.ETL9001.BO.LjEtlClassifFiscal.ClassifFiscal'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTOS_TAMANHOS'',''1'',''150'',''0'',''2'',''Linx.ETL9001.BO.LjEtlProdutosTamanhos.ProdutosTamanhos'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTOS'',''1'',''151'',''0'',''2'',''Linx.ETL9001.BO.LjEtlProdutos.Produtos'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''10'',''1'',''1'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTOS_PRECOS'',''1'',''152'',''0'',''2'',''Linx.ETL9001.BO.LjEtlProdutosPrecos.wProdutosPrecos'',''Linx.ETL9001.BO.LjEtlProdutosPrecos.ProdutosPrecos'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTOS_FOTO'',''1'',''154'',''1'',''2'',''Linx.ETL9001.BO.LjEtlProdutosFoto.ProdutosFoto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''1'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTOS_PRECO_FILIAL'',''1'',''158'',''0'',''2'',''Linx.ETL9001.BO.LjEtlProdutosPrecoFilial.ProdutosPrecoFilial'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''ESTOQUE_PRODUTOS'',''1'',''171'',''0'',''2'',''Linx.ETL9001.BO.LjEtlEstoqueProdutos.wEstoqueProdutosBase'',''Linx.ETL9001.BO.LjEtlEstoqueProdutos.EstoqueProdutos'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''1'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTOS_INDICADOR_CFOP'',''1'',''172'',''0'',''2'',''Linx.ETL9001.BO.LjEtlProdutosIndicadorCfop.ProdutosIndicadorCfop'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''1'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTO_MONTAGEM_KIT'',''1'',''173'',''0'',''2'',''Linx.ETL9001.BO.LjEtlProdutoMontagemKit.ProdutoMontagemKit'','''',''1'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''1'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CLIENTE_VAR_TIPOS'',''1'',''182'',''0'',''2'',''Linx.ETL9001.BO.LjEtlClienteVarTipos.ClienteVarTipos'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CLIENTE_VAR_BLOQ'',''1'',''183'',''0'',''2'',''Linx.ETL9001.BO.LjEtlClienteVarBloq.ClienteVarBloq'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CLIENTE_VAR_CONCEITOS'',''1'',''184'',''0'',''2'',''Linx.ETL9001.BO.LjEtlClienteVarConceitos.ClienteVarConceitos'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CLIENTE_VAR_PONT'',''1'',''185'',''0'',''2'',''Linx.ETL9001.BO.LjEtlClienteVarPont.ClienteVarPont'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_OPERACAO_CLIENTE'',''1'',''186'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaOperacaoCliente.LojaOperacaoCliente'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CLIENTES_VAREJO'',''1'',''187'',''0'',''2'',''Linx.ETL9001.BO.LjEtlClientesVarejo.ClientesVarejo'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CLASSIF_FISCAL_IMPOSTO'',''1'',''192'',''0'',''2'',''Linx.ETL9001.BO.LjEtlClassifFiscalImposto.ClassifFiscalImposto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''ESTOQUE_SUGESTAO_PRODUTO'',''1'',''212'',''0'',''2'',''Linx.ETL9001.BO.LjEtlEstoqueSugestaoProduto.EstoqueSugestaoProduto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_LX_IMPOSTO_TIPO'',''1'',''213'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCtbLxImpostoTipo.CtbLxImpostoTipo'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TRANSPORTADORAS'',''1'',''214'',''0'',''2'',''Linx.ETL9001.BO.LjEtlTransportadoras.Transportadoras'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_LX_INDICADOR_CFOP'',''1'',''215'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCtbLxIndicadorCfop.CtbLxIndicadorCfop'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_LX_NATUREZAS_OPERACAO'',''1'',''216'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCtbLxNaturezaOperacao.CtbLxNaturezasOperacao'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_LX_INDICADOR_FISCAL_TERCEIRO'',''1'',''217'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCtbLxIndicadorFiscalTerceiro.CtbLxIndicadorFiscalTerceiro'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_LX_TIPO_OPERACAO'',''1'',''218'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCtbLxTipoOperacao.CtbLxTipoOperacao'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_LX_CARACTERISTICA_CFOP '',''1'',''219'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCtbLxCaracteristicaCfop.CtbLxCaracteristicaCfop'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_EXCECAO_GRUPO'',''1'',''220'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCtbExcecaoGrupo.CtbExcecaoGrupo'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_EXCECAO_IMPOSTO'',''1'',''221'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCtbExcecaoImposto.CtbExcecaoImposto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CADASTRO_ITEM_FISCAL'',''1'',''224'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCadastroItemFiscal.CadastroItemFiscal'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_PROCESSOS'',''1'',''229'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaProcessos.LojaProcessos'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PARAMETROS'',''1'',''233'',''0'',''2'',''Linx.ETL9001.BO.LjEtlParametros.Parametros'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PARAMETROS_LOJA'',''1'',''234'',''0'',''2'',''Linx.ETL9001.BO.LjEtlParametrosLojas.ParametrosLoja'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PARAMETROS_LOJA_TERMINAL'',''1'',''235'',''0'',''2'',''Linx.ETL9001.BO.LjEtlParametrosLojasTerminal.ParametrosLojaTerminal'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_TRANSACAO'',''1'',''239'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLjTransacao.LjTransacao'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_PERFIL_USUARIO'',''1'',''240'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLjPerfilUsuario.LjPerfilUsuario'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PROPRIEDADE'',''1'',''245'',''0'',''2'',''Linx.ETL9001.BO.LjEtlPropriedade.Propriedade'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_ESPECIE_SERIE'',''1'',''246'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCtbEspecieSerie.CtbEspecieSerie'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''SERIES_NF'',''1'',''247'',''0'',''2'',''Linx.ETL9001.BO.LjEtlSeriesNF.wSeriesNf'',''Linx.ETL9001.BO.LjEtlSeriesNF.SeriesNf'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''FATURAMENTO_SEQUENCIAIS'',''1'',''248'',''0'',''2'',''Linx.ETL9001.BO.LjEtlFaturamentoSequenciais.FaturamentoSequenciais'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CREDENCIADORA_CARTAO'',''1'',''249'',''0'',''2'',''Linx.ETL9001.BO.LjEtlSat.CredenciadoraCartao'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''1'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_STATUS_CONSERTO'',''1'',''253'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaStatusConserto.LojaStatusConserto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_MOTIVO_CONSERTO'',''1'',''254'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaMotivoConserto.LojaMotivoConserto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_MOTIVO_CANC_CONSERTO'',''1'',''255'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaMotivoCancConserto.LojaMotivoCancConserto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_CONSERTO'',''1'',''256'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaConserto.LojaConserto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''ENTRADAS'',''1'',''258'',''0'',''2'',''Linx.ETL9001.BO.LjEtlEntradas.Entradas'',''Linx.ETL9001.BO.LjEtlEntradas.LjEntFiscal'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LCF_LX_PAIS'',''1'',''263'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLcfLxPais.LcfLxPais'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LCF_LX_UF'',''1'',''264'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLcfLxUf.LcfLxUf'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''INVENTARIO_SOLICITACAO'',''1'',''266'',''0'',''2'',''Linx.ETL9001.BO.LjEtlInventarioSolicitacao.InventarioSolicitacao'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_MOTIVOS_DESCONTO'',''1'',''271'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaMotivoDesconto.LojaMotivosDesconto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_MOTIVO_DEVOLUCAO'',''1'',''272'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaMotivoDevolucao.LojaMotivoDevolucao'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_TRANSITO'',''1'',''273'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaTransito.LojaTransito'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_COMPRA'',''1'',''278'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaCompras.wLojaCompra'',''Linx.ETL9001.BO.LjEtlLojaCompras.LojaCompra'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LOJA_TRANSITO_ENTRADAS'',''1'',''283'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLojaTransitoEntradas.wLojaTransitoEntradas'',''Linx.ETL9001.BO.LjEtlLojaTransitoEntradas.LojaTransitoEntradas'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTOS_FICHA_IMPORTACAO'',''1'',''285'',''0'',''2'',''Linx.ETL9004.BO.LjEtlProdutosFichaImportacao.ProdutosFichaImportacao'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''1'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTOS_FICHA_IMPORTACAO_VALOR'',''1'',''286'',''0'',''2'',''Linx.ETL9004.BO.LjEtlProdutosFichaImportacaoValor.ProdutosFichaImportacaoValor'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''1'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TABELAS_IMPOSTO'',''1'',''287'',''0'',''2'',''Linx.ETL9004.BO.LjEtlTabelasImposto.TabelasImposto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TABELAS_IMPOSTO_FILIAIS'',''1'',''288'',''1'',''2'',''Linx.ETL9004.BO.LjEtlTabelasImpostoFiliais.TabelasImpostoFiliais'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''PRODUTOS_IMPOSTOS'',''1'',''289'',''0'',''2'',''Linx.ETL9004.BO.LjEtlProdutosImpostos.ProdutosImpostos'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''1'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TABELA_ALIQUOTA_IMPOSTO_ITEM'',''1'',''290'',''0'',''2'',''Linx.ETL9004.BO.LjEtlTabelaAliquotaImpostoItem.TabelaAliquotaImpostoItem'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''FCI_FAIXA_CI_UF'',''1'',''291'',''0'',''2'',''Linx.ETL9004.BO.LjEtlFciFaixaCiUf.FciFaixaCiUf'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''LJ_PRODUTO_IMPOSTO'',''1'',''292'',''1'',''2'',''Linx.ETL9004.BO.LjEtlLjProdutoImposto.LjProdutoImposto'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''INVENTARIO_SUGESTAO'',''1'',''293'',''0'',''2'',''Linx.ETL9004.BO.LjEtlInventarioSugestao.InventarioSugestao'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''0'',''0'',''1'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CTB_AVISO_LANCAMENTO'',''1'',''294'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLjValeProduto.wLjValeProduto'',''Linx.ETL9001.BO.LjEtlLjValeProduto.LjValeProduto'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TABELA_LX_CEST'',''1'',''295'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCestNcm.TabelaLxCest'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''TABELA_LX_NCM'',''1'',''296'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCestNcm.TabelaLxNcm'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''CEST_NCM'',''1'',''297'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCestNcm.CestNcm'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''UNIDADES_FEDERACAO_ICMS_PARTILHA'',''1'',''298'',''0'',''2'',''Linx.ETL9001.BO.LjEtlCestNcm.UnidadesFederacaoIcmsPartilha'','''',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')
INSERT INTO @TABELA (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE) VALUES (''A_RECEBER_CHEQUES'',''1'',''299'',''0'',''2'',''Linx.ETL9001.BO.LjEtlLjAReceberCheques.WCtbValesAReceber'',''Linx.ETL9001.BO.LjEtlLjAReceberCheques.LojaAReceberCheques'',''0'',''0'',''0'',''1900-01-01 00:00:00.000'','''',''0'',''0'',''50'',''1'',''0'',''0'',''0.00'',''23.59'')







DECLARE @DESC_ETL_TIPOInativar VARCHAR(100)
      ,@EXCLUI_PROCESSO_CONCLUIDOInativar INT
      ,@ID_ETL_TIPOInativar VARCHAR(100)
      ,@INATIVOInativar INT
      ,@ORIGEMInativar VARCHAR(100)
      ,@DESC_EADInativar VARCHAR(100)
      ,@DESC_EAD_DESTINOInativar VARCHAR(100)
      ,@UTILIZA_LOTEInativar INT
      ,@ULTIMO_LOTEInativar INT
      ,@PERIODO_FECHAMENTO_LOTEInativar INT
      ,@DATA_HORA_ULTIMO_LOTEInativar VARCHAR(100)
      ,@FILTROInativar VARCHAR(100)
      ,@INDICA_SOMENTE_MASTERInativar INT
      ,@IND_SOMENTE_ENTIDADE_PRINCIPALInativar INT
      ,@TOTAL_REGISTROS_ARQUIVOInativar VARCHAR(100)
      ,@CTRL_EMPRESAInativar INT
      ,@CTRL_REDEInativar INT
      ,@CTRL_FILIALInativar INT
      ,@INICIO_PROCESSAMENTO_LOTEInativar VARCHAR(100)
      ,@FIM_PROCESSAMENTO_LOTEInativar VARCHAR(100)





DECLARE curTABELAInativar CURSOR FOR
      SELECT L.DESC_ETL_TIPO
          ,L.EXCLUI_PROCESSO_CONCLUIDO
          ,L.ID_ETL_TIPO
          ,L.INATIVO
          ,L.ORIGEM
          ,L.DESC_EAD
          ,L.DESC_EAD_DESTINO
          ,L.UTILIZA_LOTE
          ,L.ULTIMO_LOTE
          ,L.PERIODO_FECHAMENTO_LOTE
          ,L.DATA_HORA_ULTIMO_LOTE
          ,L.FILTRO
          ,L.INDICA_SOMENTE_MASTER
          ,L.IND_SOMENTE_ENTIDADE_PRINCIPAL
          ,L.TOTAL_REGISTROS_ARQUIVO
          ,L.CTRL_EMPRESA
          ,L.CTRL_REDE
          ,L.CTRL_FILIAL
          ,L.INICIO_PROCESSAMENTO_LOTE
          ,L.FIM_PROCESSAMENTO_LOTE FROM LJ_LX_ETL_TIPO L WHERE L.ID_ETL_TIPO NOT IN(SELECT T.ID_ETL_TIPO FROM @TABELA T ) and L.INATIVO != 1 and L.ORIGEM <> 3
		  AND L.ID_ETL_TIPO  < 9000

      
 OPEN curTABELAInativar

 FETCH NEXT FROM curTABELAInativar INTO @DESC_ETL_TIPOInativar
          ,@EXCLUI_PROCESSO_CONCLUIDOInativar
          ,@ID_ETL_TIPOInativar
          ,@INATIVOInativar
          ,@ORIGEMInativar
          ,@DESC_EADInativar
          ,@DESC_EAD_DESTINOInativar
          ,@UTILIZA_LOTEInativar
          ,@ULTIMO_LOTEInativar
          ,@PERIODO_FECHAMENTO_LOTEInativar
          ,@DATA_HORA_ULTIMO_LOTEInativar
          ,@FILTROInativar
          ,@INDICA_SOMENTE_MASTERInativar
          ,@IND_SOMENTE_ENTIDADE_PRINCIPALInativar
          ,@TOTAL_REGISTROS_ARQUIVOInativar
          ,@CTRL_EMPRESAInativar
          ,@CTRL_REDEInativar
          ,@CTRL_FILIALInativar
          ,@INICIO_PROCESSAMENTO_LOTEInativar
          ,@FIM_PROCESSAMENTO_LOTEInativar

                    
              
 WHILE @@FETCH_STATUS = 0 
 BEGIN

 FETCH NEXT FROM curTABELAInativar INTO @DESC_ETL_TIPOInativar
          ,@EXCLUI_PROCESSO_CONCLUIDOInativar
          ,@ID_ETL_TIPOInativar
          ,@INATIVOInativar
          ,@ORIGEMInativar
          ,@DESC_EADInativar
          ,@DESC_EAD_DESTINOInativar
          ,@UTILIZA_LOTEInativar
          ,@ULTIMO_LOTEInativar
          ,@PERIODO_FECHAMENTO_LOTEInativar
          ,@DATA_HORA_ULTIMO_LOTEInativar
          ,@FILTROInativar
          ,@INDICA_SOMENTE_MASTERInativar
          ,@IND_SOMENTE_ENTIDADE_PRINCIPALInativar
          ,@TOTAL_REGISTROS_ARQUIVOInativar
          ,@CTRL_EMPRESAInativar
          ,@CTRL_REDEInativar
          ,@CTRL_FILIALInativar
          ,@INICIO_PROCESSAMENTO_LOTEInativar
          ,@FIM_PROCESSAMENTO_LOTEInativar
 END

 CLOSE curTABELAInativar;
 DEALLOCATE curTABELAInativar;


--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------

DECLARE @DESC_ETL_TIPO VARCHAR(100)
      ,@EXCLUI_PROCESSO_CONCLUIDO INT
      ,@ID_ETL_TIPO VARCHAR(100)
      ,@INATIVO INT
      ,@ORIGEM VARCHAR(100)
      ,@DESC_EAD VARCHAR(100)
      ,@DESC_EAD_DESTINO VARCHAR(100)
      ,@UTILIZA_LOTE INT
      ,@ULTIMO_LOTE INT
      ,@PERIODO_FECHAMENTO_LOTE INT
      ,@DATA_HORA_ULTIMO_LOTE VARCHAR(100)
      ,@FILTRO VARCHAR(100)
      ,@INDICA_SOMENTE_MASTER INT
      ,@IND_SOMENTE_ENTIDADE_PRINCIPAL INT
      ,@TOTAL_REGISTROS_ARQUIVO VARCHAR(100)
      ,@CTRL_EMPRESA INT
      ,@CTRL_REDE INT
      ,@CTRL_FILIAL INT
      ,@INICIO_PROCESSAMENTO_LOTE VARCHAR(100)
      ,@FIM_PROCESSAMENTO_LOTE VARCHAR(100)
DECLARE curTABELA CURSOR FOR
      SELECT * FROM @TABELA T WHERE t.INATIVO = 0 ORDER BY T.ORIGEM, T.ID_ETL_TIPO 

      
 OPEN curTABELA
 
 FETCH NEXT FROM curTABELA INTO @DESC_ETL_TIPO
          ,@EXCLUI_PROCESSO_CONCLUIDO
          ,@ID_ETL_TIPO
          ,@INATIVO
          ,@ORIGEM
          ,@DESC_EAD
          ,@DESC_EAD_DESTINO
          ,@UTILIZA_LOTE
          ,@ULTIMO_LOTE
          ,@PERIODO_FECHAMENTO_LOTE
          ,@DATA_HORA_ULTIMO_LOTE
          ,@FILTRO
          ,@INDICA_SOMENTE_MASTER
          ,@IND_SOMENTE_ENTIDADE_PRINCIPAL
          ,@TOTAL_REGISTROS_ARQUIVO
          ,@CTRL_EMPRESA
          ,@CTRL_REDE
          ,@CTRL_FILIAL
          ,@INICIO_PROCESSAMENTO_LOTE
          ,@FIM_PROCESSAMENTO_LOTE

                    
              
 WHILE @@FETCH_STATUS = 0 
 BEGIN

  IF NOT EXISTS (SELECT TOP 1 1 FROM LJ_LX_ETL_TIPO WHERE ID_ETL_TIPO = @ID_ETL_TIPO)
   BEGIN
     INSERT INTO LJ_LX_ETL_TIPO (DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,ID_ETL_TIPO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,PERIODO_FECHAMENTO_LOTE,DATA_HORA_ULTIMO_LOTE,FILTRO,INDICA_SOMENTE_MASTER,IND_SOMENTE_ENTIDADE_PRINCIPAL,TOTAL_REGISTROS_ARQUIVO,CTRL_EMPRESA,CTRL_REDE,CTRL_FILIAL,INICIO_PROCESSAMENTO_LOTE,FIM_PROCESSAMENTO_LOTE)
     VALUES (@DESC_ETL_TIPO,@EXCLUI_PROCESSO_CONCLUIDO,@ID_ETL_TIPO,@INATIVO,@ORIGEM,@DESC_EAD,@DESC_EAD_DESTINO,@UTILIZA_LOTE,@ULTIMO_LOTE,@PERIODO_FECHAMENTO_LOTE,@DATA_HORA_ULTIMO_LOTE,@FILTRO,@INDICA_SOMENTE_MASTER,@IND_SOMENTE_ENTIDADE_PRINCIPAL,@TOTAL_REGISTROS_ARQUIVO,@CTRL_EMPRESA,@CTRL_REDE,@CTRL_FILIAL,@INICIO_PROCESSAMENTO_LOTE,@FIM_PROCESSAMENTO_LOTE)
     PRINT(''INSERT EM: '' + @DESC_ETL_TIPO + '' EXECUTADO COM SUCESSO.'')
   END
  ELSE
   BEGIN
     UPDATE LJ_LX_ETL_TIPO SET DESC_ETL_TIPO = @DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO = @EXCLUI_PROCESSO_CONCLUIDO
            ,ID_ETL_TIPO = @ID_ETL_TIPO,ORIGEM = @ORIGEM,DESC_EAD = @DESC_EAD,DESC_EAD_DESTINO = @DESC_EAD_DESTINO
            ,FILTRO = @FILTRO , PERIODO_FECHAMENTO_LOTE = @PERIODO_FECHAMENTO_LOTE
     WHERE ID_ETL_TIPO = @ID_ETL_TIPO
     PRINT(''UPDATE EM: '' + @DESC_ETL_TIPO + '' EXECUTADO COM SUCESSO.'')
   END
  

  FETCH NEXT FROM curTABELA INTO @DESC_ETL_TIPO
          ,@EXCLUI_PROCESSO_CONCLUIDO
          ,@ID_ETL_TIPO
          ,@INATIVO
          ,@ORIGEM
          ,@DESC_EAD
          ,@DESC_EAD_DESTINO
          ,@UTILIZA_LOTE
          ,@ULTIMO_LOTE
          ,@PERIODO_FECHAMENTO_LOTE
          ,@DATA_HORA_ULTIMO_LOTE
          ,@FILTRO
          ,@INDICA_SOMENTE_MASTER
          ,@IND_SOMENTE_ENTIDADE_PRINCIPAL
          ,@TOTAL_REGISTROS_ARQUIVO
          ,@CTRL_EMPRESA
          ,@CTRL_REDE
          ,@CTRL_FILIAL
          ,@INICIO_PROCESSAMENTO_LOTE
          ,@FIM_PROCESSAMENTO_LOTE
          
           

 END  


 

 CLOSE curTABELA;
 DEALLOCATE curTABELA;


 PRINT ''COMMIT'';
 COMMIT;
END TRY
BEGIN CATCH
 
 PRINT ''ROLLBACK'';
 ROLLBACK;
 
 IF CURSOR_STATUS(''global'',''curTABELA'') >= -1
  BEGIN
   CLOSE curTABELA;
   DEALLOCATE curTABELA;
  END
 
 IF CURSOR_STATUS(''global'',''curTABELAInativar'') >= -1
 BEGIN
  CLOSE curTABELAInativar;
  DEALLOCATE curTABELAInativar;
 END

 SELECT ERROR_NUMBER() AS ErrorNumber, ERROR_MESSAGE() AS ErrorMessage

END CATCH



/* 002 - Criação Tipos ETL.sql */
print(convert(varchar(100),getdate(),121)+'' Fim    - 002 - Criação Tipos ETL.sql'')
')

exec('
/* 003 - Criação Tipos ETL Componente.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 003 - Criação Tipos ETL Componente.sql'')

SET NOCOUNT ON

BEGIN TRAN

BEGIN TRY


DECLARE @TABELA TABLE(ID_ETL_TIPO VARCHAR(100)
      ,INATIVO INT
      ,VERSAO VARCHAR(100)
      ,DESC_EAD VARCHAR(100)
      ,DESC_EAD_DESTINO VARCHAR(100))



INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''0'',''0'',''3.1.1.0'','''','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''1'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojasVarejo.LojasVarejo'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''2'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaVendedores.LojaVendedores'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''3'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaImpressorasFiscais.LojaImpressorasFiscais'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''4'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLjDocumentoECF.LjDocumentoEcf'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''5'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaEntradas.LojaEntradas'',''Linx.ETL9002.BO.LjEtlLojaEntradas.LojaEntradasDif'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''6'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaVendaPgto.LojaVendaPgto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''7'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaSaidas.LojaSaidas'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''8'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaControleFiscal.LojaControleFiscal'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''9'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaCaixaLancamentos.LojaCaixaLancamentos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''10'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaPedido.LojaPedido'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''11'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlFaturamentoSequencias.FaturamentoSequenciais'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''12'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlInventario.Inventario'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''13'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaReserva.LojaReserva'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''14'',''1'',''3.1.1.0'',''Linx.ETL9002.BO.(Tipo Descontinuado - 3.0)'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''15'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaConserto.LojaConserto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''16'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaNotaFiscal.LojaNotaFiscal'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''17'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlClientesVarejo.ClientesVarejo'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''18'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlHistoricoVenda.LojaHistoricoVenda'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''19'',''1'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaTransitoHistorico.wLojaTransitoHistorico'',''Linx.ETL9002.BO.LjEtlLojaTransitoHistorico.LojaTransitoHistorico'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''20'',''1'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlClientesVarejoLog.ClientesVarejoLog'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''21'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaVendaPgto.LojaEventosLog'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''22'',''1'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlParametros.Parametros'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''23'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlParametrosLojas.ParametrosLoja'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''24'',''1'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlParametrosLojasTerminal.ParametrosLojaTerminal'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''25'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLxImpMfdE01.LxImpMfdE01'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''26'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLxImpMfdE14.LxImpMfdE14'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''27'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLxImpMfdE15.LxImpMfdE15'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''28'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLxImpMfdE21.LxImpMfdE21'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''29'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E01'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''30'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E12'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''31'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E13'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''32'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E14'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''33'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E15'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''34'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLjEcfAC.LjEcfAc1704E21'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''35'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLojaNotaFiscal.DadosCadastroXmlNfe'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''36'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLog.LjEtlLog'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''37'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlLog.LjEtlLogStatus'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''38'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlSat.LojaCfSat'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''39'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlPaf.LjIdPafEcf'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''40'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlPaf.LjIdPafEcfFilial'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''41'',''0'',''3.1.1.0'',''Linx.ETL9002.BO.LjEtlPropriedade.Propriedade'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''100'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlBancos.Bancos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''101'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlMoedas.Moedas'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''102'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlUnidadesFederacao.UnidadesFederacao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''103'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlUnidadesFederacaoIcms.UnidadesFederacaoIcms'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''104'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlReservaTipo.LojaReservaTipo'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''105'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojasNaturezaOperacao.LojasNaturezaOperacao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''106'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaTiposEntradaSaida.LojaTiposEntradaSaida'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''107'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaCaixaTipos.LojaCaixaTipos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''108'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaMotivosCancelamentos.LojaMotivosCancelamentos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''109'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaPedidoTipo.LojaPedidoTipo'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''110'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlTributOrigem.TributOrigem'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''111'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlTributIcms.TributIcms'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''113'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlTiposPgto.TiposPgto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''116'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCadastroCliFor.CadastroCliFor'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''117'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlFiliais.Filiais'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''121'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaVendedores.LojaVendedores'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''126'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLxAdministradorasCartao.LxAdministradorasCartao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''127'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaFormasPgto.LojaFormasPgto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''128'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLjFidelidadePrograma.LjFidelidadePrograma'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''130'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLjLimiteParcelamento.LjLimiteParcelamento'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''133'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlTabelasPreco.TabelasPreco'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''134'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlTabelasPrecoFilial.wTabelasPrecoFilial'',''Linx.ETL9001.BO.LjEtlTabelasPrecoFilial.TabelasPrecoFilial'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''139'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaOperacaoFilial.LojaOperacaoFilial'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''144'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLjFormaPgtoLimite.LjFormaPgtoLimite'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''145'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlClassifFiscal.ClassifFiscal'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''150'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlProdutosTamanhos.ProdutosTamanhos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''151'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlProdutos.Produtos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''154'',''1'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlProdutosFoto.ProdutosFoto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''158'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlProdutosPrecoFilial.ProdutosPrecoFilial'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''171'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlEstoqueProdutos.wEstoqueProdutosBase'',''Linx.ETL9001.BO.LjEtlEstoqueProdutos.EstoqueProdutos'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''172'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlProdutosIndicadorCfop.ProdutosIndicadorCfop'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''173'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlProdutoMontagemKit.ProdutoMontagemKit'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''182'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlClienteVarTipos.ClienteVarTipos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''183'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlClienteVarBloq.ClienteVarBloq'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''184'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlClienteVarConceitos.ClienteVarConceitos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''185'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlClienteVarPont.ClienteVarPont'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''186'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaOperacaoCliente.LojaOperacaoCliente'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''187'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlClientesVarejo.ClientesVarejo'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''192'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlClassifFiscalImposto.ClassifFiscalImposto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''212'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlEstoqueSugestaoProduto.EstoqueSugestaoProduto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''213'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCtbLxImpostoTipo.CtbLxImpostoTipo'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''214'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlTransportadoras.Transportadoras'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''215'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCtbLxIndicadorCfop.CtbLxIndicadorCfop'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''216'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCtbLxNaturezaOperacao.CtbLxNaturezasOperacao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''217'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCtbLxIndicadorFiscalTerceiro.CtbLxIndicadorFiscalTerceiro'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''218'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCtbLxTipoOperacao.CtbLxTipoOperacao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''219'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCtbLxCaracteristicaCfop.CtbLxCaracteristicaCfop'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''220'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCtbExcecaoGrupo.CtbExcecaoGrupo'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''221'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCtbExcecaoImposto.CtbExcecaoImposto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''224'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCadastroItemFiscal.CadastroItemFiscal'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''229'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaProcessos.LojaProcessos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''233'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlParametros.Parametros'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''234'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlParametrosLojas.ParametrosLoja'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''235'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlParametrosLojasTerminal.ParametrosLojaTerminal'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''239'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLjTransacao.LjTransacao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''240'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLjPerfilUsuario.LjPerfilUsuario'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''245'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlPropriedade.Propriedade'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''246'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCtbEspecieSerie.CtbEspecieSerie'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''247'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlSeriesNF.wSeriesNf'',''Linx.ETL9001.BO.LjEtlSeriesNF.SeriesNf'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''248'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlFaturamentoSequenciais.FaturamentoSequenciais'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''249'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlSat.CredenciadoraCartao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''253'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaStatusConserto.LojaStatusConserto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''254'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaMotivoConserto.LojaMotivoConserto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''255'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaMotivoCancConserto.LojaMotivoCancConserto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''256'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaConserto.LojaConserto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''258'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlEntradas.Entradas'',''Linx.ETL9001.BO.LjEtlEntradas.LjEntFiscal'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''263'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLcfLxPais.LcfLxPais'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''264'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLcfLxUf.LcfLxUf'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''266'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlInventarioSolicitacao.InventarioSolicitacao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''271'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaMotivoDesconto.LojaMotivosDesconto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''272'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaMotivoDevolucao.LojaMotivoDevolucao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''273'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaTransito.LojaTransito'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''278'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaCompras.wLojaCompra'',''Linx.ETL9001.BO.LjEtlLojaCompras.LojaCompra'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''283'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLojaTransitoEntradas.wLojaTransitoEntradas'',''Linx.ETL9001.BO.LjEtlLojaTransitoEntradas.LojaTransitoEntradas'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''285'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlProdutosFichaImportacao.ProdutosFichaImportacao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''286'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlProdutosFichaImportacaoValor.ProdutosFichaImportacaoValor'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''287'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlTabelasImposto.TabelasImposto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''288'',''1'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlTabelasImpostoFiliais.TabelasImpostoFiliais'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''289'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlProdutosImpostos.ProdutosImpostos'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''290'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlTabelaAliquotaImpostoItem.TabelaAliquotaImpostoItem'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''291'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlFciFaixaCiUf.FciFaixaCiUf'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''292'',''1'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlLjProdutoImposto.LjProdutoImposto'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''293'',''0'',''3.1.1.0'',''Linx.ETL9004.BO.LjEtlInventarioSugestao.InventarioSugestao'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''294'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLjValeProduto.wLjValeProduto'',''Linx.ETL9001.BO.LjEtlLjValeProduto.LjValeProduto'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''295'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCestNcm.TabelaLxCest'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''296'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCestNcm.TabelaLxNcm'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''297'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCestNcm.CestNcm'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''298'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlCestNcm.UnidadesFederacaoIcmsPartilha'','''')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''152'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlProdutosPrecos.wProdutosPrecos'',''Linx.ETL9001.BO.LjEtlProdutosPrecos.ProdutosPrecos'')
INSERT INTO @TABELA (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO) VALUES (''299'',''0'',''3.1.1.0'',''Linx.ETL9001.BO.LjEtlLjAReceberCheques.WCtbValesAReceber'',''Linx.ETL9001.BO.LjEtlLjAReceberCheques.LojaAReceberCheques'')


DECLARE @DESC_ETL_TIPOInativar VARCHAR(100)      
      ,@ID_ETL_TIPOInativar VARCHAR(100)
      ,@INATIVOInativar INT
      ,@VERSAOInativar VARCHAR(100)
      ,@DESC_EADInativar VARCHAR(100)
      ,@DESC_EAD_DESTINOInativar VARCHAR(100)
      
DECLARE curTABELAInativar CURSOR FOR
      SELECT L.ID_ETL_TIPO
          ,L.INATIVO
          ,L.VERSAO
          ,L.DESC_EAD
          ,L.DESC_EAD_DESTINO
          FROM LJ_ETL_TIPO_COMPONENTE L WHERE L.ID_ETL_TIPO NOT IN(SELECT T.ID_ETL_TIPO FROM @TABELA T ) and L.INATIVO != 1


      
 OPEN curTABELAInativar

 FETCH NEXT FROM curTABELAInativar INTO @ID_ETL_TIPOInativar
          ,@INATIVOInativar
          ,@VERSAOInativar
          ,@DESC_EADInativar
          ,@DESC_EAD_DESTINOInativar
          

                    
              
 WHILE @@FETCH_STATUS = 0 
 BEGIN

 IF EXISTS (SELECT TOP 1 1 FROM LJ_ETL_TIPO_COMPONENTE WHERE ID_ETL_TIPO = @ID_ETL_TIPOInativar and VERSAO = @VERSAOInativar)
  BEGIN
   UPDATE LJ_ETL_TIPO_COMPONENTE SET INATIVO = 1,DESC_EAD = (SELECT CASE ISNULL(DESC_EAD,'''')  WHEN '''' THEN ''DESCRIÇÃO NULA'' ELSE DESC_EAD END) + '' (Tipo Descontinuado - 3.0)''
     WHERE ID_ETL_TIPO = @ID_ETL_TIPOInativar AND VERSAO = @VERSAOInativar
     PRINT(''UPDATE EM: '' + @DESC_ETL_TIPOInativar + '' INATIVADO COM SUCESSO.'')
  END


 FETCH NEXT FROM curTABELAInativar INTO @ID_ETL_TIPOInativar
          ,@INATIVOInativar
          ,@VERSAOInativar
          ,@DESC_EADInativar
          ,@DESC_EAD_DESTINOInativar
          
 END

 CLOSE curTABELAInativar;
 DEALLOCATE curTABELAInativar;


--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------

DECLARE @ID_ETL_TIPO VARCHAR(100)
      ,@INATIVO INT
      ,@VERSAO VARCHAR(100)
      ,@DESC_EAD VARCHAR(100)
      ,@DESC_EAD_DESTINO VARCHAR(100)
      
DECLARE curTABELA CURSOR FOR
      SELECT * FROM @TABELA T WHERE T.INATIVO = 0 ORDER BY T.ID_ETL_TIPO 

      
 OPEN curTABELA
 
 FETCH NEXT FROM curTABELA INTO @ID_ETL_TIPO
          ,@INATIVO
          ,@VERSAO
          ,@DESC_EAD
          ,@DESC_EAD_DESTINO
          

                    
              
 WHILE @@FETCH_STATUS = 0 
 BEGIN

  IF NOT EXISTS (SELECT TOP 1 1 FROM LJ_ETL_TIPO_COMPONENTE WHERE ID_ETL_TIPO = @ID_ETL_TIPO AND VERSAO = @VERSAO)
   BEGIN
     INSERT INTO LJ_ETL_TIPO_COMPONENTE (ID_ETL_TIPO,INATIVO,VERSAO,DESC_EAD,DESC_EAD_DESTINO)
     VALUES (@ID_ETL_TIPO,@INATIVO,@VERSAO,@DESC_EAD,@DESC_EAD_DESTINO)
     PRINT(''INSERT EM: '' + @ID_ETL_TIPO + '' EXECUTADO COM SUCESSO.'')
   END
  ELSE
   BEGIN
     UPDATE LJ_ETL_TIPO_COMPONENTE SET ID_ETL_TIPO = @ID_ETL_TIPO,INATIVO = @INATIVO,VERSAO = @VERSAO,DESC_EAD = @DESC_EAD,DESC_EAD_DESTINO = @DESC_EAD_DESTINO            
     WHERE ID_ETL_TIPO = @ID_ETL_TIPO AND VERSAO = @VERSAO
     PRINT(''UPDATE EM: '' + @ID_ETL_TIPO + '' EXECUTADO COM SUCESSO.'')
   END
  

  FETCH NEXT FROM curTABELA INTO @ID_ETL_TIPO
          ,@INATIVO
          ,@VERSAO
          ,@DESC_EAD
          ,@DESC_EAD_DESTINO
          
          
           

 END  


 

 CLOSE curTABELA;
 DEALLOCATE curTABELA;


 PRINT ''COMMIT'';
 COMMIT;
END TRY
BEGIN CATCH
 PRINT ''ROLLBACK'';
 ROLLBACK;
 
 IF CURSOR_STATUS(''global'',''curTABELA'') >= -1
  BEGIN
   CLOSE curTABELA;
   DEALLOCATE curTABELA;
  END
 
 IF CURSOR_STATUS(''global'',''curTABELAInativar'') >= -1
 BEGIN
  CLOSE curTABELAInativar;
  DEALLOCATE curTABELAInativar;
 END

 SELECT ERROR_NUMBER() AS ErrorNumber, ERROR_MESSAGE() AS ErrorMessage

END CATCH




/* 003 - Criação Tipos ETL Componente.sql */
print(convert(varchar(100),getdate(),121)+'' Fim    - 003 - Criação Tipos ETL Componente.sql'')
')

exec('
/* 004 - Alterações Adicionais.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 004 - Alterações Adicionais.sql'')

SET NOCOUNT ON

BEGIN TRAN

BEGIN TRY

 IF SCHEMA_ID(N''DBO'') IS NULL EXECUTE(N''CREATE SCHEMA DBO'');

 
 --Inventário Solicitação Produto
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''INVENTARIO_SOLICITACAO_PRODUTO'' )
 BEGIN

  EXEC(''
   CREATE TABLE [dbo].[INVENTARIO_SOLICITACAO_PRODUTO](
    [ID_INVENTARIO] [int] NOT NULL,
    [ITEM] [int] NOT NULL,
    [PRODUTO] [char](12) NULL,
    [COR_PRODUTO] [char](10) NULL,
    [DATA_PARA_TRANSFERENCIA] [datetime] NULL,
    CONSTRAINT [PK_INVENTARIO_SOLICITACAO_PRODUTO] PRIMARY KEY NONCLUSTERED 
   (
    [ID_INVENTARIO] ASC,
    [ITEM] ASC
   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
   ) ON [PRIMARY]
  '')

  EXEC(''
   ALTER TABLE [dbo].[INVENTARIO_SOLICITACAO_PRODUTO]  WITH NOCHECK ADD  CONSTRAINT [FK_INVENTARIO_SOLICITACAO_PRODUTO] FOREIGN KEY([ID_INVENTARIO])
   REFERENCES [dbo].[INVENTARIO_SOLICITACAO] ([ID_INVENTARIO])
   ON UPDATE CASCADE
   ON DELETE CASCADE
   NOT FOR REPLICATION 
  '')

  EXEC(''
   ALTER TABLE [dbo].[INVENTARIO_SOLICITACAO_PRODUTO] CHECK CONSTRAINT [FK_INVENTARIO_SOLICITACAO_PRODUTO]
  '')

 END

 --INVENTARIO_SUGESTAO
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''INVENTARIO_SUGESTAO'' )
 BEGIN
 
  EXEC(''
   CREATE TABLE [dbo].[INVENTARIO_SUGESTAO](
    [INVENTARIO_SUGESTAO] [int] NOT NULL,
    [EMISSAO] [datetime] NOT NULL,
    [DESC_SUGESTAO] [varchar](40) NOT NULL,
    [RESPONSAVEL] [varchar](25) NULL,
    [DATA_LIMITE_EFETIVACAO] [datetime] NULL,
    [OBS] [varchar](max) NULL,
    [ENVIA_LOJA] [bit] NOT NULL,
    [DATA_PARA_TRANSFERENCIA] [datetime] NULL,
    CONSTRAINT [XPKINVENTARIO_SUGESTAO] PRIMARY KEY CLUSTERED 
   (
    [INVENTARIO_SUGESTAO] ASC
   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
   ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

  '') 

 END

 --INVENTARIO_SUGESTAO
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''INVENTARIO_SUGESTAO_PRODUTO'' )
 BEGIN
 
  EXEC(''
   CREATE TABLE [dbo].[INVENTARIO_SUGESTAO_PRODUTO](
    [INVENTARIO_SUGESTAO] [int] NOT NULL,
    [COD_FILIAL] [char](6) NOT NULL,
    [PRODUTO] [char](12) NOT NULL,
    [COR_PRODUTO] [char](10) NOT NULL,
    [MOTIVO] [varchar](100) NULL,
    [ORDEM] [int] NULL,
    [SEQ] [char](6) NULL,
    [TIMESTAMP] [timestamp] NULL,
    [DATA_PARA_TRANSFERENCIA] [datetime] NULL,
    CONSTRAINT [XPKINVENTARIO_SUGESTAO_PRODUTO] PRIMARY KEY CLUSTERED 
   (
    [INVENTARIO_SUGESTAO] ASC,
    [COD_FILIAL] ASC,
    [PRODUTO] ASC,
    [COR_PRODUTO] ASC
   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
   ) ON [PRIMARY]

  '') 

  EXEC(''
   ALTER TABLE [dbo].[INVENTARIO_SUGESTAO_PRODUTO]  WITH NOCHECK ADD  CONSTRAINT [XFK12230_INVENTARIO_SUGESTAO_PRODUTO] FOREIGN KEY([COD_FILIAL])
    REFERENCES [dbo].[FILIAIS] ([COD_FILIAL])
    NOT FOR REPLICATION 
  '')

  EXEC(''
   ALTER TABLE [dbo].[INVENTARIO_SUGESTAO_PRODUTO] CHECK CONSTRAINT [XFK12230_INVENTARIO_SUGESTAO_PRODUTO]
  '')

  EXEC(''
   ALTER TABLE [dbo].[INVENTARIO_SUGESTAO_PRODUTO]  WITH NOCHECK ADD  CONSTRAINT [XFK12232_INVENTARIO_SUGESTAO_PRODUTO] FOREIGN KEY([INVENTARIO_SUGESTAO])
    REFERENCES [dbo].[INVENTARIO_SUGESTAO] ([INVENTARIO_SUGESTAO])
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT FOR REPLICATION 
  '')

  EXEC(''
   ALTER TABLE [dbo].[INVENTARIO_SUGESTAO_PRODUTO] CHECK CONSTRAINT [XFK12232_INVENTARIO_SUGESTAO_PRODUTO]
  '')

  EXEC(''
   ALTER TABLE [dbo].[INVENTARIO_SUGESTAO_PRODUTO]  WITH NOCHECK ADD  CONSTRAINT [XFK12234_INVENTARIO_SUGESTAO_PRODUTO] FOREIGN KEY([PRODUTO], [COR_PRODUTO])
    REFERENCES [dbo].[PRODUTO_CORES] ([PRODUTO], [COR_PRODUTO])
    NOT FOR REPLICATION 
  '')

  EXEC(''
   ALTER TABLE [dbo].[INVENTARIO_SUGESTAO_PRODUTO] CHECK CONSTRAINT [XFK12234_INVENTARIO_SUGESTAO_PRODUTO]
  '')

 END

 --LOJA_MOTIVOS_DESCONTO
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''LOJA_MOTIVOS_DESCONTO'' )
 BEGIN
 
  EXEC(''
   CREATE TABLE [dbo].[LOJA_MOTIVOS_DESCONTO](
    [CODIGO_DESCONTO] [char](2) NOT NULL,
    [DESC_MOTIVO_DESCONTO] [varchar](25) NOT NULL,
    [LIMITE_DESCONTO] [numeric](5, 2) NOT NULL,
    [TIMESTAMP] [timestamp] NULL,
    [DATA_PARA_TRANSFERENCIA] [datetime] NULL,
    [LX_STATUS_REGISTRO] [int] NULL,
    CONSTRAINT [PK_LOJA_MOTIVOS_DESCONTO] PRIMARY KEY NONCLUSTERED 
   (
    [CODIGO_DESCONTO] ASC
   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
   ) ON [PRIMARY]'')

  EXEC(''
  ALTER TABLE [dbo].[LOJA_MOTIVOS_DESCONTO] ADD  CONSTRAINT [DF_LX_STATUS_REGISTRO]  DEFAULT ((1)) FOR [LX_STATUS_REGISTRO]'')
 
 END


 --LOJA_MOTIVO_DEVOLUCAO
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''LOJA_MOTIVO_DEVOLUCAO'' )
 BEGIN
 
  EXEC(''
  CREATE TABLE [dbo].[LOJA_MOTIVO_DEVOLUCAO](
   [ID_MOTIVO_DEVOLUCAO] [smallint] NOT NULL,
   [COD_MOTIVO_DEVOLUCAO] [varchar](5) NOT NULL,
   [DESC_MOTIVO_DEVOLUCAO] [varchar](60) NOT NULL,
   [APROVACAO_GERENTE] [bit] NOT NULL,
   [INATIVO] [bit] NOT NULL,
   [LX_STATUS_REGISTRO] [int] NULL,
   CONSTRAINT [PK_LJV_MOTIVO_DEVOLUCAO] PRIMARY KEY NONCLUSTERED 
  (
   [ID_MOTIVO_DEVOLUCAO] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
  ) ON [PRIMARY]
  '')
 
  EXEC(''
   ALTER TABLE [dbo].[LOJA_MOTIVO_DEVOLUCAO] ADD  CONSTRAINT [DF_APROVACAO_GERENTE]  DEFAULT ((0)) FOR [APROVACAO_GERENTE]'')
 
  EXEC(''
   ALTER TABLE [dbo].[LOJA_MOTIVO_DEVOLUCAO] ADD  CONSTRAINT [DF_INATIVO]  DEFAULT ((0)) FOR [INATIVO]'')
 
  EXEC(''
   ALTER TABLE [dbo].[LOJA_MOTIVO_DEVOLUCAO] ADD  CONSTRAINT [DF_LX_STATUS_REGISTRO]  DEFAULT ((1)) FOR [LX_STATUS_REGISTRO]'')
 

 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''LOJA_VENDA_PROMOCAO'' )
 BEGIN

  exec(''
  CREATE TABLE [dbo].[LOJA_VENDA_PROMOCAO](
   [CODIGO_FILIAL] [char](6) NOT NULL,
   [TICKET] [char](8) NOT NULL,
   [DATA_VENDA] [datetime] NOT NULL,
   [ID_PROMOCAO] [int] NOT NULL,
   CONSTRAINT [PK_LOJA_VENDA_PROMOCAO] PRIMARY KEY CLUSTERED 
  (
   [CODIGO_FILIAL] ASC,
   [TICKET] ASC,
   [DATA_VENDA] ASC,
   [ID_PROMOCAO] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
  ) ON [PRIMARY]
  '')

 END

 --####################### comentado pois não vamos utilizar agora

 --IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''LJ_ETL_ESTATISTICA_ARQUIVO'' )
 --BEGIN

  
 -- EXEC(''
 --  ALTER TABLE [dbo].[LJ_ETL_ESTATISTICA_ARQUIVO]  WITH CHECK ADD  CONSTRAINT [FK_LJ_ETL_ESTATISTICA_ARQUIVO_LJ_LX_ETL_TIPO] FOREIGN KEY([ID_ETL_TIPO])
 --  REFERENCES [dbo].[LJ_LX_ETL_TIPO] ([ID_ETL_TIPO])
 --  ON UPDATE CASCADE
 --  --ON DELETE CASCADE
 --  NOT FOR REPLICATION 
 -- '')

 -- EXEC(''
 --  ALTER TABLE [dbo].[LJ_ETL_ESTATISTICA_ARQUIVO] CHECK CONSTRAINT [FK_LJ_ETL_ESTATISTICA_ARQUIVO_LJ_LX_ETL_TIPO]
 -- '')

 --END

 ----#########################

 ----#######################

 --IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''LJ_ETL_ESTATISTICA_ARQUIVO'' )
 --BEGIN

  
 -- EXEC(''
   
 --  ALTER TABLE [dbo].[LJ_ETL_ESTATISTICA_ARQUIVO]  WITH CHECK ADD  CONSTRAINT [FK_LJ_ETL_ESTATISTICA_ARQUIVO_LOJAS_VAREJO] FOREIGN KEY([CODIGO_FILIAL])
 --  REFERENCES [dbo].[LOJAS_VAREJO] ([CODIGO_FILIAL])
 --  ON UPDATE CASCADE
 --  --ON DELETE CASCADE
 --  NOT FOR REPLICATION 
 -- '')

 -- EXEC(''
 --  ALTER TABLE [dbo].[LJ_ETL_ESTATISTICA_ARQUIVO] CHECK CONSTRAINT [FK_LJ_ETL_ESTATISTICA_ARQUIVO_LOJAS_VAREJO]
 -- '')

 --END

 ----#########################


 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LJ_FIDELIDADE_PROGRAMA'' AND COLUMN_NAME = ''RECIBO_CONCESSAO'')
 BEGIN
  EXEC(''ALTER TABLE LJ_FIDELIDADE_PROGRAMA ADD  RECIBO_CONCESSAO VARCHAR(2000)'')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LJ_FIDELIDADE_PROGRAMA'' AND COLUMN_NAME = ''RECIBO_RESGATE'')
 BEGIN
  EXEC(''ALTER TABLE LJ_FIDELIDADE_PROGRAMA ADD  RECIBO_RESGATE VARCHAR(2000)'')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LJ_FIDELIDADE_PROGRAMA'' AND COLUMN_NAME = ''LX_TIPO_RESGATE'')
 BEGIN
  EXEC(''ALTER TABLE LJ_FIDELIDADE_PROGRAMA ADD  LX_TIPO_RESGATE TINYINT'')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LJ_FIDELIDADE_PROGRAMA'' AND COLUMN_NAME = ''QTDE_MULTIPLO_RESGATE'')
 BEGIN
  EXEC(''ALTER TABLE LJ_FIDELIDADE_PROGRAMA ADD  QTDE_MULTIPLO_RESGATE INT'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LJ_FIDELIDADE_PROGRAMA'' AND COLUMN_NAME = ''SALDO_MINIMO_RESGATE'')
 BEGIN
  EXEC(''ALTER TABLE LJ_FIDELIDADE_PROGRAMA ADD  SALDO_MINIMO_RESGATE INT'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJAS_VAREJO'' AND COLUMN_NAME = ''SEQUENCIA_PEDIDO'')
 BEGIN
  EXEC(''ALTER TABLE LOJAS_VAREJO ADD  SEQUENCIA_PEDIDO INT'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJAS_VAREJO'' AND COLUMN_NAME = ''SEQUENCIA_FATURA'')
 BEGIN
  EXEC(''ALTER TABLE LOJAS_VAREJO ADD  SEQUENCIA_FATURA CHAR(6)'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJAS_VAREJO'' AND COLUMN_NAME = ''SEQUENCIA_RECIBO'')
 BEGIN
  EXEC(''ALTER TABLE LOJAS_VAREJO ADD  SEQUENCIA_RECIBO CHAR(6)'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJAS_VAREJO'' AND COLUMN_NAME = ''SEQUENCIA_PRE_VENDA'')
 BEGIN
  EXEC(''ALTER TABLE LOJAS_VAREJO ADD  SEQUENCIA_PRE_VENDA CHAR(13)'')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJAS_VAREJO'' AND COLUMN_NAME = ''SEQUENCIA_DAV'')
 BEGIN
  EXEC(''ALTER TABLE LOJAS_VAREJO ADD  SEQUENCIA_DAV CHAR(13)'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''ESTOQUE_PRODUTOS'' AND COLUMN_NAME = ''LX_HASH'')
 BEGIN
  EXEC(''ALTER TABLE ESTOQUE_PRODUTOS ADD  LX_HASH BINARY(16)'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''CADASTRO_CLI_FOR'' AND COLUMN_NAME = ''COBRANCA_COMPLEMENTO'' AND CHARACTER_MAXIMUM_LENGTH != 60)
 BEGIN
  EXEC(''ALTER TABLE CADASTRO_CLI_FOR ALTER COLUMN COBRANCA_COMPLEMENTO VARCHAR(60)'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''CADASTRO_CLI_FOR'' AND COLUMN_NAME = ''ENTREGA_COMPLEMENTO'' AND CHARACTER_MAXIMUM_LENGTH != 60)
 BEGIN
  EXEC(''ALTER TABLE CADASTRO_CLI_FOR ALTER COLUMN ENTREGA_COMPLEMENTO VARCHAR(60)'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_CAIXA_TIPOS''  AND COLUMN_NAME = ''INATIVO'')
 BEGIN

  EXEC(''ALTER TABLE LOJA_CAIXA_TIPOS ADD INATIVO BIT NULL'')
  EXEC('' SP_BINDEFAULT ''''DEFAULT_0'''', [LOJA_CAIXA_TIPOS.INATIVO] '')
 END

 EXEC(''ALTER TABLE LOJA_CAIXA_TIPOS DISABLE TRIGGER ALL
 UPDATE LOJA_CAIXA_TIPOS SET INATIVO = 0, DATA_PARA_TRANSFERENCIA = DATA_PARA_TRANSFERENCIA 
 ALTER TABLE LOJA_CAIXA_TIPOS ALTER COLUMN INATIVO BIT NOT NULL
 ALTER TABLE LOJA_CAIXA_TIPOS ENABLE TRIGGER ALL
 '')

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_OPERACOES_VENDA''  AND COLUMN_NAME = ''ID_OPERACAO_VENDA'')
 BEGIN
  EXEC(''ALTER TABLE LOJA_OPERACOES_VENDA add ID_OPERACAO_VENDA INT NULL'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS''  AND COLUMN_NAME = ''ID_ARTIGO'')
 BEGIN
  EXEC(''ALTER TABLE PRODUTOS add ID_ARTIGO INT NULL'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS_BARRA''  AND COLUMN_NAME = ''ID_SKU'')
 BEGIN
  EXEC(''ALTER TABLE PRODUTOS_BARRA add ID_SKU INT NULL'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''CLIENTES_VAREJO''  AND COLUMN_NAME = ''ID_CRM_PFJ'')
 BEGIN
  EXEC(''ALTER TABLE CLIENTES_VAREJO add ID_CRM_PFJ INT NULL'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDEDORES'' AND COLUMN_NAME = ''ID_VENDEDOR'')
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDEDORES add ID_VENDEDOR INT NULL'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDEDORES'' AND COLUMN_NAME = ''EMAIL'')
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDEDORES add EMAIL varchar(250)'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_PGTO_CLIENTE'' AND COLUMN_NAME = ''PARCELAS_CARTAO '')
 BEGIN
  EXEC(''ALTER TABLE LOJA_PGTO_CLIENTE ADD PARCELAS_CARTAO SMALLINT NULL'')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA'' AND COLUMN_NAME = ''ID_MOTIVO_DEVOLUCAO'')
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA add ID_MOTIVO_DEVOLUCAO smallint'')
 END

 IF EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = ''COBRANCA_COMPLEMENTO'' AND TABLE_NAME = ''CADASTRO_CLI_FOR'' AND CHARACTER_MAXIMUM_LENGTH != 60)
 BEGIN
  EXEC(''ALTER TABLE CADASTRO_CLI_FOR ALTER COLUMN COBRANCA_COMPLEMENTO VARCHAR(60)'')
 END

 IF EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = ''EMAIL'' AND TABLE_NAME = ''CADASTRO_CLI_FOR'' AND CHARACTER_MAXIMUM_LENGTH != 10)
 BEGIN
  EXEC(''ALTER TABLE CADASTRO_CLI_FOR ALTER COLUMN EMAIL VARCHAR(100)'')
 END

 IF EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = ''EMAIL_NFE'' AND TABLE_NAME = ''CADASTRO_CLI_FOR'' AND CHARACTER_MAXIMUM_LENGTH != 60)
 BEGIN
  EXEC(''ALTER TABLE CADASTRO_CLI_FOR ALTER COLUMN EMAIL_NFE VARCHAR(100)'')
 END

 IF EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = ''ENTREGA_COMPLEMENTO'' AND TABLE_NAME = ''CADASTRO_CLI_FOR'' AND CHARACTER_MAXIMUM_LENGTH != 60)
 BEGIN
  EXEC(''ALTER TABLE CADASTRO_CLI_FOR ALTER COLUMN ENTREGA_COMPLEMENTO VARCHAR(60)'')
 END

 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS'' AND COLUMN_NAME = ''EMPRESA'')
 BEGIN
  EXEC(''ALTER TABLE PRODUTOS ADD EMPRESA INT'')
 END

 IF EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS'' AND COLUMN_NAME = ''REFER_FABRICANTE'' AND CHARACTER_MAXIMUM_LENGTH != 25)
 BEGIN 
  EXEC(''SP_UNBINDEFAULT ''''PRODUTOS.REFER_FABRICANTE'''''')
  EXEC(''ALTER TABLE PRODUTOS ALTER COLUMN REFER_FABRICANTE VARCHAR(25)'')
  EXEC(''SP_BINDEFAULT ''''DEF_CHAR_1'''', ''''PRODUTOS.REFER_FABRICANTE'''''')
 END

 IF EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''DADOS_CADASTRO_XML_NFE'')
 BEGIN
  IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''DADOS_CADASTRO_XML_NFE'' AND COLUMN_NAME = ''DATA_PARA_TRANSFERENCIA'')
  BEGIN
   EXEC(''ALTER TABLE DADOS_CADASTRO_XML_NFE ADD DATA_PARA_TRANSFERENCIA DATETIME'')
  END

  IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''DADOS_CADASTRO_XML_NFE'' AND COLUMN_NAME = ''LX_STATUS_XML_NFE'')
  BEGIN
   EXEC(''ALTER TABLE DADOS_CADASTRO_XML_NFE ADD LX_STATUS_XML_NFE INT'')
  END
 END

 --Criação Colunas DATA_PARA_TRANSFERENCIA
 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''CTB_LX_INDICADOR_FISCAL_TERCEIRO'' AND COLUMN_NAME = ''DATA_PARA_TRANSFERENCIA'')
 BEGIN
    EXEC(''ALTER TABLE CTB_LX_INDICADOR_FISCAL_TERCEIRO ADD DATA_PARA_TRANSFERENCIA DATETIME'')
    EXEC(''SP_BINDEFAULT ''''DATA_ATUAL'''', ''''CTB_LX_INDICADOR_FISCAL_TERCEIRO.DATA_PARA_TRANSFERENCIA'''''')
 END

 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LCF_LX_PAIS'' AND COLUMN_NAME = ''DATA_PARA_TRANSFERENCIA'')
 BEGIN
    EXEC(''ALTER TABLE LCF_LX_PAIS ADD DATA_PARA_TRANSFERENCIA DATETIME'')
    EXEC(''SP_BINDEFAULT ''''DATA_ATUAL'''', ''''LCF_LX_PAIS.DATA_PARA_TRANSFERENCIA'''''')   
 END

 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''FATURAMENTO_SEQUENCIAIS'' AND COLUMN_NAME = ''DATA_PARA_TRANSFERENCIA'')
 BEGIN
    EXEC(''ALTER TABLE FATURAMENTO_SEQUENCIAIS ADD DATA_PARA_TRANSFERENCIA DATETIME'')
    EXEC(''SP_BINDEFAULT ''''DATA_ATUAL'''', ''''FATURAMENTO_SEQUENCIAIS.DATA_PARA_TRANSFERENCIA'''''')   
 END

 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''CTB_LX_TIPO_OPERACAO'' AND COLUMN_NAME = ''DATA_PARA_TRANSFERENCIA'')
 BEGIN
    EXEC(''ALTER TABLE CTB_LX_TIPO_OPERACAO ADD DATA_PARA_TRANSFERENCIA DATETIME'')
    EXEC(''SP_BINDEFAULT ''''DATA_ATUAL'''', ''''CTB_LX_TIPO_OPERACAO.DATA_PARA_TRANSFERENCIA'''''')  
 END    

 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LX_ADMINISTRADORAS_CARTAO'' AND COLUMN_NAME = ''DATA_PARA_TRANSFERENCIA'')
 BEGIN
    EXEC(''ALTER TABLE LX_ADMINISTRADORAS_CARTAO ADD DATA_PARA_TRANSFERENCIA DATETIME'')
    EXEC(''SP_BINDEFAULT ''''DATA_ATUAL'''', ''''LX_ADMINISTRADORAS_CARTAO.DATA_PARA_TRANSFERENCIA'''''')   
 END

 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LJ_PERFIL_USUARIO'' AND COLUMN_NAME = ''DATA_PARA_TRANSFERENCIA'')
 BEGIN
    EXEC(''ALTER TABLE LJ_PERFIL_USUARIO ADD DATA_PARA_TRANSFERENCIA DATETIME'')
    EXEC(''SP_BINDEFAULT ''''DATA_ATUAL'''', ''''LJ_PERFIL_USUARIO.DATA_PARA_TRANSFERENCIA'''''')   
 END

 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LJ_TRANSACAO'' AND COLUMN_NAME = ''DATA_PARA_TRANSFERENCIA'')
 BEGIN
    EXEC(''ALTER TABLE LJ_TRANSACAO ADD DATA_PARA_TRANSFERENCIA DATETIME'')
    EXEC(''SP_BINDEFAULT ''''DATA_ATUAL'''', ''''LJ_TRANSACAO.DATA_PARA_TRANSFERENCIA'''''')   
 END

  IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''CLASSIF_FISCAL_IMPOSTO'' AND COLUMN_NAME = ''LX_HASH'')
 BEGIN
  EXEC(''ALTER TABLE CLASSIF_FISCAL_IMPOSTO ADD LX_HASH VARBINARY (16)'')
 END
  IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS'' AND COLUMN_NAME = ''LX_HASH'')
 BEGIN
  EXEC(''ALTER TABLE PRODUTOS ADD LX_HASH VARBINARY (16) '')
 END
  IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS_BARRA'' AND COLUMN_NAME = ''LX_HASH'')
 BEGIN
  EXEC(''ALTER TABLE PRODUTOS_BARRA ADD LX_HASH VARBINARY (16)'')
 END
  IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS_PRECOS'' AND COLUMN_NAME = ''LX_HASH'')
 BEGIN
  EXEC(''ALTER TABLE PRODUTOS_PRECOS ADD LX_HASH VARBINARY (16)'')
 END

  IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LCF_LX_UF'' AND COLUMN_NAME = ''DATA_PARA_TRANSFERENCIA'')
 BEGIN
  EXEC(''ALTER TABLE LCF_LX_UF ADD DATA_PARA_TRANSFERENCIA DATETIME'')
 END
 
---------------------------------------------############  Script de criação adicional do Omni  #####################---------------------------------------------------------------

 if Exists (Select Top 1 1 from  INFORMATION_SCHEMA.TABLES where TABLE_NAME = ''EMPRESA'')
 Begin
  If Not Exists (Select Top 1 1 from  INFORMATION_SCHEMA.COLUMNS where table_name = ''EMPRESA'' and Column_Name = ''EMPRESA_SUPERIOR'')
  Begin 
   EXEC(''ALTER TABLE EMPRESA ADD EMPRESA_SUPERIOR INT NULL'')
  End
 end

 If Not Exists (Select Top 1 1 from  INFORMATION_SCHEMA.COLUMNS where table_name = ''LOJA_VENDEDORES'' and Column_Name = ''EMAIL'')
 Begin 
  EXEC(''ALTER TABLE LOJA_VENDEDORES ADD EMAIL VARCHAR(250) NULL'')
 End

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''COLECOES'' and Column_Name = ''ID_ATRIBUTO'')
 Begin
  EXEC(''ALTER TABLE COLECOES ADD ID_ATRIBUTO int NULL '')
 End

 if Exists (Select Top 1 1 from  INFORMATION_SCHEMA.TABLES where TABLE_NAME = ''CORES_BASICAS'')
 Begin
  If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''CORES_BASICAS'' and Column_Name = ''ID_ATRIBUTO'')
  Begin
   exec(''ALTER TABLE CORES_BASICAS ADD ID_ATRIBUTO int NULL '')
  End
 END

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_GRUPO'' and Column_Name = ''ID_ATRIBUTO'')
 Begin
  exec(''ALTER TABLE PRODUTOS_GRUPO ADD ID_ATRIBUTO int NULL '')
 End

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_TAMANHOS'' and Column_Name = ''ID_ATRIBUTO'')
 Begin
  exec(''ALTER TABLE PRODUTOS_TAMANHOS ADD ID_ATRIBUTO int NULL '')
 End

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_GRIFFES'' and Column_Name = ''ID_ATRIBUTO'')
 Begin
  exec(''ALTER TABLE PRODUTOS_GRIFFES ADD ID_ATRIBUTO int NULL '')
 End

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_TIPOS'' and Column_Name = ''ID_ATRIBUTO'')
 Begin
  exec(''ALTER TABLE PRODUTOS_TIPOS ADD ID_ATRIBUTO int NULL '')
 End

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_LINHAS'' and Column_Name = ''ID_ATRIBUTO'')
 Begin
  exec(''ALTER TABLE PRODUTOS_LINHAS ADD ID_ATRIBUTO int NULL '')
 End

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_CATEGORIA'' and Column_Name = ''ID_ATRIBUTO'')
 Begin
  exec(''ALTER TABLE PRODUTOS_CATEGORIA ADD ID_ATRIBUTO int NULL '')
 End

 if Exists (Select Top 1 1 from  INFORMATION_SCHEMA.TABLES where TABLE_NAME = ''PRODUTOS_SEGMENTO'')
 Begin
  If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_SEGMENTO'' and Column_Name = ''ID_ATRIBUTO'')
  Begin
   exec(''ALTER TABLE PRODUTOS_SEGMENTO ADD ID_ATRIBUTO int NULL '')
  End
 End

 if Exists (Select Top 1 1 from  INFORMATION_SCHEMA.TABLES where TABLE_NAME = ''PRODUTOS_SOLUCAO'')
 Begin
  If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_SOLUCAO'' and Column_Name = ''ID_ATRIBUTO'')
  Begin
   exec(''ALTER TABLE PRODUTOS_SOLUCAO ADD ID_ATRIBUTO int NULL '')
  End
 End

 if Exists (Select Top 1 1 from  INFORMATION_SCHEMA.TABLES where TABLE_NAME = ''EMPRESA'')
 Begin
  if Exists (Select Top 1 1 from  INFORMATION_SCHEMA.TABLES where TABLE_NAME = ''EMPRESA'')
  Begin
   If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''EMPRESA'' and Column_Name = ''ID_GPECON'')
   Begin
    exec(''ALTER TABLE EMPRESA ADD ID_GPECON int NULL '')
   End
  END
 END

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_SUBGRUPO'' and Column_Name = ''ID_ATRIBUTO'')
 Begin
  exec(''ALTER TABLE PRODUTOS_SUBGRUPO ADD ID_ATRIBUTO int NULL '')
 End
 
 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_LINHAS'' and Column_Name = ''ID_LINHA_PRODUTO'')
 Begin 
  exec(''ALTER TABLE PRODUTOS_LINHAS ADD ID_LINHA_PRODUTO int NULL '')
 End

 if Exists (Select Top 1 1 from  INFORMATION_SCHEMA.TABLES where TABLE_NAME = ''PRODUTOS_SUBCATEGORIA'')
 Begin
  If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_SUBCATEGORIA'' and Column_Name = ''ID_ATRIBUTO'')
  Begin
   Exec(''ALTER TABLE PRODUTOS_SUBCATEGORIA ADD ID_ATRIBUTO int NULL'')
  End
 End

 IF Exists (Select Top 1 1 from  INFORMATION_SCHEMA.TABLES where TABLE_NAME = ''PRODUTOS_MODELO'')
 BEGIN
  If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''PRODUTOS_MODELO'' and Column_Name = ''ID_ATRIBUTO'')
  BEGIN
   Exec(''ALTER TABLE PRODUTOS_MODELO ADD ID_ATRIBUTO int NULL '')
  END
 END

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''TABELAS_PRECO'' and Column_Name = ''ID_TAB_PRECO'')
 BEGIN
  Exec(''ALTER TABLE TABELAS_PRECO ADD ID_TAB_PRECO int NULL'') 
 END

 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''CLIENTES_VAREJO'' and Column_Name = ''INATIVO_PARA_CRM'')
 Begin
  Exec(''ALTER TABLE CLIENTES_VAREJO ADD INATIVO_PARA_CRM bit null'')
 End

 If Exists(Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''CLIENTES_VAREJO'' and Column_Name = ''INATIVO_PARA_CRM'' And Is_Nullable != ''NO'')
 BEGIN
  EXEC(''SP_BINDEFAULT ''''DEFAULT_0'''', [CLIENTES_VAREJO.INATIVO_PARA_CRM]'') 
 END
 
 If Exists(Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''CLIENTES_VAREJO'' and Column_Name = ''LX_STATUS_CLIENTE'')
 BEGIN
  EXEC(''ALTER TABLE CLIENTES_VAREJO ALTER COLUMN LX_STATUS_CLIENTE INT NULL'')
 END

 --Atualiza a Coluna para não enviar valores Nul 
 
 If Not Exists (Select Top 1 1 From Information_Schema.Columns Where Table_Name = ''LOJAS_VAREJO'' and Column_Name = ''ID_LOJA'')
 Begin
  exec(''ALTER TABLE LOJAS_VAREJO ADD ID_LOJA INT'')
 End

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''COLECOES'' AND COLUMN_NAME = ''COD_COLECAO'' )
 BEGIN
  EXEC(''ALTER TABLE COLECOES ADD COD_COLECAO CHAR (2)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS'' AND COLUMN_NAME = ''LX_HASH'' )
 BEGIN
   EXEC(''ALTER TABLE PRODUTOS ADD LX_HASH VARBINARY (16)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS_BARRA'' AND COLUMN_NAME = ''LX_HASH'' )
 BEGIN
  EXEC(''ALTER TABLE PRODUTOS_BARRA ADD LX_HASH VARBINARY (16)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS_PRECOS'' AND COLUMN_NAME = ''LX_HASH'' )
 BEGIN
  EXEC(''ALTER TABLE PRODUTOS_PRECOS ADD LX_HASH VARBINARY (16)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''CLIENTES_VAREJO'' AND COLUMN_NAME = ''ID_ACAO_CAMPANHA'' )
 BEGIN
  EXEC(''ALTER TABLE CLIENTES_VAREJO ADD ID_ACAO_CAMPANHA INT NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA'' AND COLUMN_NAME = ''ID_ACAO_CAMPANHA'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA ADD ID_ACAO_CAMPANHA INT NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA'' AND COLUMN_NAME = ''LX_HASH'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA ADD LX_HASH VARBINARY (16)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA'' AND COLUMN_NAME = ''NSU_ACUMULO_FIDELIDADE'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA ADD NSU_ACUMULO_FIDELIDADE VARCHAR (15)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA'' AND COLUMN_NAME = ''NSU_RESGATE_FIDELIDADE'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA ADD NSU_RESGATE_FIDELIDADE VARCHAR (15)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA'' AND COLUMN_NAME = ''HORA_ACUMULO_FIDELIDADE'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA ADD HORA_ACUMULO_FIDELIDADE VARCHAR (10)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA'' AND COLUMN_NAME = ''HORA_RESGATE_FIDELIDADE'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA ADD HORA_RESGATE_FIDELIDADE VARCHAR (10)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA_PARCELAS'' AND COLUMN_NAME = ''CHEQUE_DIGITO'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA_PARCELAS ADD CHEQUE_DIGITO CHAR (1)  NULL'')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA_PARCELAS'' AND COLUMN_NAME = ''ID_PLANO_FINANCIAMENTO'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA_PARCELAS ADD ID_PLANO_FINANCIAMENTO SMALLINT NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA_PARCELAS'' AND COLUMN_NAME = ''VALOR_PARCELA_FINANC'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA_PARCELAS ADD VALOR_PARCELA_FINANC NUMERIC (14,2)  NULL'')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA_PARCELAS'' AND COLUMN_NAME = ''VALOR_TAC'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA_PARCELAS ADD VALOR_TAC NUMERIC (14,2)  NULL '')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA_PRODUTO'' AND COLUMN_NAME = ''LX_HASH'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA_PRODUTO ADD LX_HASH VARBINARY (16)  NULL'')
 END
 
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''LOJA_VENDA_PRODUTO'' AND COLUMN_NAME = ''VALOR_TOTAL'' )
 BEGIN
  EXEC(''ALTER TABLE LOJA_VENDA_PRODUTO ADD VALOR_TOTAL NUMERIC (18,2)  NULL '')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''PRODUTOS_FOTO'' AND COLUMN_NAME = ''FOTO_ESTAMPA'' )
 BEGIN 
  EXEC(''ALTER TABLE PRODUTOS_FOTO ADD FOTO_ESTAMPA BIT'')
  EXEC(''UPDATE PRODUTOS_FOTO SET FOTO_ESTAMPA = 0'')
  EXEC(''ALTER TABLE PRODUTOS_FOTO ALTER COLUMN FOTO_ESTAMPA BIT NOT NULL'')
  EXEC SP_BINDEFAULT ''DEFAULT_0'', ''PRODUTOS_FOTO.FOTO_ESTAMPA'';
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''INVENTARIO_SUGESTAO'' AND COLUMN_NAME = ''ENVIA_LOJA'' )
 BEGIN
  EXEC(''ALTER TABLE INVENTARIO_SUGESTAO ADD ENVIA_LOJA bit  NULL '')
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''INVENTARIO_SUGESTAO_PRODUTO'' AND COLUMN_NAME = ''MOTIVO'' )
 BEGIN
  EXEC(''ALTER TABLE INVENTARIO_SUGESTAO_PRODUTO ADD MOTIVO varchar(100) NULL'')
 END
  
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''INVENTARIO_SUGESTAO_PRODUTO'' AND COLUMN_NAME = ''ORDEM'' )
 BEGIN
  EXEC(''ALTER TABLE INVENTARIO_SUGESTAO_PRODUTO ADD ORDEM int NULL'')
 END
 
  
 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''INVENTARIO_SUGESTAO_PRODUTO'' AND COLUMN_NAME = ''SEQ'' )
 BEGIN
  EXEC(''ALTER TABLE INVENTARIO_SUGESTAO_PRODUTO ADD SEQ char(6) NULL'')
 END


 IF NOT EXISTS(SELECT 1 FROM   INFORMATION_SCHEMA.COLUMNS WHERE  TABLE_NAME = ''LOJA_ENTRADAS'' AND COLUMN_NAME = ''CHAVE_NFE'')
 BEGIN
  EXEC(''ALTER TABLE LOJA_ENTRADAS ADD [CHAVE_NFE] [VARCHAR](44) NULL'')
 END
  
 IF NOT EXISTS(SELECT 1 FROM   INFORMATION_SCHEMA.COLUMNS WHERE  TABLE_NAME = ''LOJA_TRANSITO'' AND COLUMN_NAME = ''CHAVE_NFE'')
 BEGIN
  EXEC(''ALTER TABLE LOJA_TRANSITO ADD [CHAVE_NFE] [VARCHAR](44) NULL'')
 END
 
 IF NOT EXISTS(SELECT 1 FROM   INFORMATION_SCHEMA.COLUMNS WHERE  TABLE_NAME = ''LOJA_VENDA_PGTO'' AND COLUMN_NAME = ''GUID_VENDA_SAT'')
 BEGIN
  EXEC(''ALTER TABLE [dbo].[LOJA_VENDA_PGTO] ADD [GUID_VENDA_SAT] [uniqueidentifier] NULL'')
 END
   
 IF NOT EXISTS(SELECT 1 FROM   INFORMATION_SCHEMA.COLUMNS WHERE  TABLE_NAME = ''LOJA_IMPRESSORAS_FISCAIS'' AND COLUMN_NAME = ''TIPO_ECF'')
 BEGIN
  EXEC(''ALTER TABLE LOJA_IMPRESSORAS_FISCAIS ADD [TIPO_ECF] [char](7) NOT NULL CONSTRAINT [DF__LOJA_IMPR__TIPO___3B910AB8]  DEFAULT (''''ecf-if'''')'')
 END

 IF NOT EXISTS(SELECT 1 FROM   INFORMATION_SCHEMA.COLUMNS WHERE  TABLE_NAME = ''LJ_ETL_REPOSITORIO'' AND COLUMN_NAME = ''USUARIO'')
 BEGIN
 
 EXEC(''ALTER TABLE dbo.LJ_ETL_REPOSITORIO ADD USUARIO varchar(100) NULL'')
 
 EXEC(''ALTER TABLE dbo.LJ_ETL_REPOSITORIO ADD CONSTRAINT DF_LJ_ETL_REPOSITORIO_USUARIO DEFAULT SYSTEM_USER FOR USUARIO'')

 EXEC(''ALTER TABLE dbo.LJ_ETL_REPOSITORIO SET (LOCK_ESCALATION = TABLE)'')
 
 END

 IF NOT EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''PROP_CLIENTES_VAREJO'' )
 BEGIN
  CREATE TABLE [dbo].[PROP_CLIENTES_VAREJO](
 [PROPRIEDADE] [char](5) NOT NULL,
 [CODIGO_CLIENTE] [varchar](14) NOT NULL,
 [ITEM_PROPRIEDADE] [smallint] NOT NULL,
 [VALOR_PROPRIEDADE] [varchar](70) NULL,
 [DATA_PARA_TRANSFERENCIA] [datetime] NULL,
 CONSTRAINT [XPKPROP_CLIENTES_VAREJO] PRIMARY KEY NONCLUSTERED 
(
 [PROPRIEDADE] ASC,
 [CODIGO_CLIENTE] ASC,
 [ITEM_PROPRIEDADE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
 
 SET ANSI_PADDING OFF
 

 ALTER TABLE [dbo].[PROP_CLIENTES_VAREJO]  WITH CHECK ADD  CONSTRAINT [XFKP1_PROP_CLIENTES_VAREJO] FOREIGN KEY([PROPRIEDADE])
 REFERENCES [dbo].[PROPRIEDADE] ([PROPRIEDADE])
 ON UPDATE CASCADE
 ON DELETE CASCADE
 

 ALTER TABLE [dbo].[PROP_CLIENTES_VAREJO] CHECK CONSTRAINT [XFKP1_PROP_CLIENTES_VAREJO]
 

 ALTER TABLE [dbo].[PROP_CLIENTES_VAREJO]  WITH CHECK ADD  CONSTRAINT [XFKP2_PROP_CLIENTES_VAREJO] FOREIGN KEY([CODIGO_CLIENTE])
 REFERENCES [dbo].[CLIENTES_VAREJO] ([CODIGO_CLIENTE])
 ON UPDATE CASCADE
 ON DELETE CASCADE
 

 ALTER TABLE [dbo].[PROP_CLIENTES_VAREJO] CHECK CONSTRAINT [XFKP2_PROP_CLIENTES_VAREJO]
 
 
END
 
 PRINT ''COMMIT'';
 COMMIT;

END TRY
BEGIN CATCH

 PRINT ''ROLLBACK'';
 ROLLBACK;

 SELECT ERROR_NUMBER() AS ErrorNumber, ERROR_MESSAGE() AS ErrorMessage

END CATCH


/* 004 - Alterações Adicionais.sql */
print(convert(varchar(100),getdate(),121)+'' Fim    - 004 - Alterações Adicionais.sql'')

')

exec('
/* 005 - LX_LJ_ETL_DESABILITA_FILA.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 005 - LX_LJ_ETL_DESABILITA_FILA.sql'')


SET NOCOUNT ON

BEGIN TRAN

BEGIN TRY

 --Cria Procedure para Desabilitar a fila do ETL ao executar manualmente comando Update ou Insert
 If Object_id (''LX_LJ_ETL_DESABILITA_FILA'', ''P'') Is Not Null 
   EXEC (''Drop Procedure LX_LJ_ETL_DESABILITA_FILA'') 

 EXEC (''Create Procedure LX_LJ_ETL_DESABILITA_FILA 
     @LigaGeracaoFila Bit = 0 
   As 
   Begin 
    Declare @TipoExecucao Varchar(30) 

    If( @LigaGeracaoFila = 0 ) 
    Begin 
     Set CONTEXT_INFO 0X53454D5F46494C415F45544C 
     Set @TipoExecucao = ''''DESABILITADA''''
    End 
    Else 
    Begin 
     Set CONTEXT_INFO 0X 
     Set @TipoExecucao = ''''HABILITADA'''' 
    End 

    Insert Into Lj_etl_log 
       (Metodo, 
       Erro, 
       Data_hora_log) 

    Select ''''[LX_LJ_ETL_DESABILITA_FILA - Fila: '''' + @TipoExecucao + '''']'''', 
      ''''Máquina: "'''' + Cast(Host_name() As Varchar(254)) + 
      ''''" - Aplicação: "'''' + Cast(app_name() As Varchar(255)) + 
      ''''" - Usuário: "'''' + Cast(system_user As Varchar(255)) + 
      ''''" - Id Sessão: "'''' + Cast(@@SPID As Varchar(255)) + ''''"'''',    
      Getdate() 

   End'')

 PRINT ''COMMIT'';
 COMMIT;

END TRY
BEGIN CATCH

 PRINT ''ROLLBACK'';
 ROLLBACK;

 SELECT ERROR_NUMBER() AS ErrorNumber, ERROR_MESSAGE() AS ErrorMessage

END CATCH

/* 005 - LX_LJ_ETL_DESABILITA_FILA.sql */
print(convert(varchar(100),getdate(),121)+'' Fim    - 005 - LX_LJ_ETL_DESABILITA_FILA.sql'')

')

exec('
/* 006 - View''s.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 006 - View''''s.sql'')

SET NOCOUNT ON

BEGIN TRAN

BEGIN TRY

 IF EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = ''W_ETL_LOJA'')
  DROP VIEW W_ETL_LOJA

 EXEC
 (''

  CREATE VIEW W_ETL_LOJA

  AS
  
   SELECT  CODIGO_FILIAL AS CODIGO_LOJA,
     A.FILIAL  AS NOME_LOJA
   FROM LOJAS_VAREJO A
   INNER JOIN FILIAIS B  
   ON A.FILIAL = B.FILIAL 
 
 '')   

IF OBJECT_ID (''W_ETL_LOJA_VENDEDORES'', ''V'') IS NOT NULL 
 DROP VIEW [dbo].[W_ETL_LOJA_VENDEDORES]  
 
EXEC(''
CREATE VIEW [DBO].[W_ETL_LOJA_VENDEDORES]

AS  

 SELECT
  VENDEDOR
  ,CODIGO_FILIAL
  ,VENDEDOR_APELIDO
  ,NOME_VENDEDOR
  ,OPERA_CAIXA
  ,COMISSAO
  ,RG
  ,ENDERECO
  ,COMPLEMENTO
  ,CIDADE
  ,UF
  ,CEP
  ,TELEFONE
  ,CPF
  ,GERENTE
  ,CONVERT(VARBINARY(256), SENHA) AS SENHA
  ,DATA_DESATIVACAO
  ,DATA_ATIVACAO
  ,DATA_PARA_TRANSFERENCIA
  ,DESC_CARGO
  ,ACESSO_GERENCIAL
  ,CHECKSUM
  ,COMISSAO_CLIENTE_AUSENTE
  ,ID_PERFIL
  ,LX_STATUS_VENDEDOR
  ,EMAIL
  ,ID_VENDEDOR
 FROM LOJA_VENDEDORES'')


 PRINT ''COMMIT'';
 COMMIT;

END TRY
BEGIN CATCH

 PRINT ''ROLLBACK'';
 ROLLBACK;

 SELECT ERROR_NUMBER() AS ErrorNumber, ERROR_MESSAGE() AS ErrorMessage

END CATCH

/* 006 - View''s.sql */
print(convert(varchar(100),getdate(),121)+'' Fim    - 006 - View''''s.sql'')

')


-- 007 - Triggers Repositorio Loja.sql
print(convert(varchar(100),getdate(),121)+' Inicio - 007 - Triggers Repositorio Loja.sql')

Set nocount on

exec('
--==================================================================================================================================
--Dropar todas as Triggers do ETL.
declare @nome varchar(1000), @triggerPrefix varchar(1000)

set @triggerPrefix = ''%_ETL_%''

declare curNome cursor for

SELECT Triggers.name TriggerName   
FROM      sysobjects Triggers
  Inner Join sysobjects Tables On Triggers.parent_obj = Tables.id
  Inner Join syscomments Comments On Triggers.id = Comments.id
WHERE Triggers.xtype = ''TR''
 And Tables.xtype = ''U''
 and Triggers.name like @triggerPrefix and Triggers.name not like  ''%OMNI%''
ORDER BY Tables.Name, Triggers.name

OPEN curNome

FETCH NEXT FROM curNome 
INTO @nome

WHILE @@FETCH_STATUS = 0
BEGIN

 exec (''drop trigger '' + @nome)

 FETCH NEXT FROM curNome 
 INTO @nome
END
  
CLOSE curNome;
DEALLOCATE curNome;
--==================================================================================================================================
')

exec('
Create Trigger dbo.LXI_ETL_LOJAS_VAREJO
 on LOJAS_VAREJO
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJAS_VAREJO'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJAS_VAREJO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')
 
 exec('
Create Trigger dbo.LXU_ETL_LOJAS_VAREJO
 on LOJAS_VAREJO
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJAS_VAREJO'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJAS_VAREJO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_LOJA_VENDEDORES
 on LOJA_VENDEDORES
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_VENDEDORES'', ''VENDEDOR=''+Convert(Varchar(500),  inserted.VENDEDOR), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_VENDEDORES''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOJA_VENDEDORES
 on LOJA_VENDEDORES
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_VENDEDORES'', ''VENDEDOR=''+Convert(Varchar(500),  inserted.VENDEDOR), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_VENDEDORES''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')
 
exec('
Create Trigger dbo.LXI_ETL_LOJA_IMPRESSORAS_FISCAIS
 on LOJA_IMPRESSORAS_FISCAIS
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_IMPRESSORAS_FISCAIS'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}ID_IMPRESSORA=''+Convert(Varchar(500),  inserted.ID_IMPRESSORA), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_IMPRESSORAS_FISCAIS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOJA_IMPRESSORAS_FISCAIS
 on LOJA_IMPRESSORAS_FISCAIS
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_IMPRESSORAS_FISCAIS'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}ID_IMPRESSORA=''+Convert(Varchar(500),  inserted.ID_IMPRESSORA), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_IMPRESSORAS_FISCAIS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_LJ_DOCUMENTO_ECF
 on LJ_DOCUMENTO_ECF
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_DOCUMENTO_ECF'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}ID_DOCUMENTO_ECF=''+Convert(Varchar(500),  inserted.ID_DOCUMENTO_ECF), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_DOCUMENTO_ECF''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LJ_DOCUMENTO_ECF
 on LJ_DOCUMENTO_ECF
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_DOCUMENTO_ECF'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}ID_DOCUMENTO_ECF=''+Convert(Varchar(500),  inserted.ID_DOCUMENTO_ECF), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_DOCUMENTO_ECF''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_LOJA_ENTRADAS
 on LOJA_ENTRADAS
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_ENTRADAS'', ''FILIAL=''+Convert(Varchar(500),  inserted.FILIAL) +''{#}ROMANEIO_PRODUTO=''+Convert(Varchar(500),  inserted.ROMANEIO_PRODUTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_ENTRADAS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
    and Inserted.ENTRADA_ENCERRADA = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOJA_ENTRADAS
 on LOJA_ENTRADAS
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_ENTRADAS'', ''FILIAL=''+Convert(Varchar(500),  inserted.FILIAL) +''{#}ROMANEIO_PRODUTO=''+Convert(Varchar(500),  inserted.ROMANEIO_PRODUTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_ENTRADAS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
    and Inserted.ENTRADA_ENCERRADA = 1
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_LOJA_VENDA_PGTO
 on LOJA_VENDA_PGTO
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_VENDA_PGTO'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}LANCAMENTO_CAIXA=''+Convert(Varchar(500),  inserted.LANCAMENTO_CAIXA) +''{#}TERMINAL=''+Convert(Varchar(500),  inserted.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_VENDA_PGTO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1  And inserted.VENDA_FINALIZADA = 1

   -- Insert do SAT somente quando a venda for finalizada
   IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''LOJA_CF_SAT'')
   BEGIN
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''LOJA_CF_SAT'', 
    ''ID_LOJA_CF_SAT=''+Convert(Varchar(500),  LOJA_CF_SAT.ID_LOJA_CF_SAT) +
    ''{#}CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_CF_SAT.CODIGO_FILIAL)   
    , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
    FROM LOJA_CF_SAT
    inner join inserted on inserted.CODIGO_FILIAL = LOJA_CF_SAT.CODIGO_FILIAL    
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CF_SAT'' AND LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
    Where LOJA_CF_SAT.CODIGO_FILIAL = inserted.CODIGO_FILIAL AND LOJA_CF_SAT.LANCAMENTO_CAIXA = inserted.LANCAMENTO_CAIXA AND  LOJA_CF_SAT.TERMINAL =  inserted.TERMINAL  And inserted.VENDA_FINALIZADA = 1
   END
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOJA_VENDA_PGTO
 on LOJA_VENDA_PGTO
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_VENDA_PGTO'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}LANCAMENTO_CAIXA=''+Convert(Varchar(500),  inserted.LANCAMENTO_CAIXA) +''{#}TERMINAL=''+Convert(Varchar(500),  inserted.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_VENDA_PGTO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And inserted.VENDA_FINALIZADA = 1

   -- Insert do SAT somente quando a venda for finalizada
   IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''LOJA_CF_SAT'')
   BEGIN
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''LOJA_CF_SAT'', 
    ''ID_LOJA_CF_SAT=''+Convert(Varchar(500),  LOJA_CF_SAT.ID_LOJA_CF_SAT) +
    ''{#}CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_CF_SAT.CODIGO_FILIAL)   
    , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
    FROM LOJA_CF_SAT
    inner join inserted on inserted.CODIGO_FILIAL = LOJA_CF_SAT.CODIGO_FILIAL    
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CF_SAT'' AND LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
    Where LOJA_CF_SAT.CODIGO_FILIAL = inserted.CODIGO_FILIAL AND LOJA_CF_SAT.LANCAMENTO_CAIXA = inserted.LANCAMENTO_CAIXA AND  LOJA_CF_SAT.TERMINAL =  inserted.TERMINAL  And inserted.VENDA_FINALIZADA = 1
   END
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_LOJA_SAIDAS
 on LOJA_SAIDAS
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin

   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_SAIDAS'', ''FILIAL=''+Convert(Varchar(500),  inserted.FILIAL) +''{#}ROMANEIO_PRODUTO=''+Convert(Varchar(500),  inserted.ROMANEIO_PRODUTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_SAIDAS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 and Inserted.SAIDA_ENCERRADA = 1
    
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOJA_SAIDAS
 on LOJA_SAIDAS
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin

   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_SAIDAS'', ''FILIAL=''+Convert(Varchar(500),  inserted.FILIAL) +''{#}ROMANEIO_PRODUTO=''+Convert(Varchar(500),  inserted.ROMANEIO_PRODUTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_SAIDAS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 and Inserted.SAIDA_ENCERRADA = 1
  
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_LOJA_CONTROLE_FISCAL
 on LOJA_CONTROLE_FISCAL
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_CONTROLE_FISCAL'', 
   ''CF_INICIAL=''+Convert(Varchar(500),  inserted.CF_INICIAL) +
   ''{#}CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +
   ''{#}DATA_FISCAL='' + CONVERT(VARCHAR(2), DATEPART(day, DATA_FISCAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA_FISCAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA_FISCAL)) +
   ''{#}ECF=''+Convert(Varchar(500),  inserted.ECF) +
   ''{#}ID_EQUIPAMENTO=''+Convert(Varchar(500),  inserted.ID_EQUIPAMENTO) +
   ''{#}SERIE_NF=''+Convert(Varchar(500),  inserted.SERIE_NF) +
   ''{#}TERMINAL=''+Convert(Varchar(500),  inserted.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CONTROLE_FISCAL''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOJA_CONTROLE_FISCAL
 on LOJA_CONTROLE_FISCAL
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_CONTROLE_FISCAL'', 
     ''CF_INICIAL=''+Convert(Varchar(500),  inserted.CF_INICIAL) +
     ''{#}CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +
     ''{#}DATA_FISCAL='' + CONVERT(VARCHAR(2), DATEPART(day, DATA_FISCAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA_FISCAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA_FISCAL)) +
     ''{#}ECF=''+Convert(Varchar(500),  inserted.ECF) +
     ''{#}ID_EQUIPAMENTO=''+Convert(Varchar(500),  inserted.ID_EQUIPAMENTO) +
     ''{#}SERIE_NF=''+Convert(Varchar(500),  inserted.SERIE_NF) +
     ''{#}TERMINAL=''+Convert(Varchar(500),  inserted.TERMINAL), 
     LJ_LX_ETL_TIPO.Id_Etl_Tipo, 
     0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CONTROLE_FISCAL''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_LOJA_CAIXA_LANCAMENTOS
 on LOJA_CAIXA_LANCAMENTOS
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_CAIXA_LANCAMENTOS'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}LANCAMENTO_CAIXA=''+Convert(Varchar(500),  inserted.LANCAMENTO_CAIXA) +''{#}TERMINAL=''+Convert(Varchar(500),  inserted.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CAIXA_LANCAMENTOS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOJA_CAIXA_LANCAMENTOS
 on LOJA_CAIXA_LANCAMENTOS
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_CAIXA_LANCAMENTOS'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}LANCAMENTO_CAIXA=''+Convert(Varchar(500),  inserted.LANCAMENTO_CAIXA) +''{#}TERMINAL=''+Convert(Varchar(500),  inserted.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CAIXA_LANCAMENTOS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')
 
exec('
Create Trigger dbo.LXI_ETL_LOJA_PEDIDO
 on LOJA_PEDIDO
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_PEDIDO'', ''CODIGO_FILIAL_ORIGEM=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL_ORIGEM) +''{#}PEDIDO=''+Convert(Varchar(500),  inserted.PEDIDO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_PEDIDO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOJA_PEDIDO
 on LOJA_PEDIDO
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_PEDIDO'', ''CODIGO_FILIAL_ORIGEM=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL_ORIGEM) +''{#}PEDIDO=''+Convert(Varchar(500),  inserted.PEDIDO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_PEDIDO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_FATURAMENTO_SEQUENCIAIS
 on FATURAMENTO_SEQUENCIAIS
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''FATURAMENTO_SEQUENCIAIS'', ''FILIAL=''+Convert(Varchar(500),  inserted.FILIAL) +''{#}SERIE_NF=''+Convert(Varchar(500),  inserted.SERIE_NF), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''FATURAMENTO_SEQUENCIAIS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_FATURAMENTO_SEQUENCIAIS
 on FATURAMENTO_SEQUENCIAIS
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''FATURAMENTO_SEQUENCIAIS'', ''FILIAL=''+Convert(Varchar(500),  inserted.FILIAL) +''{#}SERIE_NF=''+Convert(Varchar(500),  inserted.SERIE_NF), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''FATURAMENTO_SEQUENCIAIS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_INVENTARIO
 on INVENTARIO
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''INVENTARIO'', ''CODIGO_INVENTARIO=''+Convert(Varchar(500),  inserted.CODIGO_INVENTARIO) +''{#}FILIAL=''+Convert(Varchar(500),  inserted.FILIAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''INVENTARIO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_INVENTARIO
 on INVENTARIO
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''INVENTARIO'', ''CODIGO_INVENTARIO=''+Convert(Varchar(500),  inserted.CODIGO_INVENTARIO) +''{#}FILIAL=''+Convert(Varchar(500),  inserted.FILIAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''INVENTARIO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')


exec('
Create Trigger dbo.LXI_ETL_LOJA_RESERVA
 on LOJA_RESERVA
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_RESERVA'', ''FILIAL=''+Convert(Varchar(500),  inserted.FILIAL) +''{#}NUMERO_RESERVA=''+Convert(Varchar(500),  inserted.NUMERO_RESERVA), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_RESERVA''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec(' 
Create Trigger dbo.LXU_ETL_LOJA_RESERVA
 on LOJA_RESERVA
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_RESERVA'', ''FILIAL=''+Convert(Varchar(500),  inserted.FILIAL) +''{#}NUMERO_RESERVA=''+Convert(Varchar(500),  inserted.NUMERO_RESERVA), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_RESERVA''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')
 
--Parametros
Exec('
 Create Trigger dbo.LXI_ETL_PARAMETROS
  on PARAMETROS
 For Insert Not For Replication
 as
 Begin
 
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''PARAMETROS'', ''PARAMETRO=''+Convert(Varchar(500), inserted.PARAMETRO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
    FROM Inserted
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PARAMETROS''
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
   End
 
 End
')

Exec('
 Create Trigger dbo.LXU_ETL_PARAMETROS
  on PARAMETROS
 For Update Not For Replication
 as
 Begin
 
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''PARAMETROS'', ''PARAMETRO=''+Convert(Varchar(500), inserted.PARAMETRO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
    FROM Inserted
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PARAMETROS''
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
   End
 
 End
')


--Parametros Loja
Exec('
 Create Trigger dbo.LXI_ETL_PARAMETROS_LOJA
  on PARAMETROS_LOJA
 For Insert Not For Replication
 as
 Begin
 
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''PARAMETROS_LOJA'', ''CODIGO_FILIAL=''+Convert(Varchar(500), inserted.CODIGO_FILIAL) +''{#}PARAMETRO=''+Convert(Varchar(500), inserted.PARAMETRO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
    FROM Inserted
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PARAMETROS_LOJA''
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1) and LJ_LX_ETL_TIPO.ID_ETL_TIPO != 14
   End
 
 End
')


Exec('
 Create Trigger dbo.LXU_ETL_PARAMETROS_LOJA
  on PARAMETROS_LOJA
 For Update Not For Replication
 as
 Begin
 
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''PARAMETROS_LOJA'', ''CODIGO_FILIAL=''+Convert(Varchar(500), inserted.CODIGO_FILIAL) +''{#}PARAMETRO=''+Convert(Varchar(500), inserted.PARAMETRO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
    FROM Inserted
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PARAMETROS_LOJA''
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1) and LJ_LX_ETL_TIPO.ID_ETL_TIPO != 14
   End
 
 End
')

 
--Parametros Loja Terminal
Exec('
 Create Trigger dbo.LXI_ETL_PARAMETROS_LOJA_TERMINAL
  on PARAMETROS_LOJA_TERMINAL
 For Insert Not For Replication
 as
 Begin
 
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
    
    /*
     PARAMETROS_LOJA
    */
    IF EXISTS (SELECT 1 FROM PARAMETROS_LOJA  INNER JOIN Inserted ON PARAMETROS_LOJA.PARAMETRO = Inserted.PARAMETRO AND PARAMETROS_LOJA.CODIGO_FILIAL = Inserted.CODIGO_FILIAL)
     BEGIN
      INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
      SELECT Distinct ''PARAMETROS_LOJA'', ''CODIGO_FILIAL=''+Convert(Varchar(500), PARAMETROS_LOJA.CODIGO_FILIAL) +''{#}PARAMETRO=''+Convert(Varchar(500), PARAMETROS_LOJA.PARAMETRO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
      FROM PARAMETROS_LOJA
      Inner Join Inserted
      On PARAMETROS_LOJA.PARAMETRO = Inserted.PARAMETRO
       And PARAMETROS_LOJA.CODIGO_FILIAL = Inserted.CODIGO_FILIAL
      Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PARAMETROS_LOJA''
      Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1) and LJ_LX_ETL_TIPO.ID_ETL_TIPO != 14
     END
    
    /*
     PARAMETROS_LOJA_TERMINAL
    */
    BEGIN
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''PARAMETROS_LOJA_TERMINAL'', ''CODIGO_FILIAL=''+Convert(Varchar(500), PARAMETROS_LOJA_TERMINAL.CODIGO_FILIAL) +''{#}TERMINAL=''+Convert(Varchar(500), PARAMETROS_LOJA_TERMINAL.TERMINAL) +''{#}PARAMETRO=''+Convert(Varchar(500), PARAMETROS_LOJA_TERMINAL.PARAMETRO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM PARAMETROS_LOJA_TERMINAL
     Inner Join Inserted
     On PARAMETROS_LOJA_TERMINAL.PARAMETRO = Inserted.PARAMETRO
      And PARAMETROS_LOJA_TERMINAL.CODIGO_FILIAL = Inserted.CODIGO_FILIAL
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PARAMETROS_LOJA_TERMINAL''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    END

   End
 
 End
')

Exec('
 Create Trigger dbo.LXU_ETL_PARAMETROS_LOJA_TERMINAL
  on PARAMETROS_LOJA_TERMINAL
 For Update Not For Replication
 as
 Begin
 
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin

    /*
     PARAMETROS_LOJA
    */
    IF EXISTS (SELECT 1 FROM PARAMETROS_LOJA INNER JOIN Inserted ON PARAMETROS_LOJA.PARAMETRO = Inserted.PARAMETRO AND PARAMETROS_LOJA.CODIGO_FILIAL = Inserted.CODIGO_FILIAL)
     BEGIN
      INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
      SELECT Distinct ''PARAMETROS_LOJA'', ''CODIGO_FILIAL=''+Convert(Varchar(500), PARAMETROS_LOJA.CODIGO_FILIAL) +''{#}PARAMETRO=''+Convert(Varchar(500), PARAMETROS_LOJA.PARAMETRO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
      FROM PARAMETROS_LOJA
      Inner Join Inserted
      On PARAMETROS_LOJA.PARAMETRO = Inserted.PARAMETRO
       And PARAMETROS_LOJA.CODIGO_FILIAL = Inserted.CODIGO_FILIAL
      Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PARAMETROS_LOJA''
      Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1) and LJ_LX_ETL_TIPO.ID_ETL_TIPO != 14
     END

    /*
     PARAMETROS_LOJA_TERMINAL
    */
    BEGIN
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''PARAMETROS_LOJA_TERMINAL'', ''CODIGO_FILIAL=''+Convert(Varchar(500), PARAMETROS_LOJA_TERMINAL.CODIGO_FILIAL) +''{#}TERMINAL=''+Convert(Varchar(500), PARAMETROS_LOJA_TERMINAL.TERMINAL) +''{#}PARAMETRO=''+Convert(Varchar(500), PARAMETROS_LOJA_TERMINAL.PARAMETRO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM PARAMETROS_LOJA_TERMINAL
     Inner Join Inserted
     On PARAMETROS_LOJA_TERMINAL.PARAMETRO = Inserted.PARAMETRO
      And PARAMETROS_LOJA_TERMINAL.CODIGO_FILIAL = Inserted.CODIGO_FILIAL
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PARAMETROS_LOJA_TERMINAL''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    END

   End
 
 End
')


exec('
Create Trigger dbo.LXI_ETL_LOJA_CONSERTO
 on LOJA_CONSERTO
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_CONSERTO'', ''PROTOCOLO=''+Convert(Varchar(500), inserted.PROTOCOLO) + ''{#}CODIGO_FILIAL=''+Convert(Varchar(500), inserted.CODIGO_FILIAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0  FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CONSERTO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOJA_CONSERTO
 on LOJA_CONSERTO
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_CONSERTO'', ''PROTOCOLO=''+Convert(Varchar(500), inserted.PROTOCOLO) + ''{#}CODIGO_FILIAL=''+Convert(Varchar(500), inserted.CODIGO_FILIAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0  FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CONSERTO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_LOG
 on LJ_ETL_LOG
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ETL_LOG'', ''ID_ETL_LOG=''+Convert(Varchar(500), inserted.ID_ETL_LOG), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0  FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ETL_LOG''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOG
 on LJ_ETL_LOG
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ETL_LOG'', ''ID_ETL_LOG=''+Convert(Varchar(500), inserted.ID_ETL_LOG), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0  FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ETL_LOG''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXI_ETL_LOG_STATUS
 on LJ_ETL_LOG_STATUS
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ETL_LOG_STATUS'', ''ID_ETL_LOG_STATUS=''+Convert(Varchar(500), inserted.ID_ETL_LOG_STATUS), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0  FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ETL_LOG_STATUS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

exec('
Create Trigger dbo.LXU_ETL_LOG_STATUS
 on LJ_ETL_LOG_STATUS
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ETL_LOG_STATUS'', ''ID_ETL_LOG_STATUS=''+Convert(Varchar(500), inserted.ID_ETL_LOG_STATUS), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0  FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ETL_LOG_STATUS''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_LOJA_NOTA_FISCAL
 on LOJA_NOTA_FISCAL
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_NOTA_FISCAL'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}NF_NUMERO=''+Convert(Varchar(500),  inserted.NF_NUMERO) +''{#}SERIE_NF=''+Convert(Varchar(500),  inserted.SERIE_NF), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_NOTA_FISCAL''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LOJA_NOTA_FISCAL
 on LOJA_NOTA_FISCAL
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_NOTA_FISCAL'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}NF_NUMERO=''+Convert(Varchar(500),  inserted.NF_NUMERO) +''{#}SERIE_NF=''+Convert(Varchar(500),  inserted.SERIE_NF), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_NOTA_FISCAL''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_CLIENTES_VAREJO
 on CLIENTES_VAREJO
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''CLIENTES_VAREJO'', ''CODIGO_CLIENTE=''+Convert(Varchar(500),  inserted.CODIGO_CLIENTE), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''CLIENTES_VAREJO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_CLIENTES_VAREJO
 on CLIENTES_VAREJO
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''CLIENTES_VAREJO'', ''CODIGO_CLIENTE=''+Convert(Varchar(500),  inserted.CODIGO_CLIENTE), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''CLIENTES_VAREJO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_PROP_CLIENTES_VAREJO
 on PROP_CLIENTES_VAREJO
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''CLIENTES_VAREJO'', ''CODIGO_CLIENTE=''+Convert(Varchar(500),  inserted.CODIGO_CLIENTE), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''CLIENTES_VAREJO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_PROP_CLIENTES_VAREJO
 on PROP_CLIENTES_VAREJO
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''CLIENTES_VAREJO'', ''CODIGO_CLIENTE=''+Convert(Varchar(500),  inserted.CODIGO_CLIENTE), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''CLIENTES_VAREJO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_LOJA_HISTORICO_VENDA
 on LOJA_HISTORICO_VENDA
For Insert Not For Replication
as
Begin
 
  /*SET LANGUAGE us_english; */

  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_HISTORICO_VENDA'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}DATA_VENDA=''+ LTRIM(RTRIM(Convert(varchar(30),inserted.[DATA_VENDA],126)))  +''{#}TICKET=''+Convert(Varchar(500),  inserted.TICKET), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_HISTORICO_VENDA''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
  End
 
End
')


EXEC('
Create Trigger dbo.LXU_ETL_LOJA_HISTORICO_VENDA
 on LOJA_HISTORICO_VENDA
For Update Not For Replication
as
Begin
 
   /*SET LANGUAGE us_english; */

  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_HISTORICO_VENDA'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''{#}DATA_VENDA=''+ LTRIM(RTRIM(Convert(varchar(30),inserted.[DATA_VENDA],126)))  +''{#}TICKET=''+Convert(Varchar(500),  inserted.TICKET), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_HISTORICO_VENDA''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_LOJA_VENDA_VENDEDORES
 on LOJA_VENDA_VENDEDORES
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_VENDA_PGTO'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.CODIGO_FILIAL) +''{#}LANCAMENTO_CAIXA=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.LANCAMENTO_CAIXA) +''{#}TERMINAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM LOJA_VENDA_PGTO 
   INNER JOIN LOJA_VENDA 
    ON LOJA_VENDA_PGTO.CODIGO_FILIAL = LOJA_VENDA.CODIGO_FILIAL_PGTO
    AND LOJA_VENDA_PGTO.LANCAMENTO_CAIXA = LOJA_VENDA.LANCAMENTO_CAIXA
    AND LOJA_VENDA_PGTO.TERMINAL = LOJA_VENDA.TERMINAL_PGTO
   INNER JOIN Inserted
    ON LOJA_VENDA.CODIGO_FILIAL = Inserted.CODIGO_FILIAL
    AND LOJA_VENDA.TICKET = Inserted.TICKET
    AND LOJA_VENDA.DATA_VENDA = Inserted.DATA_VENDA
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_VENDA_PGTO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And LOJA_VENDA_PGTO.VENDA_FINALIZADA = 1

  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LOJA_VENDA_VENDEDORES
 on LOJA_VENDA_VENDEDORES
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_VENDA_PGTO'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.CODIGO_FILIAL) +''{#}LANCAMENTO_CAIXA=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.LANCAMENTO_CAIXA) +''{#}TERMINAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM LOJA_VENDA_PGTO 
   INNER JOIN LOJA_VENDA 
    ON LOJA_VENDA_PGTO.CODIGO_FILIAL = LOJA_VENDA.CODIGO_FILIAL_PGTO
    AND LOJA_VENDA_PGTO.LANCAMENTO_CAIXA = LOJA_VENDA.LANCAMENTO_CAIXA
    AND LOJA_VENDA_PGTO.TERMINAL = LOJA_VENDA.TERMINAL_PGTO
   INNER JOIN Inserted
    ON LOJA_VENDA.CODIGO_FILIAL = Inserted.CODIGO_FILIAL
    AND LOJA_VENDA.TICKET = Inserted.TICKET
    AND LOJA_VENDA.DATA_VENDA = Inserted.DATA_VENDA
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_VENDA_PGTO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And LOJA_VENDA_PGTO.VENDA_FINALIZADA = 1

  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_LOJA_VENDA
 on LOJA_VENDA
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_VENDA_PGTO'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.CODIGO_FILIAL) +''{#}LANCAMENTO_CAIXA=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.LANCAMENTO_CAIXA) +''{#}TERMINAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM LOJA_VENDA_PGTO 
   INNER JOIN Inserted 
    ON LOJA_VENDA_PGTO.CODIGO_FILIAL = Inserted.CODIGO_FILIAL_PGTO
    AND LOJA_VENDA_PGTO.LANCAMENTO_CAIXA = Inserted.LANCAMENTO_CAIXA
    AND LOJA_VENDA_PGTO.TERMINAL = Inserted.TERMINAL_PGTO   
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_VENDA_PGTO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And LOJA_VENDA_PGTO.VENDA_FINALIZADA = 1

  End
 
End
')

EXEC(' 
Create Trigger dbo.LXU_ETL_LOJA_VENDA
 on LOJA_VENDA
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_VENDA_PGTO'', ''CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.CODIGO_FILIAL) +''{#}LANCAMENTO_CAIXA=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.LANCAMENTO_CAIXA) +''{#}TERMINAL=''+Convert(Varchar(500),  LOJA_VENDA_PGTO.TERMINAL), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM LOJA_VENDA_PGTO 
   INNER JOIN Inserted 
    ON LOJA_VENDA_PGTO.CODIGO_FILIAL = Inserted.CODIGO_FILIAL_PGTO
    AND LOJA_VENDA_PGTO.LANCAMENTO_CAIXA = Inserted.LANCAMENTO_CAIXA
    AND LOJA_VENDA_PGTO.TERMINAL = Inserted.TERMINAL_PGTO
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_VENDA_PGTO''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And LOJA_VENDA_PGTO.VENDA_FINALIZADA = 1

  End
 
End
')

If Exists(Select Top 1 1 From Information_Schema.Tables where Table_Name = 'LOJA_TRANSITO')
Begin

 Exec('
 Create Trigger dbo.LXI_ETL_LOJA_TRANSITO
  on LOJA_TRANSITO
 For Insert Not For Replication
 as
 Begin
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   BEGIN
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''LOJA_TRANSITO'', ''FILIAL=''+Convert(Varchar(500), inserted.FILIAL) +''{#}ROMANEIO_PRODUTO=''+Convert(Varchar(500), inserted.ROMANEIO_PRODUTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
    FROM Inserted
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_TRANSITO_HISTORICO''
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
   END
 
 End
 ')
 
 Exec('
 Create Trigger dbo.LXU_ETL_LOJA_TRANSITO
  on LOJA_TRANSITO
 For Update Not For Replication
 as
 Begin
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   BEGIN
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''LOJA_TRANSITO'', ''FILIAL=''+Convert(Varchar(500), inserted.FILIAL) +''{#}ROMANEIO_PRODUTO=''+Convert(Varchar(500), inserted.ROMANEIO_PRODUTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
    FROM Inserted
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_TRANSITO_HISTORICO''
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
   END
 
 End
 ')
 
End


If Exists(Select Top 1 1 From Information_Schema.Tables where Table_Name = 'CLIENTES_VAREJO_LOG')
Begin

 Exec('
  Create Trigger dbo.LXI_ETL_CLIENTES_VAREJO_LOG
   on CLIENTES_VAREJO_LOG
  For Insert Not For Replication
  as
  Begin
 
    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''CLIENTES_VAREJO_LOG'', ''CODIGO_CLIENTE=''+Convert(Varchar(500), inserted.CODIGO_CLIENTE) +''{#}DATA_ALTERACAO=''+Convert(Varchar(500), inserted.DATA_ALTERACAO, 121), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''CLIENTES_VAREJO_LOG''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End
 
  End
 ')

 Exec('
  Create Trigger dbo.LXU_ETL_CLIENTES_VAREJO_LOG
   on CLIENTES_VAREJO_LOG
  For Update Not For Replication
  as
  Begin
 
    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''CLIENTES_VAREJO_LOG'', ''CODIGO_CLIENTE=''+Convert(Varchar(500), inserted.CODIGO_CLIENTE) +''{#}DATA_ALTERACAO=''+Convert(Varchar(500), inserted.DATA_ALTERACAO, 121), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''CLIENTES_VAREJO_LOG''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End
 
  End
  ')

End


--Trigger para Controle dos registros de MFD.
If Exists(Select Top 1 1 From Information_Schema.Tables where Table_Name = 'LX_IMP_MFD_E01')
Begin
 
 Exec('
  Create Trigger dbo.LXI_ETL_LX_IMP_MFD_E01
   on LX_IMP_MFD_E01
  For Insert Not For Replication
  as
  Begin
 
    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''LX_IMP_MFD_E01'', 
     ''TIPO_REGISTRO=''+Convert(Varchar(500), inserted.TIPO_REGISTRO) +
     ''{#}SERIE_ECF=''+Convert(Varchar(500), inserted.SERIE_ECF) +
     ''{#}MF_ADICIONAL=''+Convert(Varchar(500), inserted.MF_ADICIONAL) +     
     ''{#}DATA_INICIAL='' + CONVERT(VARCHAR(2), DATEPART(day, inserted.DATA_INICIAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, inserted.DATA_INICIAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, inserted.DATA_INICIAL)) +
     ''{#}DATA_FINAL='' + CONVERT(VARCHAR(2), DATEPART(day, inserted.DATA_FINAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, inserted.DATA_FINAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, inserted.DATA_FINAL)), 
     LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LX_IMP_MFD_E01''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End
 
  End
 ')
 
 Exec('
  Create Trigger dbo.LXU_ETL_LX_IMP_MFD_E01
   on LX_IMP_MFD_E01
  For Update Not For Replication
  as
  Begin
 
    

    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''LX_IMP_MFD_E01'', 
     ''TIPO_REGISTRO=''+Convert(Varchar(500), inserted.TIPO_REGISTRO) +
     ''{#}SERIE_ECF=''+Convert(Varchar(500), inserted.SERIE_ECF) +
     ''{#}MF_ADICIONAL=''+Convert(Varchar(500), inserted.MF_ADICIONAL) +
     ''{#}DATA_INICIAL='' + CONVERT(VARCHAR(2), DATEPART(day, inserted.DATA_INICIAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, inserted.DATA_INICIAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, inserted.DATA_INICIAL)) +
     ''{#}DATA_FINAL='' + CONVERT(VARCHAR(2), DATEPART(day, inserted.DATA_FINAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, inserted.DATA_FINAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, inserted.DATA_FINAL)), 
     LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LX_IMP_MFD_E01''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End
 
  End
 ')

End


If Exists(Select Top 1 1 From Information_Schema.Tables where Table_Name = 'LX_IMP_MFD_E14')
Begin
 
 Exec('
  Create Trigger dbo.LXI_ETL_LX_IMP_MFD_E14
   on LX_IMP_MFD_E14
  For Insert Not For Replication
  as
  Begin
 
    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''LX_IMP_MFD_E14'', 
     ''TIPO_REGISTRO=''+Convert(Varchar(500), inserted.TIPO_REGISTRO) +
     ''{#}SERIE_ECF=''+Convert(Varchar(500), inserted.SERIE_ECF) +
     ''{#}MF_ADICIONAL=''+Convert(Varchar(500), inserted.MF_ADICIONAL) +
     ''{#}USUARIO_ECF=''+Convert(Varchar(500), inserted.USUARIO_ECF) +
     ''{#}COO=''+Convert(Varchar(500), inserted.COO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LX_IMP_MFD_E14''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End
 
  End
 ')
 
 Exec('
  Create Trigger dbo.LXU_ETL_LX_IMP_MFD_E14
   on LX_IMP_MFD_E14
  For Update Not For Replication
  as
  Begin
 
    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''LX_IMP_MFD_E14'', 
     ''TIPO_REGISTRO=''+Convert(Varchar(500), inserted.TIPO_REGISTRO) +
     ''{#}SERIE_ECF=''+Convert(Varchar(500), inserted.SERIE_ECF) +
     ''{#}MF_ADICIONAL=''+Convert(Varchar(500), inserted.MF_ADICIONAL) +
     ''{#}USUARIO_ECF=''+Convert(Varchar(500), inserted.USUARIO_ECF) +
     ''{#}COO=''+Convert(Varchar(500), inserted.COO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LX_IMP_MFD_E14''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End
 
  End
 ')

End

If Exists(Select Top 1 1 From Information_Schema.Tables where Table_Name = 'LX_IMP_MFD_E15')
Begin

 Exec(' 
  Create Trigger dbo.LXI_ETL_LX_IMP_MFD_E15
   on LX_IMP_MFD_E15
  For Insert Not For Replication
  as
  Begin
 
    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''LX_IMP_MFD_E15'', 
     ''TIPO_REGISTRO=''+Convert(Varchar(500), inserted.TIPO_REGISTRO) +
     ''{#}SERIE_ECF=''+Convert(Varchar(500), inserted.SERIE_ECF) +
     ''{#}MF_ADICIONAL=''+Convert(Varchar(500), inserted.MF_ADICIONAL) +
     ''{#}USUARIO_ECF=''+Convert(Varchar(500), inserted.USUARIO_ECF) +
     ''{#}COO=''+Convert(Varchar(500), inserted.COO) +
     ''{#}ITEM=''+Convert(Varchar(500), inserted.ITEM), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LX_IMP_MFD_E15''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End
 
  End
 ')
 
 Exec('
  Create Trigger dbo.LXU_ETL_LX_IMP_MFD_E15
   on LX_IMP_MFD_E15
  For Update Not For Replication
  as
  Begin
 
    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''LX_IMP_MFD_E15'', 
     ''TIPO_REGISTRO=''+Convert(Varchar(500), inserted.TIPO_REGISTRO) +
     ''{#}SERIE_ECF=''+Convert(Varchar(500), inserted.SERIE_ECF) +
     ''{#}MF_ADICIONAL=''+Convert(Varchar(500), inserted.MF_ADICIONAL) +
     ''{#}USUARIO_ECF=''+Convert(Varchar(500), inserted.USUARIO_ECF) +
     ''{#}COO=''+Convert(Varchar(500), inserted.COO) +
     ''{#}ITEM=''+Convert(Varchar(500), inserted.ITEM), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LX_IMP_MFD_E15''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End
 
  End
 ')

End


If Exists(Select Top 1 1 From Information_Schema.Tables where Table_Name = 'LX_IMP_MFD_E21')
Begin

 Exec('
  Create Trigger dbo.LXI_ETL_LX_IMP_MFD_E21
   on LX_IMP_MFD_E21
  For Insert Not For Replication
  as
  Begin
 
    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''LX_IMP_MFD_E21'', 
     ''TIPO_REGISTRO=''+Convert(Varchar(500), inserted.TIPO_REGISTRO) +
     ''{#}SERIE_ECF=''+Convert(Varchar(500), inserted.SERIE_ECF) +
     ''{#}MF_ADICIONAL=''+Convert(Varchar(500), inserted.MF_ADICIONAL) +
     ''{#}USUARIO_ECF=''+Convert(Varchar(500), inserted.USUARIO_ECF) +
     ''{#}COO=''+Convert(Varchar(500), inserted.COO) +
     ''{#}CCF=''+Convert(Varchar(500), inserted.CCF) +
     ''{#}PAGAMENTO=''+Convert(Varchar(500), inserted.PAGAMENTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LX_IMP_MFD_E21''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End
 
  End
 ')
 
 Exec('
  Create Trigger dbo.LXU_ETL_LX_IMP_MFD_E21
   on LX_IMP_MFD_E21
  For Update Not For Replication
  as
  Begin
 
    IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
    Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
     SELECT Distinct ''LX_IMP_MFD_E21'', 
     ''TIPO_REGISTRO=''+Convert(Varchar(500), inserted.TIPO_REGISTRO) +
     ''{#}SERIE_ECF=''+Convert(Varchar(500), inserted.SERIE_ECF) +
     ''{#}MF_ADICIONAL=''+Convert(Varchar(500), inserted.MF_ADICIONAL) +
     ''{#}USUARIO_ECF=''+Convert(Varchar(500), inserted.USUARIO_ECF) +
     ''{#}COO=''+Convert(Varchar(500), inserted.COO) +
     ''{#}CCF=''+Convert(Varchar(500), inserted.CCF) +
     ''{#}PAGAMENTO=''+Convert(Varchar(500), inserted.PAGAMENTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
     FROM Inserted
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LX_IMP_MFD_E21''
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem in (1)
    End

  End
 ')

End


EXEC('
Create Trigger dbo.LXI_ETL_LJ_ECF_AC1704_E01
 on LJ_ECF_AC1704_E01
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E01'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}DATA_INICIAL='' + CONVERT(VARCHAR(2), DATEPART(day, DATA_INICIAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA_INICIAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA_INICIAL)) +
   ''{#}DATA_FINAL='' + CONVERT(VARCHAR(2), DATEPART(day, DATA_FINAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA_FINAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA_FINAL))
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E01''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LJ_ECF_AC1704_E01
 on LJ_ECF_AC1704_E01
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E01'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}DATA_INICIAL='' + CONVERT(VARCHAR(2), DATEPART(day, DATA_INICIAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA_INICIAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA_INICIAL)) +
   ''{#}DATA_FINAL='' + CONVERT(VARCHAR(2), DATEPART(day, DATA_FINAL)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA_FINAL)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA_FINAL))
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E01''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
End
')

EXEC('
Create Trigger dbo.LXI_ETL_LJ_ECF_AC1704_E12
 on LJ_ECF_AC1704_E12
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E12'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +
   ''{#}CRZ=''+Convert(Varchar(500),  inserted.CRZ) 
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E12''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LJ_ECF_AC1704_E12
 on LJ_ECF_AC1704_E12
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E12'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +
   ''{#}CRZ=''+Convert(Varchar(500),  inserted.CRZ) 
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E12''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_LJ_ECF_AC1704_E13
 on LJ_ECF_AC1704_E13
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E13'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +   
   ''{#}TOTALIZADOR_PARCIAL=''+Convert(Varchar(500),  inserted.TOTALIZADOR_PARCIAL) +
   ''{#}CRZ=''+Convert(Varchar(500),  inserted.CRZ)
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E13''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LJ_ECF_AC1704_E13
 on LJ_ECF_AC1704_E13
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E13'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +   
   ''{#}TOTALIZADOR_PARCIAL=''+Convert(Varchar(500),  inserted.TOTALIZADOR_PARCIAL) +
   ''{#}CRZ=''+Convert(Varchar(500),  inserted.CRZ)
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E13''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')


EXEC('
Create Trigger dbo.LXI_ETL_LJ_ECF_AC1704_E14
 on LJ_ECF_AC1704_E14
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E14'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +   
   ''{#}COO=''+Convert(Varchar(500),  inserted.COO)     
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E14''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LJ_ECF_AC1704_E14
 on LJ_ECF_AC1704_E14
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E14'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +   
   ''{#}COO=''+Convert(Varchar(500),  inserted.COO)  
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E14''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')
 
EXEC('
Create Trigger dbo.LXI_ETL_LJ_ECF_AC1704_E15
 on LJ_ECF_AC1704_E15
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E15'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +   
   ''{#}COO=''+Convert(Varchar(500),  inserted.COO) +
   ''{#}ITEM=''+Convert(Varchar(500),  inserted.ITEM)   
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E15''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LJ_ECF_AC1704_E15
 on LJ_ECF_AC1704_E15
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E15'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +   
   ''{#}COO=''+Convert(Varchar(500),  inserted.COO) +
   ''{#}ITEM=''+Convert(Varchar(500),  inserted.ITEM)  
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E15''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC(' 
Create Trigger dbo.LXI_ETL_LJ_ECF_AC1704_E21
 on LJ_ECF_AC1704_E21
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E21'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +   
   ''{#}COO=''+Convert(Varchar(500),  inserted.COO) +
   ''{#}PARCELA=''+Convert(Varchar(500),  inserted.PARCELA)   
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E21''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LJ_ECF_AC1704_E21
 on LJ_ECF_AC1704_E21
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ECF_AC1704_E21'', 
   ''SERIE_ECF=''+Convert(Varchar(500),  inserted.SERIE_ECF) +
   ''{#}MF_ADICIONAL=''+Convert(Varchar(500),  inserted.MF_ADICIONAL) +
   ''{#}USUARIO_ECF=''+Convert(Varchar(500),  inserted.USUARIO_ECF) +   
   ''{#}COO=''+Convert(Varchar(500),  inserted.COO) +
   ''{#}PARCELA=''+Convert(Varchar(500),  inserted.PARCELA) 
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ECF_AC1704_E21''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_LOJA_EVENTOS_LOG
 on LOJA_EVENTOS_LOG
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_EVENTOS_LOG'', 
   ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +
   ''{#}TERMINAL=''+Convert(Varchar(500),  inserted.TERMINAL) +
   ''{#}DATA_EVENTO='' + CONVERT(VARCHAR(2), DATEPART(day, DATA_EVENTO)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA_EVENTO)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA_EVENTO)) +  
   ''{#}ID_EVENTO=''+Convert(Varchar(500),  inserted.ID_EVENTO)     
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_EVENTOS_LOG''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LOJA_EVENTOS_LOG
 on LOJA_EVENTOS_LOG
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_EVENTOS_LOG'', 
   ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +
   ''{#}TERMINAL=''+Convert(Varchar(500),  inserted.TERMINAL) +
   ''{#}DATA_EVENTO='' + CONVERT(VARCHAR(2), DATEPART(day, DATA_EVENTO)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA_EVENTO)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA_EVENTO)) +  
   ''{#}ID_EVENTO=''+Convert(Varchar(500),  inserted.ID_EVENTO) 
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_EVENTOS_LOG''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_DADOS_CADASTRO_XML_NFE
 on DADOS_CADASTRO_XML_NFE
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''DADOS_CADASTRO_XML_NFE'', 
   ''CHAVE_NFE=''+Convert(Varchar(500),  inserted.CHAVE_NFE)    
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''DADOS_CADASTRO_XML_NFE''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_DADOS_CADASTRO_XML_NFE
 on DADOS_CADASTRO_XML_NFE
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''DADOS_CADASTRO_XML_NFE'', 
   ''CHAVE_NFE=''+Convert(Varchar(500),  inserted.CHAVE_NFE) 
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''DADOS_CADASTRO_XML_NFE''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')
 
  
/* NAO USADO
 Create Trigger dbo.LXI_ETL_LOJA_CF_SAT
 Create Trigger dbo.LXU_ETL_LOJA_CF_SAT
*/


IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LOJA_CF_SAT_ITEM')
BEGIN
 EXEC('  
 Create Trigger dbo.LXI_ETL_LOJA_CF_SAT_ITEM
  on LOJA_CF_SAT_ITEM
 For Insert Not For Replication
 as
 Begin
 
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''LOJA_CF_SAT'', 
      ''ID_LOJA_CF_SAT=''+Convert(Varchar(500),  LOJA_CF_SAT.ID_LOJA_CF_SAT) +
      ''{#}CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_CF_SAT.CODIGO_FILIAL)     
      ,LJ_LX_ETL_TIPO.Id_Etl_Tipo, 
      0    
    FROM LOJA_CF_SAT
    inner join inserted 
     on LOJA_CF_SAT.ID_LOJA_CF_SAT = inserted.ID_LOJA_CF_SAT and LOJA_CF_SAT.CODIGO_FILIAL = inserted.CODIGO_FILIAL
    INNER JOIN LOJA_VENDA_PGTO 
     ON Inserted.CODIGO_FILIAL = LOJA_VENDA_PGTO.CODIGO_FILIAL
     AND LOJA_CF_SAT.LANCAMENTO_CAIXA = LOJA_VENDA_PGTO.LANCAMENTO_CAIXA
     AND LOJA_CF_SAT.TERMINAL = LOJA_VENDA_PGTO.TERMINAL
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CF_SAT''
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And LOJA_VENDA_PGTO.VENDA_FINALIZADA = 1
   End
 
 End
 ')
END

IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LOJA_CF_SAT_ITEM')
BEGIN
 EXEC(' 
 Create Trigger dbo.LXU_ETL_LOJA_CF_SAT_ITEM
  on LOJA_CF_SAT_ITEM
 For Update Not For Replication
 as
 Begin
 
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''LOJA_CF_SAT'', 
      ''ID_LOJA_CF_SAT=''+Convert(Varchar(500),  LOJA_CF_SAT.ID_LOJA_CF_SAT) +
      ''{#}CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_CF_SAT.CODIGO_FILIAL)     
      ,LJ_LX_ETL_TIPO.Id_Etl_Tipo, 
      0    
    FROM LOJA_CF_SAT
    inner join inserted 
     on LOJA_CF_SAT.ID_LOJA_CF_SAT = inserted.ID_LOJA_CF_SAT and LOJA_CF_SAT.CODIGO_FILIAL = inserted.CODIGO_FILIAL
    INNER JOIN LOJA_VENDA_PGTO 
     ON Inserted.CODIGO_FILIAL = LOJA_VENDA_PGTO.CODIGO_FILIAL
     AND LOJA_CF_SAT.LANCAMENTO_CAIXA = LOJA_VENDA_PGTO.LANCAMENTO_CAIXA
     AND LOJA_CF_SAT.TERMINAL = LOJA_VENDA_PGTO.TERMINAL
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CF_SAT''
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And LOJA_VENDA_PGTO.VENDA_FINALIZADA = 1
   End
 
 End')
END

IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LOJA_CF_SAT_IMPOSTO')
BEGIN
 EXEC('  
Create Trigger dbo.LXI_ETL_LOJA_CF_SAT_IMPOSTO
 on LOJA_CF_SAT_IMPOSTO
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LOJA_CF_SAT'', 
     ''ID_LOJA_CF_SAT=''+Convert(Varchar(500),  LOJA_CF_SAT.ID_LOJA_CF_SAT) +
     ''{#}CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_CF_SAT.CODIGO_FILIAL)     
     ,LJ_LX_ETL_TIPO.Id_Etl_Tipo, 
     0    
   FROM LOJA_CF_SAT
   inner join inserted 
    on LOJA_CF_SAT.ID_LOJA_CF_SAT = inserted.ID_LOJA_CF_SAT and LOJA_CF_SAT.CODIGO_FILIAL = inserted.CODIGO_FILIAL
   INNER JOIN LOJA_VENDA_PGTO 
    ON Inserted.CODIGO_FILIAL = LOJA_VENDA_PGTO.CODIGO_FILIAL
    AND LOJA_CF_SAT.LANCAMENTO_CAIXA = LOJA_VENDA_PGTO.LANCAMENTO_CAIXA
    AND LOJA_CF_SAT.TERMINAL = LOJA_VENDA_PGTO.TERMINAL
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CF_SAT''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And LOJA_VENDA_PGTO.VENDA_FINALIZADA = 1
  End
 
End')
END
 
IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LOJA_CF_SAT_IMPOSTO')
BEGIN
 EXEC('
 Create Trigger dbo.LXU_ETL_LOJA_CF_SAT_IMPOSTO
  on LOJA_CF_SAT_IMPOSTO
 For Update Not For Replication
 as
 Begin
 
   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
    SELECT Distinct ''LOJA_CF_SAT'', 
      ''ID_LOJA_CF_SAT=''+Convert(Varchar(500),  LOJA_CF_SAT.ID_LOJA_CF_SAT) +
      ''{#}CODIGO_FILIAL=''+Convert(Varchar(500),  LOJA_CF_SAT.CODIGO_FILIAL)     
      ,LJ_LX_ETL_TIPO.Id_Etl_Tipo, 
      0    
    FROM LOJA_CF_SAT
    inner join inserted 
     on LOJA_CF_SAT.ID_LOJA_CF_SAT = inserted.ID_LOJA_CF_SAT and LOJA_CF_SAT.CODIGO_FILIAL = inserted.CODIGO_FILIAL
    INNER JOIN LOJA_VENDA_PGTO 
     ON Inserted.CODIGO_FILIAL = LOJA_VENDA_PGTO.CODIGO_FILIAL
     AND LOJA_CF_SAT.LANCAMENTO_CAIXA = LOJA_VENDA_PGTO.LANCAMENTO_CAIXA
     AND LOJA_CF_SAT.TERMINAL = LOJA_VENDA_PGTO.TERMINAL
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LOJA_CF_SAT''
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And LOJA_VENDA_PGTO.VENDA_FINALIZADA = 1
   End
 
 End')
END

EXEC('
Create Trigger dbo.LXI_ETL_PROPRIEDADE
 on PROPRIEDADE
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''PROPRIEDADE'', ''PROPRIEDADE=''+Convert(Varchar(500), inserted.PROPRIEDADE), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PROPRIEDADE''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_PROPRIEDADE
 on PROPRIEDADE
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''PROPRIEDADE'', ''PROPRIEDADE=''+Convert(Varchar(500), inserted.PROPRIEDADE), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0 
   FROM Inserted
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''PROPRIEDADE''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('

Create Trigger dbo.LXI_ETL_LJ_ID_PAF_ECF
 on LJ_ID_PAF_ECF
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ID_PAF_ECF'', 
   ''VERSAO_APLICATIVO=''+Convert(Varchar(500),  inserted.VERSAO_APLICATIVO)
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted   
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ID_PAF_ECF''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LJ_ID_PAF_ECF
 on LJ_ID_PAF_ECF
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ID_PAF_ECF'', 
   ''VERSAO_APLICATIVO=''+Convert(Varchar(500),  inserted.VERSAO_APLICATIVO)
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0
   FROM Inserted   
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ID_PAF_ECF''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXI_ETL_LJ_ID_PAF_ECF_FILIAL
 on LJ_ID_PAF_ECF_FILIAL
For Insert Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ID_PAF_ECF_FILIAL'', 
   ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL)+
   ''{#}VERSAO_APLICATIVO=''+Convert(Varchar(500),  inserted.VERSAO_APLICATIVO)+   
   ''{#}DATA='' + CONVERT(VARCHAR(2), DATEPART(day, DATA)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA))
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
   FROM Inserted   
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ID_PAF_ECF_FILIAL''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')

EXEC('
Create Trigger dbo.LXU_ETL_LJ_ID_PAF_ECF_FILIAL
 on LJ_ID_PAF_ECF_FILIAL
For Update Not For Replication
as
Begin
 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  Begin
   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
   SELECT Distinct ''LJ_ID_PAF_ECF_FILIAL'', 
   ''CODIGO_FILIAL=''+Convert(Varchar(500),  inserted.CODIGO_FILIAL)+
   ''{#}VERSAO_APLICATIVO=''+Convert(Varchar(500),  inserted.VERSAO_APLICATIVO)+   
   ''{#}DATA='' + CONVERT(VARCHAR(2), DATEPART(day, DATA)) + N''/'' + CONVERT(VARCHAR(2), DATEPART(month, DATA)) + N''/'' + CONVERT(VARCHAR(4), DATEPART(year, DATA))
   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0
   FROM Inserted   
   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''LJ_ID_PAF_ECF_FILIAL''
   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
  End
 
End
')


EXEC('
 CREATE TRIGGER dbo.LXI_LJ_ETL_REPOSITORIO
 ON LJ_ETL_REPOSITORIO
   INSTEAD OF INSERT
AS
BEGIN 
  IF (SELECT CASE WHEN APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
  BEGIN
   INSERT INTO [dbo].[LJ_ETL_REPOSITORIO]
    ([TABELA]
    ,[FILTRO]
    ,[ID_ETL_TIPO]
    ,[INDICA_EXCLUSAO]          
    ,[CODIGO_FILIAL]
    ,[DATA_HORA_CRIACAO]
    ,[VERSAO])
   SELECT INSERTED.[TABELA]
     ,INSERTED.[FILTRO]
     ,INSERTED.[ID_ETL_TIPO]
     ,INSERTED.[INDICA_EXCLUSAO]          
     ,INSERTED.[CODIGO_FILIAL]
     ,INSERTED.[DATA_HORA_CRIACAO]
     ,LV.VERSAO AS [VERSAO]
    FROM INSERTED
    INNER JOIN (SELECT DISTINCT ID_ETL_TIPO, INATIVO, VERSAO FROM LJ_ETL_TIPO_COMPONENTE) C ON INSERTED.[ID_ETL_TIPO] = C.ID_ETL_TIPO AND C.INATIVO = 0
    INNER JOIN (SELECT DISTINCT VERSAO FROM LJ_ETL_VERSAO_LOJA) LV ON LV.VERSAO = C.VERSAO
    

  END
End

')

/* 007 - Triggers Repositorio Loja.sql */
print(convert(varchar(100),getdate(),121)+' Fim    - 007 - Triggers Repositorio Loja.sql')



exec('
/* 008 - Insert Versao Loja.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 008 - Insert Versao Loja.sql'')

SET NOCOUNT ON

BEGIN TRAN

BEGIN TRY

 DELETE FROM [dbo].[LJ_ETL_VERSAO_LOJA]

 INSERT INTO [dbo].[LJ_ETL_VERSAO_LOJA]
      ([VERSAO]
      ,[CODIGO_FILIAL]
      ,[FILIAL])
   VALUES
      (''3.1.1.0''
      ,''0000''
      ,''DEFAULT'')
 
 PRINT ''COMMIT'';
 COMMIT;

END TRY
BEGIN CATCH

 PRINT ''ROLLBACK'';
 ROLLBACK;

 SELECT ERROR_NUMBER() AS ErrorNumber, ERROR_MESSAGE() AS ErrorMessage

END CATCH

/* 008 - Insert Versao Loja.sql */
print(convert(varchar(100),getdate(),121)+'' Fim    - 008 - Insert Versao Loja.sql'')

')

exec('
/* 008.2-Tabelas Exclusivas.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 008.2-Tabelas Exclusivas.sql'')

if not exists(select * from sys.objects where name = ''HR_LOJA_ENTRADAS_CONVERSAO'')
exec(''
CREATE TABLE [dbo].[HR_LOJA_ENTRADAS_CONVERSAO](
      [NUMERO_NF_TRANSFERENCIA] [varchar](15) NOT NULL,
      [SERIE_NF_ENTRADA] [varchar](6) NOT NULL,
      [FILIAL] [varchar](25) NOT NULL,
      [ROMANEIO_CONVERSAO] [varchar](15) NULL,
      [DATA_CONVERSAO] [datetime] NULL,
      [RESPONSAVEL] [varchar](25) NULL,
CONSTRAINT [XPKHR_LOJA_ENTRADAS_CONVERSAO] PRIMARY KEY NONCLUSTERED 
(
      [NUMERO_NF_TRANSFERENCIA] ASC,
      [SERIE_NF_ENTRADA] ASC,
      [FILIAL] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 80) ON [PRIMARY]
) ON [PRIMARY]
'')

/* 008.2-Tabelas Exclusivas.sql */
print(convert(varchar(100),getdate(),121)+'' Fim    - 008.2-Tabelas Exclusivas.sql'')

')

exec('
/* 009 - Tipo Exclusivos.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 009 - Tipo Exclusivos.sql'')


IF NOT EXISTS( SELECT 1 FROM LJ_LX_ETL_TIPO WHERE ID_ETL_TIPO = 9101)
BEGIN
	/* Loja_processos */
	INSERT INTO LJ_LX_ETL_TIPO(
		ID_ETL_TIPO,
		DESC_ETL_TIPO,
		EXCLUI_PROCESSO_CONCLUIDO,
		INATIVO,
		ORIGEM,
		DESC_EAD,
		DESC_EAD_DESTINO
	)
	VALUES(
		''9101'',
		''LOJA_PROCESSOS'',
		1,
		0,
		1,
		''RetailSync.LojaProcessos'',
		''''
	)
END
 
 IF NOT EXISTS( SELECT 1 FROM LJ_ETL_TIPO_COMPONENTE WHERE ID_ETL_TIPO = 9101)
 BEGIN
		INSERT INTO LJ_ETL_TIPO_COMPONENTE( 
			ID_ETL_TIPO,
			DESC_EAD,
			DESC_EAD_DESTINO,
			VERSAO,
			INATIVO  
		) 
		VALUES(
		''9101'',
		''RetailSync.LojaProcessos'',
		'''',
		''3.1.1.0'',
		0)
 END
 
  IF NOT EXISTS( SELECT 1 FROM LJ_LX_ETL_TIPO WHERE ID_ETL_TIPO = 9102)
  BEGIN
		/* HR_GUIA_PGTO */
		INSERT INTO LJ_LX_ETL_TIPO(
				ID_ETL_TIPO,
				DESC_ETL_TIPO,
				EXCLUI_PROCESSO_CONCLUIDO,
				INATIVO,
				ORIGEM,
				DESC_EAD,
				DESC_EAD_DESTINO
		)
		VALUES(
			''9102'',
			''HR_GUIA_PGTO'',
			1,
			0,
			1,
			''RetailSync.HrGuiaPgto'',
			''''
		)
  END

  IF NOT EXISTS ( SELECT 1 FROM LJ_ETL_TIPO_COMPONENTE WHERE ID_ETL_TIPO = 9102)
  BEGIN 
		INSERT INTO LJ_ETL_TIPO_COMPONENTE( 
				ID_ETL_TIPO,
				DESC_EAD,
				DESC_EAD_DESTINO,
				VERSAO,
				INATIVO  
		) 
		VALUES(
				''9102'',
				''RetailSync.HrGuiaPgto'',
				'''',
				''3.1.1.0'',
				0
		)
  END

 /* LOJA_CAIXA_FECHADO_HERING */

  IF NOT EXISTS ( SELECT 1 FROM LJ_LX_ETL_TIPO WHERE ID_ETL_TIPO = 9103)
  BEGIN 
		INSERT INTO LJ_LX_ETL_TIPO(
			ID_ETL_TIPO,
			DESC_ETL_TIPO,
			EXCLUI_PROCESSO_CONCLUIDO,
			INATIVO,
			ORIGEM,
			DESC_EAD,
			DESC_EAD_DESTINO
		)
		VALUES(
			''9103'',
			''LOJA_CAIXA_FECHADO_HERING'',
			1,
			0,
			1,
			''RetailSync.LojaCaixaFechadoHering'',
			''''
		)
 END
  
  IF NOT EXISTS ( SELECT 1 FROM LJ_ETL_TIPO_COMPONENTE  WHERE ID_ETL_TIPO = 9103)
  BEGIN
		INSERT INTO LJ_ETL_TIPO_COMPONENTE( 
			ID_ETL_TIPO,
			DESC_EAD,
			DESC_EAD_DESTINO,
			VERSAO,
			INATIVO  
		) 
		VALUES(
			''9103'',
			''RetailSync.LojaCaixaFechadoHering'',
			'''',
			''3.1.1.0'',
			0
		)
  END

   IF NOT EXISTS ( SELECT 1 FROM LJ_LX_ETL_TIPO WHERE ID_ETL_TIPO = 9104)
   BEGIN
		/* HR_LOJA_ENTRADA_CAIXAS */       
		INSERT INTO LJ_LX_ETL_TIPO(
			ID_ETL_TIPO,
			DESC_ETL_TIPO,
			EXCLUI_PROCESSO_CONCLUIDO,
			INATIVO,
			ORIGEM,
			DESC_EAD,
			DESC_EAD_DESTINO
		)
		VALUES(
			''9104'',
			''HR_LOJA_ENTRADA_CAIXAS'',
			1,
			0,
			1,
			''RetailSync.HrLojaEntradaCaixas'',
			''''
	  )
	END
 
  IF NOT EXISTS ( SELECT 1 FROM LJ_ETL_TIPO_COMPONENTE WHERE ID_ETL_TIPO = 9104)
  BEGIN
		  INSERT INTO LJ_ETL_TIPO_COMPONENTE( 
			ID_ETL_TIPO,
			DESC_EAD,
			DESC_EAD_DESTINO,
			VERSAO,
			INATIVO  
		) 
		VALUES(
			''9104'',
			''RetailSync.HrLojaEntradaCaixas'',
			'''',
			''3.1.1.0'',
			0
		)
	END
 
  /* HR_PROPOSTA_CARTACAO */
 
 IF NOT EXISTS ( SELECT 1 FROM LJ_LX_ETL_TIPO WHERE ID_ETL_TIPO = 9105)
 BEGIN
		INSERT INTO LJ_LX_ETL_TIPO(
			ID_ETL_TIPO,
			DESC_ETL_TIPO,
			EXCLUI_PROCESSO_CONCLUIDO,
			INATIVO,
			ORIGEM,
			DESC_EAD,
			DESC_EAD_DESTINO
		)
		VALUES(
			''9105'',
			 ''HR_PROPOSTA_CARTAO'',
			1,
			0,
			1,
			''RetailSync.HrPropostaCartao'',
			''''
		)
 END
 
  IF NOT EXISTS( SELECT 1 FROM LJ_ETL_TIPO_COMPONENTE WHERE ID_ETL_TIPO = 9105)
  BEGIN
		  INSERT INTO LJ_ETL_TIPO_COMPONENTE( 
				ID_ETL_TIPO,
				DESC_EAD,
				DESC_EAD_DESTINO,
				VERSAO,
				INATIVO  
 		 ) 
		VALUES(
			''9105'',
			''RetailSync.HrPropostaCartao'',
			'''',
			''3.1.1.0'',
			0
		)
 END
 
 /* HR_LOTES_ENTRADA */

  IF NOT EXISTS ( SELECT 1 FROM LJ_LX_ETL_TIPO WHERE ID_ETL_TIPO = 9106)
  BEGIN
		INSERT INTO LJ_LX_ETL_TIPO(
			ID_ETL_TIPO,
			DESC_ETL_TIPO,
			EXCLUI_PROCESSO_CONCLUIDO,
			INATIVO,
			ORIGEM,
			DESC_EAD,
			DESC_EAD_DESTINO
		)
		VALUES(
			''9106'',
			''HR_LOTES_ENTRADA'',
			1,
			0,
			1,
			''RetailSync.HrLoteEntrada'',
			''''
		)
 END


  IF NOT EXISTS( SELECT 1 FROM LJ_ETL_TIPO_COMPONENTE WHERE ID_ETL_TIPO = 9106)
  BEGIN
		INSERT INTO LJ_ETL_TIPO_COMPONENTE( 
			ID_ETL_TIPO,
			DESC_EAD,
			DESC_EAD_DESTINO,
			VERSAO,
			INATIVO  
		) 
		VALUES(
			''9106'',
			''RetailSync.HrLoteEntrada'',
			'''',
			''3.1.1.0'',
			0
		)
  END


 /* HR_LOJA_ENTRADAS_CONVERSAO */

 IF NOT EXISTS ( SELECT 1 FROM LJ_LX_ETL_TIPO WHERE ID_ETL_TIPO = 9107)
 BEGIN
	INSERT INTO LJ_LX_ETL_TIPO(
		ID_ETL_TIPO,
		DESC_ETL_TIPO,
		EXCLUI_PROCESSO_CONCLUIDO,
		INATIVO,
		ORIGEM,
		DESC_EAD,
		DESC_EAD_DESTINO
	)
	VALUES(
		''9107'',
		''HR_LOJA_ENTRADAS_CONVERSAO'',
		1,
		0,
		1,
		''RetailSync.HrLojaEntradaConversao'',
		''''
	)
END

 IF NOT EXISTS ( SELECT 1 FROM LJ_ETL_TIPO_COMPONENTE WHERE ID_ETL_TIPO = 9107)
 BEGIN
	INSERT INTO LJ_ETL_TIPO_COMPONENTE( 
		ID_ETL_TIPO,
		DESC_EAD,
		DESC_EAD_DESTINO,
		VERSAO,
		INATIVO  
	) 
	VALUES(
		''9107'',
		''RetailSync.HrLojaEntradaConversao'',
		'''',
		''3.1.1.0'',
		0)
		
 END

 UPDATE LJ_LX_ETL_TIPO SET INATIVO = 0 WHERE ID_ETL_TIPO > 9000
 UPDATE LJ_ETL_TIPO_COMPONENTE SET INATIVO = 0 WHERE ID_ETL_TIPO > 9000

/* 009 - Tipo Exclusivos.sql */
print(convert(varchar(100),getdate(),121)+'' Fim    - 009 - Tipo Exclusivos.sql'')

')

exec('
/* 010 - Trigger Exclusivas.sql */
print(convert(varchar(100),getdate(),121)+'' Inicio - 010 - Trigger Exclusivas.sql'')

SET NOCOUNT ON

BEGIN TRAN

BEGIN TRY 
 /* HR_GUIA_PGTO */


 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''HR_GUIA_PGTO'')
 BEGIN

	 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXI_ETL_HR_GUIA_PGTO''  AND OBJECTS.TYPE = ''TR'')
	 BEGIN
	   DROP TRIGGER LXI_ETL_HR_GUIA_PGTO
	 END

	 EXEC(''
	 Create Trigger [dbo].[LXI_ETL_HR_GUIA_PGTO]  
	  on [dbo].[HR_GUIA_PGTO]  
	 For Insert Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''HR_GUIA_PGTO'''', ''''CODIGO_FILIAL=''''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''''{#}LANCAMENTO=''''+Convert(Varchar(500),  inserted.LANCAMENTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_GUIA_PGTO''''
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
	   End
  
	 End'')
  END

 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''HR_GUIA_PGTO'')
 BEGIN

	 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXU_ETL_HR_GUIA_PGTO''  AND OBJECTS.TYPE = ''TR'')
	 BEGIN
	   DROP TRIGGER LXU_ETL_HR_GUIA_PGTO
	 END

	 EXEC(''
	 Create Trigger [dbo].[LXU_ETL_HR_GUIA_PGTO]  
	  on [dbo].[HR_GUIA_PGTO]  
	 For Update Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''HR_GUIA_PGTO'''', ''''CODIGO_FILIAL=''''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''''{#}LANCAMENTO=''''+Convert(Varchar(500),  inserted.LANCAMENTO), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_GUIA_PGTO''''  
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
	   End
  
	 End'')
 END


 /* HR_LOJA_ENTRADA_CAIXAS  */

 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''HR_LOJA_ENTRADA_CAIXAS'')
 BEGIN

	 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXI_ETL_HR_LOJA_ENTRADA_CAIXAS''  AND OBJECTS.TYPE = ''TR'')
	 BEGIN
	   DROP TRIGGER LXI_ETL_HR_LOJA_ENTRADA_CAIXAS
	 END

	 EXEC(''
	 CREATE Trigger [dbo].[LXI_ETL_HR_LOJA_ENTRADA_CAIXAS]  
	  on [dbo].[HR_LOJA_ENTRADA_CAIXAS]  
	 For Insert Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''HR_LOJA_ENTRADA_CAIXAS'''', ''''FILIAL_ORIGEM=''''+Convert(Varchar(500),  inserted.FILIAL_ORIGEM) +''''{#}FILIAL=''''+Convert(Varchar(500),  inserted.FILIAL)
				+''''{#}NF_NUMERO=''''+Convert(Varchar(500),  inserted.NF_NUMERO)+''''{#}SERIE_NF=''''+Convert(Varchar(500),  inserted.SERIE_NF)  
				+''''{#}NUMERO_CAIXA=''''+Convert(Varchar(500),  inserted.NUMERO_CAIXA)
		 , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_LOJA_ENTRADA_CAIXAS''''
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And inserted.CONFERIDA_LOJA = 1
	   End 
	 End'')

	 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXU_ETL_HR_LOJA_ENTRADA_CAIXAS''  AND OBJECTS.TYPE = ''TR'')
	 BEGIN
	   DROP TRIGGER LXU_ETL_HR_LOJA_ENTRADA_CAIXAS
	 END

	 EXEC(''
	 CREATE Trigger [dbo].[LXU_ETL_HR_LOJA_ENTRADA_CAIXAS]  
	  on [dbo].[HR_LOJA_ENTRADA_CAIXAS]  
	 For Update Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''HR_LOJA_ENTRADA_CAIXAS'''', ''''FILIAL_ORIGEM=''''+Convert(Varchar(500),  inserted.FILIAL_ORIGEM) +''''{#}FILIAL=''''+Convert(Varchar(500),  inserted.FILIAL)
				+''''{#}NF_NUMERO=''''+Convert(Varchar(500),  inserted.NF_NUMERO)+''''{#}SERIE_NF=''''+Convert(Varchar(500),  inserted.SERIE_NF)  
				+''''{#}NUMERO_CAIXA=''''+Convert(Varchar(500),  inserted.NUMERO_CAIXA)
		 , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_LOJA_ENTRADA_CAIXAS''''  
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And inserted.CONFERIDA_LOJA = 1
	   End
  
	 End'')

 END

  

 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''HR_LOTES_ENTRADA'')
 BEGIN
	 /* HR_LOTES_ENTRADA  */ 
	 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXI_ETL_HR_LOTES_ENTRADA''  AND OBJECTS.TYPE = ''TR'')
	 BEGIN
	   DROP TRIGGER LXI_ETL_HR_LOTES_ENTRADA
	 END

	 EXEC(''
	 CREATE Trigger [dbo].[LXI_ETL_HR_LOTES_ENTRADA]  
	  on [dbo].[HR_LOTES_ENTRADA]
	 For Insert Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''HR_LOTES_ENTRADA'''', ''''CODIGO_FILIAL=''''+CONVERT(VARCHAR(500), INSERTED.CODIGO_FILIAL)+''''{#}LOTE_ENTRADA=''''+CONVERT(VARCHAR(500), INSERTED.LOTE_ENTRADA)
		 , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_LOTES_ENTRADA''''  
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And inserted.DATA_FIM IS NOT NULL
	   End
  
	 End'')

	 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXU_ETL_HR_LOTES_ENTRADA''  AND OBJECTS.TYPE = ''TR'')
	 BEGIN
	   DROP TRIGGER LXU_ETL_HR_LOTES_ENTRADA
	 END

	 EXEC(''
	 CREATE Trigger [dbo].[LXU_ETL_HR_LOTES_ENTRADA]  
	  on [dbo].[HR_LOTES_ENTRADA]
	 For Insert Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''HR_LOTES_ENTRADA'''', ''''CODIGO_FILIAL=''''+CONVERT(VARCHAR(500), INSERTED.CODIGO_FILIAL)+''''{#}LOTE_ENTRADA=''''+CONVERT(VARCHAR(500), INSERTED.LOTE_ENTRADA)
		 , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_LOTES_ENTRADA'''' 
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And inserted.DATA_FIM IS NOT NULL
	   End
  
	 End'')

 END


 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''HR_PROPOSTA_CARTAO'')
 BEGIN
		/* HR_PROPOSTAS_CARTAO  */
		IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXI_ETL_HR_PROPOSTA_CARTAO''  AND OBJECTS.TYPE = ''TR'')
		BEGIN
			DROP TRIGGER LXI_ETL_HR_PROPOSTA_CARTAO
		END 

	 EXEC(''
	 CREATE Trigger [dbo].[LXI_ETL_HR_PROPOSTA_CARTAO]  
	  on [dbo].[HR_PROPOSTAS_CARTAO]  
	 For Insert Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''HR_PROPOSTAS_CARTAO'''', ''''CODIGO_FILIAL=''''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''''{#}DATA=''''+ CONVERT(VARCHAR(2), DATEPART(day, DATA)) + N''''/'''' + CONVERT(VARCHAR(2), DATEPART(month, DATA)) + N''''/'''' + CONVERT(VARCHAR(4), DATEPART(year, DATA)) 
		 , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_PROPOSTA_CARTAO''''  
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1   
	   End
  
	 End'')

	 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXU_ETL_HR_PROPOSTA_CARTAO''  AND OBJECTS.TYPE = ''TR'')
	 BEGIN
	   DROP TRIGGER LXU_ETL_HR_PROPOSTA_CARTAO
	 END 

	 EXEC(''
	 CREATE Trigger [dbo].[LXU_ETL_HR_PROPOSTA_CARTAO]  
	  on [dbo].[HR_PROPOSTAS_CARTAO]  
	 For Update Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin  
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''HR_PROPOSTAS_CARTAO'''', ''''CODIGO_FILIAL=''''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''''{#}DATA=''''+ CONVERT(VARCHAR(2), DATEPART(day, DATA)) + N''''/'''' + CONVERT(VARCHAR(2), DATEPART(month, DATA)) + N''''/'''' + CONVERT(VARCHAR(4), DATEPART(year, DATA)) 
		 , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_PROPOSTA_CARTAO''''  
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1   
	   End
  
	 End'')

 END

 /* LOJA_CAIXA_FECHADO_HERING  */ 



 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''LOJA_CAIXA_FECHADO_HERING'')
 BEGIN
		IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXI_ETL_LOJA_CAIXA_FECHADO_HERING''  AND OBJECTS.TYPE = ''TR'')
		BEGIN
			DROP TRIGGER LXI_ETL_LOJA_CAIXA_FECHADO_HERING
		END 

		EXEC(''
		CREATE Trigger [dbo].[LXI_ETL_LOJA_CAIXA_FECHADO_HERING]  
	  on [dbo].[LOJA_CAIXA_FECHADO_HERING]  
	 For Insert Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''LOJA_CAIXA_FECHADO_HERING'''', ''''FILIAL=''''+CONVERT(VARCHAR(500), inserted.Filial)+ +''''{#}CODIGO_FILIAL=''''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''''{#}DATA_LOJA='''' + CONVERT(VARCHAR(2), DATEPART(day, DATA_LOJA)) + N''''/'''' + CONVERT(VARCHAR(2), DATEPART(month, DATA_LOJA)) + N''''/'''' + CONVERT(VARCHAR(4), DATEPART(year, DATA_LOJA)) , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''LOJA_CAIXA_FECHADO_HERING'''' 
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
	   End  
	 End'')

	 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXU_ETL_LOJA_CAIXA_FECHADO_HERING''  AND OBJECTS.TYPE = ''TR'')
	 BEGIN
	   DROP TRIGGER LXU_ETL_LOJA_CAIXA_FECHADO_HERING
	 END 

	 EXEC(''
	 CREATE Trigger [dbo].[LXU_ETL_LOJA_CAIXA_FECHADO_HERING]  
	  on [dbo].[LOJA_CAIXA_FECHADO_HERING]  
	 For Update Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''LOJA_CAIXA_FECHADO_HERING'''', ''''FILIAL=''''+CONVERT(VARCHAR(500), inserted.Filial)+ +''''{#}CODIGO_FILIAL=''''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''''{#}DATA_LOJA='''' + CONVERT(VARCHAR(2), DATEPART(day, DATA_LOJA)) + N''''/'''' + CONVERT(VARCHAR(2), DATEPART(month, DATA_LOJA)) + N''''/'''' + CONVERT(VARCHAR(4), DATEPART(year, DATA_LOJA)) , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''LOJA_CAIXA_FECHADO_HERING''''  
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
	   End  
	 End'')

 END 

 /* LOJA_PROCESSOS  */ 

 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXI_ETL_LOJA_PROCESSOS'' AND OBJECTS.TYPE = ''TR'')
 BEGIN
   DROP TRIGGER LXI_ETL_LOJA_PROCESSOS
 END 

 EXEC(''
 Create Trigger [dbo].[LXI_ETL_LOJA_PROCESSOS]  
  on [dbo].[LOJA_PROCESSOS]  
 For Insert Not For Replication
 as
 Begin
  
   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
     SELECT Distinct ''''LOJA_PROCESSOS'''', ''''CODIGO_FILIAL=''''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''''{#}SEQUENCIA=''''+Convert(Varchar(500),  inserted.SEQUENCIA), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
     FROM Inserted  
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''LOJA_PROCESSOS'''' 
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And inserted.DATA_PROCESSO iS NOT NULL   
   End
  
 End'')


 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXU_ETL_LOJA_PROCESSOS'' AND OBJECTS.TYPE = ''TR'')
 BEGIN
   DROP TRIGGER LXU_ETL_LOJA_PROCESSOS
 END   
    
 EXEC(''
 Create Trigger [dbo].[LXU_ETL_LOJA_PROCESSOS]  
  on [dbo].[LOJA_PROCESSOS]  
 For Update Not For Replication  
 as  
 Begin  
    
    
   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)  
   Begin  
  
    INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
    SELECT Distinct ''''LOJA_PROCESSOS'''', ''''CODIGO_FILIAL=''''+Convert(Varchar(500),  inserted.CODIGO_FILIAL) +''''{#}SEQUENCIA=''''+Convert(Varchar(500),  inserted.SEQUENCIA), LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
    FROM Inserted  
    Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''LOJA_PROCESSOS''''  
    Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And inserted.DATA_PROCESSO iS NOT NULL   
   End  
    
 End'')
 
 
 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE NAME = ''LOJA_CAIXA_FECHADO_HERING'')
 BEGIN
 /* HR_LOJA_ENTRADAS_CONVERSAO  */ 

 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXI_HR_LOJA_ENTRADAS_CONVERSAO''  AND OBJECTS.TYPE = ''TR'')
 BEGIN
   DROP TRIGGER LXI_HR_LOJA_ENTRADAS_CONVERSAO
 END

 EXEC(''
 CREATE Trigger [dbo].[LXI_HR_LOJA_ENTRADAS_CONVERSAO]  
  on [dbo].[HR_LOJA_ENTRADAS_CONVERSAO]
 For Insert Not For Replication
 as
 Begin
  
   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
   Begin
     INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
     SELECT Distinct ''''HR_LOJA_ENTRADAS_CONVERSAO'''', ''''NUMERO_NF_TRANSFERENCIA=''''+CONVERT(VARCHAR(500), INSERTED.NUMERO_NF_TRANSFERENCIA)+''''{#}SERIE_NF_ENTRADA=''''+CONVERT(VARCHAR(500), INSERTED.SERIE_NF_ENTRADA)+''''{#}FILIAL=''''+CONVERT(VARCHAR(500), INSERTED.FILIAL)
     , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
     FROM Inserted  
     Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_LOJA_ENTRADAS_CONVERSAO''''  
     Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And inserted.DATA_CONVERSAO IS NOT NULL
   End
  
 End'')

 END

 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''HR_LOJA_ENTRADAS_CONVERSAO'')
 BEGIN
	 IF EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE OBJECTS.NAME = ''LXU_HR_LOJA_ENTRADAS_CONVERSAO''  AND OBJECTS.TYPE = ''TR'')
	 BEGIN
	   DROP TRIGGER LXU_HR_LOJA_ENTRADAS_CONVERSAO
	 END

	 EXEC(''
	 CREATE Trigger [dbo].[LXU_HR_LOJA_ENTRADAS_CONVERSAO]  
	  on [dbo].[HR_LOJA_ENTRADAS_CONVERSAO]
	 For Update Not For Replication
	 as
	 Begin
  
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''''%LinxETL%'''' OR APP_NAME() LIKE ''''%datasync%'''' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	   Begin
		 INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)  
		 SELECT Distinct ''''HR_LOJA_ENTRADAS_CONVERSAO'''', ''''NUMERO_NF_TRANSFERENCIA=''''+CONVERT(VARCHAR(500), INSERTED.NUMERO_NF_TRANSFERENCIA)+''''{#}SERIE_NF_ENTRADA=''''+CONVERT(VARCHAR(500), INSERTED.SERIE_NF_ENTRADA)+''''{#}FILIAL=''''+CONVERT(VARCHAR(500), INSERTED.FILIAL)
		 , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0   
		 FROM Inserted  
		 Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''''HR_LOJA_ENTRADAS_CONVERSAO'''' 
		 Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1 And inserted.DATA_CONVERSAO IS NOT NULL
	   End
  
	 End'')
 END
 
 

 PRINT ''COMMIT'';
 COMMIT;

END TRY
BEGIN CATCH

 PRINT ''ROLLBACK'';
 ROLLBACK;

 SELECT ERROR_NUMBER() AS ErrorNumber, ERROR_MESSAGE() AS ErrorMessage

END CATCH


/* 010 -Trigger Exclusivas.sql */
print(convert(varchar(100),getdate(),121)+'' Fim    - 010 -Trigger Exclusivas.sql'')
')	


EXEC('
IF NOT EXISTS( SELECT 1 FROM  LJ_LX_ETL_TIPO WHERE ID_ETL_TIPO = 9112) 
BEGIN
	INSERT INTO LJ_LX_ETL_TIPO(
	ID_ETL_TIPO,
	DESC_ETL_TIPO,
	EXCLUI_PROCESSO_CONCLUIDO,
	INATIVO,
	ORIGEM,
	DESC_EAD,
	DESC_EAD_DESTINO,
	UTILIZA_LOTE,
	ULTIMO_LOTE,
	PERIODO_FECHAMENTO_LOTE,
	DATA_HORA_ULTIMO_LOTE,
	FILTRO,
	INDICA_SOMENTE_MASTER,
	IND_SOMENTE_ENTIDADE_PRINCIPAL,
	TOTAL_REGISTROS_ARQUIVO,
	CTRL_EMPRESA,
	CTRL_REDE,
	CTRL_FILIAL,
	INICIO_PROCESSAMENTO_LOTE,
	FIM_PROCESSAMENTO_LOTE)
	VALUES(9112, ''REPROCESSAMENTO_VENDA'', 1, 0, 1, ''RetailSync.ReprocessamentoVenda'', '''', 0, 0,0, NULL, '''', 0,0, NULL, NULL, NULL, NULL,0,23.59)
END')

EXEC('
IF NOT EXISTS( SELECT 1 FROM  LJ_ETL_TIPO_COMPONENTE WHERE ID_ETL_TIPO = 9112) 
BEGIN
	INSERT INTO LJ_ETL_TIPO_COMPONENTE(
		ID_ETL_TIPO,
		DESC_EAD,
		DESC_EAD_DESTINO,
		VERSAO,
		INATIVO
	)
	VALUES(
		9112,
		''RetailSync.ReprocessamentoVenda'',
		'''',
		''3.1.1.0'',
		0
	)
END ')


UPDATE LJ_LX_ETL_TIPO SET INATIVO = 1 WHERE LJ_LX_ETL_TIPO.ID_ETL_TIPO  = 21

EXEC('
IF NOT EXISTS( SELECT 1  FROM sys.columns WHERE name = ''GUID_ID'' AND OBJECT_NAME(columns.object_id) = ''LOJA_EVENTOS_LOG'' )
BEGIN
	ALTER TABLE LOJA_EVENTOS_LOG ADD GUID_ID UNIQUEIDENTIFIER	
	ALTER TABLE LOJA_EVENTOS_LOG add constraint DF_LOJA_EVENTOS_LOG__GUID_ID DEFAULT NEWID() FOR GUID_ID 

END')

EXEC('
	UPDATE LOJA_EVENTOS_LOG SET GUID_ID = NEWID() WHERE GUID_ID IS NULL'
)

IF NOT EXISTS ( SELECT 1 FROM sys.triggers WHERE triggers.name = 'LXI_HR_LOJA_EVENTOS_LOG')
BEGIN
EXEC('
  
	Create Trigger [dbo].[LXI_HR_LOJA_EVENTOS_LOG]
	 on [dbo].[LOJA_EVENTOS_LOG]
	For Insert Not For Replication
	as
	Begin
 
	  IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
	  Begin
	   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
	   SELECT Distinct ''LOJA_EVENTOS_LOG'', 
	   ''GUID_ID=''+Convert(Varchar(500),  inserted.guid_ID)  
	   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
	   FROM Inserted
	   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''HR_LOJA_EVENTOS_LOG''
	   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
	  End
 END
')
END

IF NOT EXISTS ( SELECT 1 FROM sys.triggers WHERE triggers.name = 'LXU_HR_LOJA_EVENTOS_LOG')
BEGIN
	EXEC('
	Create Trigger [dbo].[LXU_HR_LOJA_EVENTOS_LOG]
	 on [dbo].[LOJA_EVENTOS_LOG]
	For Update Not For Replication
	as
	Begin
  
	  IF NOT UPDATE(GUID_ID)
	   IF (SELECT CASE WHEN APP_NAME() LIKE ''%LinxETL%'' OR APP_NAME() LIKE ''%datasync%'' THEN 1 ELSE 0 END) = 0 AND (Isnull(CONTEXT_INFO(), 0x) != 0x53454D5F46494C415F45544C)
		  Begin
		   INSERT INTO  LJ_ETL_REPOSITORIO(TABELA,FILTRO,ID_ETL_TIPO,INDICA_EXCLUSAO)
		   SELECT Distinct ''LOJA_EVENTOS_LOG'', 
		   ''GUID_ID=''+Convert(Varchar(500),  inserted.guid_ID)  
		   , LJ_LX_ETL_TIPO.Id_Etl_Tipo, 0    
		   FROM Inserted
		   Inner Join LJ_LX_ETL_TIPO  On LJ_LX_ETL_TIPO.Desc_Etl_Tipo = ''HR_LOJA_EVENTOS_LOG''
		   Where LJ_LX_ETL_TIPO.Inativo = 0 and LJ_LX_ETL_TIPO.Origem = 1
		  END
	   END
	 ')
END

EXEC('
IF NOT EXISTS(SELECT 1 FROM LJ_LX_ETL_TIPO WHERE LJ_LX_ETL_TIPO.ID_ETL_TIPO = 9113)
BEGIN
	INSERT INTO LJ_LX_ETL_TIPO(ID_ETL_TIPO,DESC_ETL_TIPO,EXCLUI_PROCESSO_CONCLUIDO,INATIVO,ORIGEM,DESC_EAD,DESC_EAD_DESTINO,UTILIZA_LOTE,ULTIMO_LOTE,
								PERIODO_FECHAMENTO_LOTE, DATA_HORA_ULTIMO_LOTE,	FILTRO, INDICA_SOMENTE_MASTER, IND_SOMENTE_ENTIDADE_PRINCIPAL,
								TOTAL_REGISTROS_ARQUIVO, CTRL_EMPRESA, CTRL_REDE, CTRL_FILIAL, INICIO_PROCESSAMENTO_LOTE, FIM_PROCESSAMENTO_LOTE)
	VALUES(9113, ''HR_LOJA_EVENTOS_LOG'', 1, 0, 1, ''RetailSync.HrLojaEventosLog'', '''',0,0,0, NULL,NULL, 0,0,NULL,NULL,NULL,NULL, 0.00, 23.59)

END')

EXEC('
IF NOT EXISTS(SELECT 1 FROM LJ_ETL_TIPO_COMPONENTE WHERE LJ_ETL_TIPO_COMPONENTE.ID_ETL_TIPO = 9113)
BEGIN
	INSERT INTO LJ_ETL_TIPO_COMPONENTE(ID_ETL_TIPO,DESC_EAD,DESC_EAD_DESTINO, VERSAO, INATIVO)
	VALUES(9113, ''RetailSync.HrLojaEventosLog'', '''', ''3.1.1.0'', 0)

END')

 