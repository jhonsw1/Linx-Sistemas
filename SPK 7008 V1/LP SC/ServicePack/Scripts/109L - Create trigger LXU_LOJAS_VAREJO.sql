CREATE TRIGGER [DBO].[LXU_LOJAS_VAREJO] ON [DBO].[LOJAS_VAREJO] FOR UPDATE NOT FOR REPLICATION AS
/* UPDATE TRIGGER ON LOJAS_VAREJO */
/* DEFAULT BODY FOR LXU_LOJAS_VAREJO */
/* SHEL WILKERSON - 19/12/2017 - #2# - Tratamento para não "voltar" sequencial do campo "SEQUENCIA_DAV" (evitando erros com o Showrooming).
										Alterando para usar variáveis "únicas" para controle de sequencial nos 3 campos ("SEQUENCIA_DAV", "SEQUENCIA_PEDIDO" e "SEQUENCIA_PRE_VENDA") */
/* SHEL WILKERSON - 27/11/2017 - #1# - Tratamento para não "voltar" sequencial dos campos 
										"SEQUENCIA_PEDIDO" e "SEQUENCIA_PRE_VENDA", evitando erros com o Linx Mobile. */
BEGIN
  DECLARE  @NUMROWS INT,
           @NULLCNT INT,
           @VALIDCNT INT,
           @INSCODIGO_FILIAL CHAR(6),
           @DELCODIGO_FILIAL CHAR(6),
           @ERRNO   INT,
           @ERRMSG  VARCHAR(255),
		   @UPDSEQUENCIAL CHAR(13),		--#2#
		   @MAXSEQUENCIAL CHAR(13)		--#2#

  SELECT @NUMROWS = @@ROWCOUNT

/* FILIAIS FILIAIS LOJAS_VAREJO ON CHILD UPDATE RESTRICT */
  IF
    UPDATE(FILIAL)
  BEGIN
    SELECT @NULLCNT = 0
    SELECT @VALIDCNT = COUNT(*)
      FROM INSERTED,FILIAIS
     WHERE
           INSERTED.FILIAL = FILIAIS.FILIAL
    
    IF @VALIDCNT + @NULLCNT != @NUMROWS
    BEGIN
      SELECT @ERRNO  = 30007,
             @ERRMSG = 'IMPOSSÍVEL ATUALIZAR  "LOJAS_VAREJO" PORQUE "FILIAIS" NÃO EXISTE.'
      GOTO ERROR
    END
  END
 
-- Inicio: #1# 	 /* VALIDAR SEQUENCIAL */
	IF
			UPDATE (SEQUENCIA_PEDIDO)
	BEGIN 
		SELECT @UPDSEQUENCIAL = ISNULL(INSERTED.SEQUENCIA_PEDIDO, 0),
			   @INSCODIGO_FILIAL = INSERTED.CODIGO_FILIAL
		FROM   LOJAS_VAREJO,
			   INSERTED
		WHERE LOJAS_VAREJO.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL
	  
		SET @MAXSEQUENCIAL =
			(SELECT			TOP 1 ISNULL(PEDIDO, 0)
			 FROM			LOJA_PEDIDO,
							LOJAS_VAREJO
			 WHERE			LOJA_PEDIDO.CODIGO_FILIAL_ORIGEM = LOJAS_VAREJO.CODIGO_FILIAL
			 AND			LOJA_PEDIDO.CODIGO_FILIAL_ORIGEM = @INSCODIGO_FILIAL
			 ORDER BY		PEDIDO DESC) 
		 
		IF CAST(@UPDSEQUENCIAL AS INT) < CAST(@MAXSEQUENCIAL AS INT)
		  UPDATE		LOJAS_VAREJO
		  SET			SEQUENCIA_PEDIDO = CAST(@MAXSEQUENCIAL AS INT) 
		  WHERE			CODIGO_FILIAL = @INSCODIGO_FILIAL 
	END

	IF
		UPDATE (SEQUENCIA_PRE_VENDA)
	BEGIN 

		SELECT	@UPDSEQUENCIAL = ISNULL(INSERTED.SEQUENCIA_PRE_VENDA, 0),
				@INSCODIGO_FILIAL = INSERTED.CODIGO_FILIAL
		FROM	LOJAS_VAREJO,
				INSERTED
		WHERE	LOJAS_VAREJO.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL
	  
		SET @MAXSEQUENCIAL =
			(SELECT			TOP 1 ISNULL(LOJA_PEDIDO.SEQUENCIAL_PRE_VENDA, 0)
			 FROM			LOJA_PEDIDO,
							LOJAS_VAREJO
			 WHERE			LOJA_PEDIDO.CODIGO_FILIAL_ORIGEM = LOJAS_VAREJO.CODIGO_FILIAL
			   AND			LOJA_PEDIDO.CODIGO_FILIAL_ORIGEM = @INSCODIGO_FILIAL
			   AND			LOJA_PEDIDO.LX_TIPO_PRE_VENDA = 1								--#2#
			 ORDER BY		SEQUENCIAL_PRE_VENDA DESC)
		 
		IF CAST(@UPDSEQUENCIAL AS INT) < CAST(@MAXSEQUENCIAL AS INT)
		  UPDATE	LOJAS_VAREJO
		  SET		SEQUENCIA_PRE_VENDA = @MAXSEQUENCIAL 
		  WHERE		CODIGO_FILIAL = @INSCODIGO_FILIAL 
	END
--Fim: #1#
--Inicio: #2#
	IF
		UPDATE (SEQUENCIA_DAV)
	BEGIN 

		SELECT	@UPDSEQUENCIAL = ISNULL(INSERTED.SEQUENCIA_DAV, 0),
				@INSCODIGO_FILIAL = INSERTED.CODIGO_FILIAL
		FROM	LOJAS_VAREJO,
				INSERTED
		WHERE	LOJAS_VAREJO.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL
	  
		SET @MAXSEQUENCIAL =
			(SELECT			TOP 1 ISNULL(LOJA_PEDIDO.SEQUENCIAL_PRE_VENDA, 0)
			 FROM			LOJA_PEDIDO,
							LOJAS_VAREJO
			 WHERE			LOJA_PEDIDO.CODIGO_FILIAL_ORIGEM = LOJAS_VAREJO.CODIGO_FILIAL
			   AND			LOJA_PEDIDO.CODIGO_FILIAL_ORIGEM = @INSCODIGO_FILIAL
			   AND			LOJA_PEDIDO.LX_TIPO_PRE_VENDA = 2								--#2#
			 ORDER BY		SEQUENCIAL_PRE_VENDA DESC)
		 
		IF CAST(@UPDSEQUENCIAL AS INT) < CAST(@MAXSEQUENCIAL AS INT)
		  UPDATE	LOJAS_VAREJO
		  SET		SEQUENCIA_DAV = @MAXSEQUENCIAL 
		  WHERE		CODIGO_FILIAL = @INSCODIGO_FILIAL 
	END
--Fim: #2#

/* LOJAS_VAREJO LOJA_ORIGEM LOJA_VENDEDORES ON PARENT UPDATE CASCADE */
  IF 
     UPDATE(CODIGO_FILIAL)
  BEGIN
    DECLARE LOJAS_VAREJO1850 CURSOR FOR SELECT CODIGO_FILIAL FROM INSERTED
    DECLARE LOJAS_VAREJO1084 CURSOR FOR SELECT CODIGO_FILIAL FROM DELETED
    OPEN LOJAS_VAREJO1850
    OPEN LOJAS_VAREJO1084
    FETCH NEXT FROM LOJAS_VAREJO1850 INTO @INSCODIGO_FILIAL
    FETCH NEXT FROM LOJAS_VAREJO1084 INTO @DELCODIGO_FILIAL
    IF @@ROWCOUNT >= 0
    BEGIN
      WHILE @@FETCH_STATUS = 0
      BEGIN
        UPDATE LOJA_VENDEDORES
           SET LOJA_VENDEDORES.CODIGO_FILIAL=@INSCODIGO_FILIAL
         WHERE LOJA_VENDEDORES.CODIGO_FILIAL = @DELCODIGO_FILIAL

        FETCH NEXT FROM LOJAS_VAREJO1850 INTO @INSCODIGO_FILIAL
        FETCH NEXT FROM LOJAS_VAREJO1084 INTO @DELCODIGO_FILIAL
      END
    END
    CLOSE LOJAS_VAREJO1850
    CLOSE LOJAS_VAREJO1084
    DEALLOCATE LOJAS_VAREJO1850
    DEALLOCATE LOJAS_VAREJO1084
  END

/* LOJAS_VAREJO LOJAS_VAREJO LOJA_VENDA ON PARENT UPDATE CASCADE */
  IF 
     UPDATE(CODIGO_FILIAL)
  BEGIN
    DECLARE LOJAS_VAREJO1858 CURSOR FOR SELECT CODIGO_FILIAL FROM INSERTED
    DECLARE LOJAS_VAREJO1084 CURSOR FOR SELECT CODIGO_FILIAL FROM DELETED
    OPEN LOJAS_VAREJO1858
    OPEN LOJAS_VAREJO1084
    FETCH NEXT FROM LOJAS_VAREJO1858 INTO @INSCODIGO_FILIAL
    FETCH NEXT FROM LOJAS_VAREJO1084 INTO @DELCODIGO_FILIAL
    IF @@ROWCOUNT >= 0
    BEGIN
      WHILE @@FETCH_STATUS = 0
      BEGIN
        UPDATE LOJA_VENDA
           SET LOJA_VENDA.CODIGO_FILIAL=@INSCODIGO_FILIAL
         WHERE LOJA_VENDA.CODIGO_FILIAL = @DELCODIGO_FILIAL

        FETCH NEXT FROM LOJAS_VAREJO1858 INTO @INSCODIGO_FILIAL
        FETCH NEXT FROM LOJAS_VAREJO1084 INTO @DELCODIGO_FILIAL
      END
    END
    CLOSE LOJAS_VAREJO1858
    CLOSE LOJAS_VAREJO1084
    DEALLOCATE LOJAS_VAREJO1858
    DEALLOCATE LOJAS_VAREJO1084
  END

/* LOJAS_VAREJO LOJAS_VAREJO LOJA_TERMINAIS ON PARENT UPDATE CASCADE */
  IF 
     UPDATE(CODIGO_FILIAL)
  BEGIN
    DECLARE LOJAS_VAREJO1843 CURSOR FOR SELECT CODIGO_FILIAL FROM INSERTED
    DECLARE LOJAS_VAREJO1084 CURSOR FOR SELECT CODIGO_FILIAL FROM DELETED
    OPEN LOJAS_VAREJO1843
    OPEN LOJAS_VAREJO1084
    FETCH NEXT FROM LOJAS_VAREJO1843 INTO @INSCODIGO_FILIAL
    FETCH NEXT FROM LOJAS_VAREJO1084 INTO @DELCODIGO_FILIAL
    IF @@ROWCOUNT >= 0
    BEGIN
      WHILE @@FETCH_STATUS = 0
      BEGIN
        UPDATE LOJA_TERMINAIS
           SET LOJA_TERMINAIS.CODIGO_FILIAL=@INSCODIGO_FILIAL
         WHERE LOJA_TERMINAIS.CODIGO_FILIAL = @DELCODIGO_FILIAL

        FETCH NEXT FROM LOJAS_VAREJO1843 INTO @INSCODIGO_FILIAL
        FETCH NEXT FROM LOJAS_VAREJO1084 INTO @DELCODIGO_FILIAL
      END
    END
    CLOSE LOJAS_VAREJO1843
    CLOSE LOJAS_VAREJO1084
    DEALLOCATE LOJAS_VAREJO1843
    DEALLOCATE LOJAS_VAREJO1084
  END

/*---LINX-ETL------------------------------------------------------------------------------------------*/

IF NOT UPDATE(LX_STATUS_LOJA)
BEGIN
	UPDATE LOJAS_VAREJO  
	SET LX_STATUS_LOJA = 1, DATA_PARA_TRANSFERENCIA = INSERTED.DATA_PARA_TRANSFERENCIA  
	FROM LOJAS_VAREJO, INSERTED
	WHERE 	LOJAS_VAREJO.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL 
		AND (INSERTED.LX_STATUS_LOJA IS NULL 
			OR LOJAS_VAREJO.LX_STATUS_LOJA = INSERTED.LX_STATUS_LOJA)
END

/*---LINX-UPDATE---------------------------------------------------------------------------------------*/

IF NOT UPDATE(DATA_PARA_TRANSFERENCIA)
BEGIN
	UPDATE 	LOJAS_VAREJO 
	SET 	DATA_PARA_TRANSFERENCIA = GETDATE()
	FROM 	LOJAS_VAREJO, INSERTED
	WHERE 	LOJAS_VAREJO.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL 
		AND (INSERTED.DATA_PARA_TRANSFERENCIA IS NULL 
		OR LOJAS_VAREJO.DATA_PARA_TRANSFERENCIA = INSERTED.DATA_PARA_TRANSFERENCIA)
END

/*-----------------------------------------------------------------------------------------------------*/
  RETURN
ERROR:
    RAISERROR(@ERRMSG, 18, 1)
    ROLLBACK TRANSACTION
END