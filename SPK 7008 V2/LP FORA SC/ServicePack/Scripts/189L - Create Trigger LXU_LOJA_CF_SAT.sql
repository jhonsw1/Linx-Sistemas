Create TRIGGER [dbo].[LXU_LOJA_CF_SAT] ON [dbo].[LOJA_CF_SAT] FOR UPDATE NOT FOR REPLICATION AS 

-- Wendel Crespigio 18/01/2019  - Demanda  - 107400 #3#  
-- Wendel Crespigio 03/11/2017  - Demanda  - 50434  #2#
-- UPDATE TRIGGER ON LOJA_NOTA_FISCAL

BEGIN
	DECLARE	@NUMROWS	     INT,
		@NULLCNT	         INT,
		@VALIDCNT	         INT,
		@INSCODIGO_FILIAL    CHAR(6), 
		@INSGUID_VENDA_SAT   uniqueidentifier, 
		@INSTERMINAL         CHAR(3),
		@INSLANCAMENTO_CAIXA CHAR(7),
		@DELCODIGO_FILIAL    CHAR(6), 
		@DELGUID_VENDA_SAT   uniqueidentifier, 
		@DELTERMINAL         CHAR(3),
		@DELLANCAMENTO_CAIXA CHAR(7),
		@ERRNO               INT,
		@ERRMSG              VARCHAR(255)

	SELECT @NUMROWS = @@ROWCOUNT

	--VERIFICA SE PODE ALTERAR O STATUS_CFE DENTRO DAS CONDIÇÕES PERMITIDAS -----------------------------------------------------------
	DECLARE @STATUS_APROVADA INT, @STATUS_CANCELADA INT
	SELECT @STATUS_APROVADA = 5
	SELECT @STATUS_CANCELADA = 49
	
	DECLARE @STATUS_CFE SMALLINT, @PROTOCOLO_AUTORIZACAO_CFE VARCHAR(44) , @DATA_AUTORIZACAO_CFE DATETIME, @PROTOCOLO_CANCELAMENTO_CFE  VARCHAR(44), @DATA_CANCELAMENTO DATETIME
	
	IF UPDATE(STATUS_CFE) 	
	BEGIN
		SELECT 
			@STATUS_CFE = STATUS_CFE, @PROTOCOLO_AUTORIZACAO_CFE = CONVERT(CHAR(38), PROTOCOLO_AUTORIZACAO_CFE), @DATA_AUTORIZACAO_CFE = DATA_AUTORIZACAO_CFE, 
			@PROTOCOLO_CANCELAMENTO_CFE = CONVERT(CHAR(38),PROTOCOLO_CANCELAMENTO_CFE), @DATA_CANCELAMENTO = DATA_CANCELAMENTO 
		FROM INSERTED
		WHERE STATUS_CFE = @STATUS_APROVADA OR STATUS_CFE = @STATUS_CANCELADA 

		IF EXISTS ( SELECT STATUS_CFE FROM INSERTED WHERE (STATUS_CFE = @STATUS_APROVADA OR STATUS_CFE = @STATUS_CANCELADA )) 
		BEGIN
			IF (@STATUS_CFE = @STATUS_APROVADA ) AND ((@PROTOCOLO_AUTORIZACAO_CFE IS NULL OR @PROTOCOLO_AUTORIZACAO_CFE = '') OR @DATA_AUTORIZACAO_CFE IS NULL) 
			BEGIN
					SELECT 	@ERRNO=30002,
							@ERRMSG='NAO E POSSIVEL ALTERAR O #STATUS_CFE. #PROTOCOLO_AUTORIZACAO_CFE E/OU #DATA_AUTORIZACAO_CFE NÃO ESTÃO INFORMADOS !'
					GOTO ERROR
			END

			IF (@STATUS_CFE = @STATUS_CANCELADA) AND ((@PROTOCOLO_CANCELAMENTO_CFE IS NULL OR @PROTOCOLO_CANCELAMENTO_CFE = '') OR @DATA_CANCELAMENTO IS NULL) 
			BEGIN
					SELECT 	@ERRNO=30002,
							@ERRMSG='NAO E POSSIVEL ALTERAR O #STATUS_CFE. #PROTOCOLO_CANCELAMENTO_CFE E/OU #DATA_CANCELAMENTO_CFE NÃO ESTÃO INFORMADOS !'
					GOTO ERROR
			END
		END
	END 

	-- #1# - INÍCIO
	---LINX ETL--------------------------------------------------------------------------------  
	--IF (SELECT CASE WHEN APP_NAME() LIKE '%LinxETL%' THEN 1 ELSE 0 END) = 0
	--BEGIN
	--	   UPDATE  LOJA_CF_SAT  
	--		  SET  LX_STATUS_REGISTRO = 1, DATA_PARA_TRANSFERENCIA = INSERTED.DATA_PARA_TRANSFERENCIA    
	--	   FROM  LOJA_CF_SAT, INSERTED  
	--		WHERE LOJA_CF_SAT.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL AND   
	--			  LOJA_CF_SAT.GUID_VENDA_SAT = INSERTED.GUID_VENDA_SAT AND   
	--			  LOJA_CF_SAT.TERMINAL = INSERTED.TERMINAL AND   
	--			  LOJA_CF_SAT.LANCAMENTO_CAIXA = INSERTED.LANCAMENTO_CAIXA
	--END
	----------------------------------------------------------------------------------------------------- 
	-- #1# - FIM 

	---DATA PARA TRANSFERENCIA---------------------------------------------------------------------------
	IF NOT UPDATE(DATA_PARA_TRANSFERENCIA)
	  Begin 	
		UPDATE 	LOJA_CF_SAT
		SET 	DATA_PARA_TRANSFERENCIA = GETDATE()
		FROM 	LOJA_CF_SAT, INSERTED
		WHERE	LOJA_CF_SAT.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL AND 
				LOJA_CF_SAT.GUID_VENDA_SAT = INSERTED.GUID_VENDA_SAT AND   
				LOJA_CF_SAT.TERMINAL = INSERTED.TERMINAL AND   
				LOJA_CF_SAT.LANCAMENTO_CAIXA = INSERTED.LANCAMENTO_CAIXA
				AND INSERTED.DATA_PARA_TRANSFERENCIA IS NULL --	#2# Tratamento conforme solicitação de Crispim -- OR LOJA_CF_SAT.DATA_PARA_TRANSFERENCIA = INSERTED.DATA_PARA_TRANSFERENCIA) 
       End

---DATA PARA TRANSFERENCIA Inicio #3# ------------------------------------------------------------------------------- 

	IF UPDATE(DATA_PARA_TRANSFERENCIA)
	  Begin 
		UPDATE 	LOJA_CF_SAT_ITEM
		SET 	DATA_PARA_TRANSFERENCIA = INSERTED.DATA_PARA_TRANSFERENCIA 
		FROM 	LOJA_CF_SAT_ITEM, INSERTED ,LOJA_CF_SAT
		WHERE	LOJA_CF_SAT_ITEM.CODIGO_FILIAL    = INSERTED.CODIGO_FILIAL  AND 
				LOJA_CF_SAT_ITEM.ID_LOJA_CF_SAT   = INSERTED.ID_LOJA_CF_SAT    
      
	  
	    UPDATE 	LOJA_CF_SAT_IMPOSTO
		SET 	DATA_PARA_TRANSFERENCIA = INSERTED.DATA_PARA_TRANSFERENCIA 
		FROM 	LOJA_CF_SAT_IMPOSTO, INSERTED ,LOJA_CF_SAT
		WHERE	LOJA_CF_SAT_IMPOSTO.CODIGO_FILIAL    = INSERTED.CODIGO_FILIAL  AND 
				LOJA_CF_SAT_IMPOSTO.ID_LOJA_CF_SAT   = INSERTED.ID_LOJA_CF_SAT    
      End
--Fim #3# ------------------------------------------------------------------------------- 
	RETURN
ERROR:
	raiserror(@errmsg, 18, 1)
END