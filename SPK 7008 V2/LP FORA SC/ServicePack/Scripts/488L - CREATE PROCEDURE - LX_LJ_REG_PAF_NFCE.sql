CREATE PROCEDURE [dbo].[LX_LJ_REG_PAF_NFCE] 
	  (@FILIAL            VARCHAR(25), 
	   @CODIGO_FILIAL     VARCHAR(06), 
	   @CODIGO_TAB_PRECO  VARCHAR(2), 
	   @DT_INICIAL        DATETIME, 
	   @DT_FINAL          DATETIME, 
	   @BUILD_BUFFER      VARCHAR(250), 
	   @TERMINAL          VARCHAR(03), 
	   @MOSTRA_TICKET     INT, 
	   @LOCALSAIDA_ICMS   NUMERIC(12, 2), 
	   @LOCALUF           VARCHAR(02), 
	   --@ECF_PrinterID     VARCHAR(03), 
	   --@PrinterName       VARCHAR(20), 
	   --@ModeloECF         VARCHAR(20), 
	   --@SerialNumber      VARCHAR(20), 
	   --@Version_APP       VARCHAR(10), 
	   @ProductFilter     VARCHAR(2000), 
	   @Verifica_Reducao  CHAR(1)) 
AS 
--14/07/2021 - Gilvano Santos - #POSSP-5871# - Criação da Procedure necessarias para o PAF NFCE 2021.
--28/12/2021 - Gilvano Santos - #POSSP-6696# - LinxPos-e (PAF NFC-e) - Quantidade de registros P2 e E2, que são gerados no arquivo

BEGIN 
     DECLARE @IDREG INT, @faltaLinha varchar(2), @HASH_TAB_PRODUTO CHAR(1), @HASH_TAB_PRODUTO_BARRA CHAR(1),
			@HASH_TAB_CLASSIF_FISCAL_IMPOSTO CHAR(1), @HASH_TAB_PRODUTOS_PRECO_COR CHAR(1),
			@HASH_TAB_PRODUTOS_PRECOS CHAR(1), @HASH_TAB_PRODUTO_CORES CHAR(1), @CGC_CPF VARCHAR(14), 
			@RAZAO_SOCIAL VARCHAR(90), @RG_IE VARCHAR(19), @IM VARCHAR(15), @UF CHAR(2), @strDT_INICIAL VARCHAR(10),
			@strDT_FINAL  VARCHAR(10), @DATEICMS AS DATETIME, @ALIQUOTAPADRAO CHAR(05), @HASH_TAB_LJ_PROD_ICMS_PAF_NFCE CHAR(1)

	--		   @MFAdicional      CHAR(01), 
    --         @TipoECF          CHAR(07), 
    --         @TituloDAV        CHAR(30), 
    --         @strDTInicial365  VARCHAR(10), 
    --         @CNPJ_Arredondar  char(14), 
    --         @RazaoArredondar  char(150),
			 --@COUNT                             INT, 
			 --@COUNT_LINE                        INT

     if ( Isnull(@DT_INICIAL, '') = '' or Isnull(@DT_FINAL, '') = '' ) 
     Begin 
		set @DT_INICIAL = '20210701' 
		set @DT_FINAL   = CONVERT(CHAR(08), GETDATE(), 112) 
     end 

     --Select @strDTInicial365 = Convert(varchar(10), Dateadd(YEAR, -1, @DT_INICIAL), 112) 
     Select @strDT_INICIAL = Convert(varchar(10), @DT_INICIAL, 112) 
     Select @strDT_FINAL = Convert(varchar(10), @DT_FINAL, 112); 

     --SET @MFAdicional = ' ' 
     --SET @TipoECF = 'ECF-IF ' 
     --SET @TituloDAV = 'ORCAMENTO' 
	
	SELECT @CGC_CPF = RIGHT(Replicate('0', 14) 
                              + Rtrim(Replace(Replace(Replace(( CGC_CPF ), '.', ''), '-', ''), '/', '')), 14), 
           @RAZAO_SOCIAL = Rtrim(Ltrim(RAZAO_SOCIAL)), 
           @RG_IE = Rtrim(Ltrim(RG_IE)), 
           @IM = Rtrim(Ltrim(IM)), 
           @UF = Rtrim(Ltrim(UF)) 
    FROM   CADASTRO_CLI_FOR 
    WHERE  NOME_CLIFOR = @FILIAL;

    DELETE FROM LJ_REG_PAF_ECF_TEMP WHERE TERMINAL = @TERMINAL 

	IF Object_id('TEMPDB..#LJ_ESTOQUE_PAF_NFCe') IS NOT NULL 
    BEGIN 
        DROP TABLE #LJ_ESTOQUE_PAF_NFCe 
    END 

	CREATE TABLE #LJ_ESTOQUE_PAF_NFCe 
        ( 
           CODIGO_FILIAL        char(6)      COLLATE DATABASE_DEFAULT , 
           CODIGO_PRODUTO       varchar (25) COLLATE DATABASE_DEFAULT ,
           CNPJ_ESTABELECIMENTO varchar (14) COLLATE DATABASE_DEFAULT , 
           DESCRICAO_PRODUTO    varchar (50) COLLATE DATABASE_DEFAULT , 
           DESCRICAO_UNIDADE    varchar (06) COLLATE DATABASE_DEFAULT , 
           SALDO_ESTOQUE        int, 
           LX_HASH              varbinary (16),
		   DATA_PAF_NFCE	    DATE,
		   CLASSIF_FISCAL		VARCHAR (10) COLLATE DATABASE_DEFAULT,
		   CODIGO_CEST			varchar (07) COLLATE DATABASE_DEFAULT,
		   FILTRO_ESTOQUE       int,  --#POSSP-6696#
        ) 

      EXECUTE ( 'INSERT INTO #LJ_ESTOQUE_PAF_NFCe (CODIGO_FILIAL,CODIGO_PRODUTO,CNPJ_ESTABELECIMENTO,DESCRICAO_PRODUTO,
	  DESCRICAO_UNIDADE ,SALDO_ESTOQUE ,LX_HASH, DATA_PAF_NFCE, CLASSIF_FISCAL, CODIGO_CEST, FILTRO_ESTOQUE)    
	  SELECT CODIGO_FILIAL,CODIGO_PRODUTO,CNPJ_ESTABELECIMENTO,DESCRICAO_PRODUTO,DESCRICAO_UNIDADE ,SALDO_ESTOQUE ,
	  LX_HASH, DATA_PAF_NFCE, CLASSIF_FISCAL, CODIGO_CEST, 1 AS FILTRO_ESTOQUE FROM LJ_ESTOQUE_PAF_NFCE A WHERE LEN(A.CODIGO_PRODUTO) > 0 
	  AND A.DATA_PAF_NFCE IN ( SELECT MAX(DATA_PAF_NFCE) FROM LJ_ESTOQUE_PAF_NFCE ) ' + @ProductFilter ) --#POSSP-6696#


	  EXECUTE ( 'INSERT INTO #LJ_ESTOQUE_PAF_NFCe (CODIGO_FILIAL,CODIGO_PRODUTO,CNPJ_ESTABELECIMENTO,DESCRICAO_PRODUTO,
	  DESCRICAO_UNIDADE ,SALDO_ESTOQUE ,LX_HASH, DATA_PAF_NFCE, CLASSIF_FISCAL, CODIGO_CEST, FILTRO_ESTOQUE)    
	  SELECT CODIGO_FILIAL,CODIGO_PRODUTO,CNPJ_ESTABELECIMENTO,DESCRICAO_PRODUTO,DESCRICAO_UNIDADE ,SALDO_ESTOQUE ,
	  LX_HASH, DATA_PAF_NFCE, CLASSIF_FISCAL, CODIGO_CEST, 0 AS FILTRO_ESTOQUE FROM LJ_ESTOQUE_PAF_NFCE A WHERE LEN(A.CODIGO_PRODUTO) > 0 
	  AND A.DATA_PAF_NFCE IN ( SELECT MAX(DATA_PAF_NFCE) FROM LJ_ESTOQUE_PAF_NFCE ) ' ) --#POSSP-6696#


	  CREATE TABLE #LJ_PROD_ICMS_PAF_NFCE
	  (
		DATA_PAF_NFCE			[DATE] NOT NULL,
		CODIGO_FILIAL			[char] (6) COLLATE DATABASE_DEFAULT NOT NULL,
		ID_EXCECAO_IMPOSTO		[int] NOT NULL,
		PRODUTO					[varchar] (12) COLLATE DATABASE_DEFAULT,
		TAXA_IMPOSTO			[numeric],
		TRIBUT_ICMS				[char] (03) COLLATE DATABASE_DEFAULT,
		LX_HASH                 [varbinary] (16)
	  )

	  EXECUTE('insert into #LJ_PROD_ICMS_PAF_NFCE (DATA_PAF_NFCE, CODIGO_FILIAL, ID_EXCECAO_IMPOSTO, PRODUTO, TAXA_IMPOSTO, TRIBUT_ICMS, LX_HASH )
	  SELECT DATA_PAF_NFCE, CODIGO_FILIAL, ID_EXCECAO_IMPOSTO, PRODUTO, TAXA_IMPOSTO, TRIBUT_ICMS, LX_HASH 
	  FROM LJ_PROD_ICMS_PAF_NFCE A 
	  WHERE A.DATA_PAF_NFCE IN ( SELECT MAX(DATA_PAF_NFCE) FROM LJ_PROD_ICMS_PAF_NFCE ) ')   


    -- REGISTRO A2 -----------------------------------------------------------------------------------------------------------------------------------------------------
	Print 'Registro	A2'
	Begin
		INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO, REGISTRO, LIMITE, TERMINAL)
		select 2 AS TIPO,
					'A2' + a.DATA + 
					left(rtrim(a.PAGAMENTO) + (case when sum(a.HASHS) = 0 then Replicate(' ', 25) else Replicate('?', 25) end), 25) +
					a.TIPODOC + RIGHT(Replicate('0', 12) + Replace(Cast(Sum(A.VALOR) AS VARCHAR), '.', ''), 12) +
					left(a.CPFCNPJ + Replicate(' ', 14), 14) + left( a.NumDocNaoTribut + Replicate(' ', 10), 10)
					as registro,
					72 AS LIMITE, 
                    @TERMINAL     AS TERMINAL 
			from (	SELECT	
						Replace(CONVERT(CHAR(8), A.DATA_MOVIMENTO, 112), '/', '') AS DATA, 
						Ltrim(Rtrim(upper(A.MEIO_PAGAMENTO))) AS PAGAMENTO, 
						case when d.NUMERO_MODELO_FISCAL = '65' then '1' else '2' end AS TIPODOC, 
                        CASE 
                           WHEN A.LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + A.CODIGO_FILIAL + A.NF_NUMERO 
                                                             + A.SERIE_NF + Cast(A.SEQUENCIAL AS VARCHAR) 
                                                             + A.DENOMINACAO_DOCUMENTO 
                                                             + CONVERT(VARCHAR, A.DATA_MOVIMENTO, 112) 
                                                             + A.MEIO_PAGAMENTO + Cast(VALOR AS VARCHAR) 
                                                             + Cast(A.NOTA_CANCELADA AS VARCHAR) 
                                                             + Cast(A.NF_VENDA_CF AS VARCHAR)) THEN 0 ELSE 1 END  AS HASHS, 
                       A.VALOR as valor,
					   '' as CPFCNPJ,
					   '' as NumDocNaoTribut                       
                  From   dbo.LOJA_NOTA_FISCAL_PAGAMENTO A 
                         inner join LOJA_NOTA_FISCAL B
						 on A.NF_NUMERO = b.NF_NUMERO
						 and A.SERIE_NF = b.SERIE_NF 
						 and A.CODIGO_FILIAL = B.CODIGO_FILIAL
						 INNER JOIN SERIES_NF C
						 ON B.SERIE_NF = C.SERIE_NF
    					 INNER JOIN CTB_ESPECIE_SERIE D
						  ON C.ESPECIE_SERIE = D.ESPECIE_SERIE 
                  WHERE  A.NOTA_CANCELADA = 0 
                         AND NF_VENDA_CF = 0 
                         AND A.CODIGO_FILIAL = @CODIGO_FILIAL 
						 AND CONVERT(Varchar,( DATA_MOVIMENTO ), 112) Between @strDT_INICIAL And @strDT_FINAL 
						 AND ISNULL(A.MEIO_PAGAMENTO,'') <> ''
						 --AND D.NUMERO_MODELO_FISCAL IN ('65','55') AND B.STATUS_NFE = 5
						 AND (D.NUMERO_MODELO_FISCAL IN ('2','02','2D') OR (D.NUMERO_MODELO_FISCAL IN ('55','65') AND B.STATUS_NFE =5))
				  
				  UNION ALL

				  SELECT	
						Replace(CONVERT(CHAR(8), A.DATA, 112), '/', '') AS DATA, 
						case
							WHEN C.TIPO_PGTO IN ('D','M')			THEN 'DINHEIRO'
							WHEN C.TIPO_PGTO IN ('C','P')			THEN 'CHEQUE'
							WHEN C.TIPO_PGTO IN ('A','B','I')		THEN 'CARTAO DE CREDITO'
							WHEN C.TIPO_PGTO IN ('E','K')			THEN 'CARTAO DE DEBITO'
							WHEN C.TIPO_PGTO IN ('#','N','>')		THEN 'CREDITO LOJA' 
							WHEN C.TIPO_PGTO = '@'					THEN 'VALE PRESENTE' 
							WHEN C.TIPO_PGTO = '&'					THEN 'VALE PRESENTE'
							WHEN C.TIPO_PGTO = '$'					THEN 'BOLETO'
						    WHEN C.TIPO_PGTO = '+' AND E.MODALIDADE_QR = 3	THEN 'PIX'
							WHEN C.TIPO_PGTO = '+' AND E.MODALIDADE_QR != 3 THEN 'CARTEIRA DIGITAL'
						ELSE 'CREDITO LOJA' END AS PAGAMENTO, 
						'3' AS TIPODOC, 

                        CASE WHEN 
							A.LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + A.CODIGO_FILIAL + A.TERMINAL + A.LANCAMENTO_CAIXA + 
								CONVERT(CHAR(18), A.TOTAL_VENDA) + CONVERT(CHAR(1), ISNULL(A.CANCELADO_FISCAL, 0)) + 
								CONVERT(CHAR(20), ISNULL(A.ID_EQUIPAMENTO, '')) + CONVERT(CHAR(6), ISNULL(A.NUMERO_CUPOM_FISCAL, '')) + 
								CONVERT(CHAR(10), ISNULL(A.NUMERO_CCF, 0)))
							AND B.LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + Replace(CONVERT(CHAR(8), B.DATA_VENDA, 112), '/', '') +
								B.CODIGO_FILIAL + B.TICKET + B.TERMINAL_PGTO + B.CODIGO_FILIAL_PGTO + ISNULL(B.CPF_CGC_ECF,'')							
								+ B.TERMINAL + B.LANCAMENTO_CAIXA)
					   THEN 0 ELSE 1 END  AS HASHS, 
                       c.VALOR as valor,
					   rtrim(ltrim(isnull(b.CPF_CGC_ECF,''))) as CPFCNPJ,
					   rtrim(ltrim(b.TICKET)) as NumDocNaoTribut
                  From   dbo.loja_venda_pgto A 
				  inner join loja_venda b on a.CODIGO_FILIAL = b.CODIGO_FILIAL_PGTO and a.TERMINAL = b.TERMINAL_PGTO
					and a.LANCAMENTO_CAIXA = b.LANCAMENTO_CAIXA
				  inner join LOJA_VENDA_PARCELAS c on a.CODIGO_FILIAL = c.CODIGO_FILIAL and a.TERMINAL = c.TERMINAL 
					and a.LANCAMENTO_CAIXA = c.LANCAMENTO_CAIXA
				  LEFT JOIN	ADMINISTRADORAS_CARTAO E WITH (NOLOCK) ON C.CODIGO_ADMINISTRADORA = E.CODIGO_ADMINISTRADORA
				  where a.CANCELADO_FISCAL = 0 and a.VENDA_FINALIZADA = 1 
					and NUMERO_FISCAL_VENDA is null and a.SERIE_NF_SAIDA is null 
					and a.NUMERO_NF_ORDEM is null and a.SERIE_NF_ORDEM is null
					and a.ID_EQUIPAMENTO is null and a.GUID_VENDA_SAT is null
					and c.VALOR > 0
				  AND A.CODIGO_FILIAL = @CODIGO_FILIAL 
				  AND CONVERT(Varchar,( A.DATA ), 112) Between @strDT_INICIAL And @strDT_FINAL 
				) a
				group by a.DATA, a.PAGAMENTO, a.TIPODOC, a.CPFCNPJ, a.NumDocNaoTribut
	end

	-- REGISTRO P2 ----------------------------------------------------------------------------------------------------------------------------------------------------- 
	Print 'Registro	P2'
	IF @Verifica_Reducao = '0'
	BEGIN 
		IF Object_id('TEMPDB..#PRODUTOSP2') IS NOT NULL 
        BEGIN 
            DROP TABLE #PRODUTOSP2 
        END

		CREATE TABLE #PRODUTOSP2 (  PRODUTO	       VARCHAR (12) COLLATE DATABASE_DEFAULT ,
								COR_PRODUTO	       VARCHAR (10) COLLATE DATABASE_DEFAULT,
								GRADE	           VARCHAR (8)  COLLATE DATABASE_DEFAULT,
								CODIGO_PRODUTO     VARCHAR (25) COLLATE DATABASE_DEFAULT,
								TAMANHO	           INT	       ,
								TIPO_COD_BAR	   TINYINT     ,	
								CODIGO_BARRA	   VARCHAR (25) COLLATE DATABASE_DEFAULT,
								DESC_PROD          VARCHAR (50) COLLATE DATABASE_DEFAULT, 
								UNIDADE            VARCHAR (6)  COLLATE DATABASE_DEFAULT,
								INDICADOR_CFOP     VARCHAR (11) COLLATE DATABASE_DEFAULT,
								CLASSIF_FISCAL     VARCHAR (10) COLLATE DATABASE_DEFAULT, 
								ALIQUOTA           VARCHAR (8)  COLLATE DATABASE_DEFAULT,
								PRECO1             NUMERIC (14,2),
								PRECO2             NUMERIC (14,2),
								PRECO3             NUMERIC (14,2),
								PRECO4             NUMERIC (14,2),
								PONTEIRO_PRECO_TAM VARCHAR(48) COLLATE DATABASE_DEFAULT, 
								ATUALIZADO BIT NOT NULL DEFAULT 0,
								HASH_TAB_PRODUTO CHAR(1),
								HASH_TAB_CLASSIF_FISCAL_IMPOSTO CHAR(1),
								HASH_TAB_PRODUTOS_PRECO_COR CHAR(1),
								HASH_TAB_PRODUTOS_PRECO CHAR(1),
								HASH_TAB_PRODUTO_CORES CHAR(1),
								HASH_TAB_PRODUTO_BARRA CHAR(1),
								CODIGO_CEST varchar(07) COLLATE DATABASE_DEFAULT)

		INSERT INTO #PRODUTOSP2 (PRODUTO,
						 COR_PRODUTO	 ,
						 GRADE	         ,
						 CODIGO_PRODUTO  ,
						 TAMANHO	     ,
						 TIPO_COD_BAR 	 ,
						 CODIGO_BARRA  	 						
						 ) 
		SELECT PRODUTO ,COR_PRODUTO ,GRADE,CODIGO_PRODUTO,TAMANHO,TIPO_COD_BAR,CODIGO_BARRA 
		FROM dbo.FX_LINXPOS_PROD (@CODIGO_FILIAL)

		SET @HASH_TAB_PRODUTO = ''
		SET @HASH_TAB_PRODUTO_BARRA = ''

		---Calcula hash da tabela 
		UPDATE #PRODUTOSP2
		SET HASH_TAB_PRODUTO =  
			CASE WHEN P.PRODUTO IS NULL THEN '?' ELSE
				CASE WHEN P.LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + P.PRODUTO + P.DESC_PROD_NF + P.UNIDADE + 
										CAST(ISNULL(P.INDICADOR_CFOP, 0) AS VARCHAR) + P.CLASSIF_FISCAL + CAST(P.VARIA_PRECO_COR AS VARCHAR) + 
										CAST(P.VARIA_PRECO_TAM AS VARCHAR)  + P.PONTEIRO_PRECO_TAM  + 	CAST(P.ARREDONDA AS VARCHAR)) THEN '' ELSE '?' END
			END
		FROM #PRODUTOSP2 P2
		LEFT JOIN PRODUTOS P ON P2.PRODUTO = P.PRODUTO

		--Calcula hash da tabela PRODUTOS BARRA
		SELECT  @HASH_TAB_PRODUTO_BARRA = 
				CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_BARRA +	PRODUTO + COR_PRODUTO +	CAST(TAMANHO AS VARCHAR) + 
					GRADE +	CAST(ISNULL(TIPO_COD_BAR, 0) AS VARCHAR)) THEN '' ELSE '?' END  
		FROM PRODUTOS_BARRA 
		WHERE  LX_HASH <> HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_BARRA + PRODUTO +	COR_PRODUTO + CAST(TAMANHO AS VARCHAR) + 
									GRADE + CAST(ISNULL(TIPO_COD_BAR, 0) AS VARCHAR) )

		--UPDATE DADOS DE PRODUTOS
		UPDATE A SET A.DESC_PROD = B.DESC_PROD_NF, A.UNIDADE = B.UNIDADE,
			A.INDICADOR_CFOP = B.INDICADOR_CFOP, A.CLASSIF_FISCAL = B.CLASSIF_FISCAL, 
			A.PONTEIRO_PRECO_TAM = B.PONTEIRO_PRECO_TAM,
			A.CODIGO_CEST = D.CODIGO_CEST
		from #PRODUTOSP2 A
		INNER JOIN DBO.PRODUTOS B ON A.PRODUTO = B.PRODUTO
		LEFT JOIN CEST_NCM C ON B.ID_CEST_NCM = C.ID
		LEFT JOIN TABELA_LX_CEST D ON C.ID_CEST = D.ID


		


		-- UPDATE PARA ALIQUOTA REGRA EXCESSAO
		UPDATE #PRODUTOSP2 SET 
			ALIQUOTA =
					case when A.TRIBUT_ICMS in ('40','103') then 'I'
						 when A.TRIBUT_ICMS in ('41','300','400') then 'N'
						 when A.TRIBUT_ICMS in ('60','500') then 'F'
						 when A.TRIBUT_ICMS in ('00','20','90','101','103','900') then 'T'
					else 'S' end 	
					+
					RIGHT(Replicate('0', 4) + CONVERT(VARCHAR, CONVERT(INT, A.TAXA_IMPOSTO * 100)), 4) 
	    FROM #LJ_PROD_ICMS_PAF_NFCE A
		INNER JOIN #PRODUTOSP2 C ON C.PRODUTO = A.PRODUTO	
		WHERE A.CODIGO_FILIAL = @CODIGO_FILIAL

		-- UPDATE PARA ALIQUOTA PADRAO
		SELECT @DATEICMS = a.DATA_PAF_NFCE, 
			@ALIQUOTAPADRAO = (
				case when A.TRIBUT_ICMS in ('40','103') then 'I'
				 when A.TRIBUT_ICMS in ('41','300','400') then 'N'
				 when A.TRIBUT_ICMS in ('60','500') then 'F'
				 when A.TRIBUT_ICMS in ('00','20','90','101','103','900') then 'T'
			else 'S' end			
			+
			RIGHT(Replicate('0', 4) + CONVERT(VARCHAR, CONVERT(INT, A.TAXA_IMPOSTO * 100)), 4))		       
		FROM #LJ_PROD_ICMS_PAF_NFCE a 
		where A.produto is null AND A.CODIGO_FILIAL = @CODIGO_FILIAL

		print cast(@ALIQUOTAPADRAO as varchar(10)) + ' - ' +convert(char(10), @DATEICMS, 112)

		UPDATE #PRODUTOSP2 SET 
			ALIQUOTA = @ALIQUOTAPADRAO
		where ALIQUOTA is null

		SELECT @HASH_TAB_LJ_PROD_ICMS_PAF_NFCE = 
			CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_FILIAL + CAST(ID_EXCECAO_IMPOSTO AS VARCHAR) + ISNULL(PRODUTO,'') + 
				ISNULL(TRIBUT_ICMS,'') +  CAST(ISNULL(TAXA_IMPOSTO,0) AS VARCHAR) ) THEN '' ELSE '?' END 
		FROM #LJ_PROD_ICMS_PAF_NFCE
		WHERE LX_HASH <> HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_FILIAL + CAST(ID_EXCECAO_IMPOSTO AS VARCHAR) + ISNULL(PRODUTO,'') + 
				ISNULL(TRIBUT_ICMS,'') +  CAST(ISNULL(TAXA_IMPOSTO,0) AS VARCHAR));

		SELECT @HASH_TAB_CLASSIF_FISCAL_IMPOSTO = 
			CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + CLASSIF_FISCAL_INICIAL + CLASSIF_FISCAL_FINAL + UF + CAST(ID_IMPOSTO AS VARCHAR) 
				+ CAST(ALIQUOTA AS VARCHAR) + CODIGO_FILIAL) THEN '' ELSE '?' END 
		FROM CLASSIF_FISCAL_IMPOSTO
		WHERE LX_HASH <> HASHBYTES('MD5', @BUILD_BUFFER + CLASSIF_FISCAL_INICIAL + CLASSIF_FISCAL_FINAL + UF + CAST(ID_IMPOSTO AS VARCHAR) 
				+ CAST(ALIQUOTA AS VARCHAR) + CODIGO_FILIAL)

		UPDATE A
			SET A.PRECO1 = CASE WHEN ISNULL(B.PRECO1,0) <> 0 THEN B.PRECO1 END, 
				A.PRECO2 = CASE WHEN ISNULL(B.PRECO2,0) <> 0 THEN B.PRECO2 END,   
				A.PRECO3 = CASE WHEN ISNULL(B.PRECO3,0) <> 0 THEN B.PRECO3 END, 
				A.PRECO4 = CASE WHEN ISNULL(B.PRECO4,0) <> 0 THEN B.PRECO4 END,
				A.ATUALIZADO = 1	   
			FROM #PRODUTOSP2 A
			INNER JOIN DBO.PRODUTOS_PRECO_FILIAL B 
				ON B.PRODUTO = A.PRODUTO  
			   AND B.COR_PRODUTO = A.COR_PRODUTO
			WHERE ATUALIZADO = 0
			   AND B.CODIGO_TAB_PRECO = @CODIGO_TAB_PRECO
			   AND B.FILIAL = @FILIAL

		UPDATE A
		SET A.PRECO1 = CASE WHEN ISNULL(C.PRECO1,0) <> 0 THEN C.PRECO1 END, 
			A.PRECO2 = CASE WHEN ISNULL(C.PRECO2,0) <> 0 THEN C.PRECO2 END,    
			A.PRECO3 = CASE WHEN ISNULL(C.PRECO3,0) <> 0 THEN C.PRECO3 END, 
			A.PRECO4 = CASE WHEN ISNULL(C.PRECO4,0) <> 0 THEN C.PRECO4 END,
			A.ATUALIZADO = 1
		FROM #PRODUTOSP2 A
		INNER JOIN DBO.PRODUTOS B ON A.PRODUTO = B.PRODUTO 
		INNER JOIN DBO.PRODUTOS_PRECO_COR C ON A.PRODUTO = C.PRODUTO 
			AND A.COR_PRODUTO = C.COR_PRODUTO
			AND C.CODIGO_TAB_PRECO = @CODIGO_TAB_PRECO
		WHERE B.VARIA_PRECO_COR = 1 AND ATUALIZADO = 0

		UPDATE A
		SET A.PRECO1 = ISNULL(B.PRECO1, A.PRECO1), 
			A.PRECO2 = ISNULL(B.PRECO2, A.PRECO2),    
			A.PRECO3 = ISNULL(B.PRECO3, A.PRECO3), 
			A.PRECO4 = ISNULL(B.PRECO4, A.PRECO4),
			A.ATUALIZADO = 1
		FROM #PRODUTOSP2 A
		INNER JOIN DBO.PRODUTOS_PRECOS B 
			ON A.PRODUTO = B.PRODUTO 
		   AND B.CODIGO_TAB_PRECO = @CODIGO_TAB_PRECO
		WHERE ATUALIZADO = 0

		SET @HASH_TAB_PRODUTOS_PRECO_COR =''
		SET @HASH_TAB_PRODUTOS_PRECOS =''
		SET @HASH_TAB_PRODUTO_CORES  =''
		SET @HASH_TAB_PRODUTO_BARRA = ''

		SELECT @HASH_TAB_PRODUTOS_PRECO_COR = 
				MAX(CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_TAB_PRECO + PRODUTO + COR_PRODUTO + CAST(ISNULL(PRECO1, 0) AS VARCHAR) +	
					CAST(ISNULL(PRECO2, 0) AS VARCHAR) + CAST(ISNULL(PRECO3, 0) AS VARCHAR) + CAST(ISNULL(PRECO4, 0) AS VARCHAR) ) THEN '' ELSE '?' END) 
		FROM PRODUTOS_PRECO_COR
		--WHERE LX_HASH != HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_TAB_PRECO + PRODUTO + COR_PRODUTO + CAST(ISNULL(PRECO1, 0) AS VARCHAR) +	
		--			CAST(ISNULL(PRECO2, 0) AS VARCHAR) + CAST(ISNULL(PRECO3, 0) AS VARCHAR) + CAST(ISNULL(PRECO4, 0) AS VARCHAR) )

		SELECT @HASH_TAB_PRODUTOS_PRECOS = 
				MAX(CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_TAB_PRECO + PRODUTO + CAST(ISNULL(PRECO1, 0) AS VARCHAR) + 
				CAST(ISNULL(PRECO2, 0) AS VARCHAR)  + CAST(ISNULL(PRECO3, 0) AS VARCHAR) +	CAST(ISNULL(PRECO4, 0) AS VARCHAR) ) THEN '' ELSE '?' END) 
		FROM PRODUTOS_PRECOS 
		--WHERE LX_HASH != HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_TAB_PRECO + PRODUTO + CAST(ISNULL(PRECO1, 0) AS VARCHAR) + 
		--		CAST(ISNULL(PRECO2, 0) AS VARCHAR)  + CAST(ISNULL(PRECO3, 0) AS VARCHAR) +	CAST(ISNULL(PRECO4, 0) AS VARCHAR) )

		SELECT @HASH_TAB_PRODUTO_CORES = 
				MAX(CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + PRODUTO +	COR_PRODUTO + DESC_COR_PRODUTO ) THEN '' ELSE '?' END) 
		FROM PRODUTO_CORES 
		--WHERE LX_HASH != HASHBYTES('MD5', @BUILD_BUFFER + PRODUTO +	COR_PRODUTO + DESC_COR_PRODUTO )

		SELECT @HASH_TAB_PRODUTO_BARRA = 
				MAX(CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_BARRA +	PRODUTO + COR_PRODUTO +	CAST(TAMANHO AS VARCHAR) +	
				GRADE +	CAST(ISNULL(TIPO_COD_BAR, 0) AS VARCHAR)) THEN '' ELSE '?' END) 
		FROM PRODUTOS_BARRA
		--WHERE LX_HASH != HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_BARRA +	PRODUTO + COR_PRODUTO +	CAST(TAMANHO AS VARCHAR) +	
		--		GRADE +	CAST(ISNULL(TIPO_COD_BAR, 0) AS VARCHAR))

		INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO, REGISTRO, LIMITE, TERMINAL )  
		SELECT  3 AS TIPO, 
				 'P2'                                                                                                                  +
				 RIGHT(Replicate('0', 14) + Rtrim(Replace(Replace(Replace(ISNULL(@CGC_CPF, ''), '.', ''), '-', ''), '/', '')), 14)     +
				 LEFT(Rtrim(Replace(Replace(Replace(ISNULL(A.CODIGO_BARRA, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',14), 14)   +
				 LEFT(Rtrim(Replace(Replace(Replace(ISNULL(A.CODIGO_CEST, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',7), 7)	   +
				 LEFT(Rtrim(Replace(Replace(Replace(ISNULL(A.CLASSIF_FISCAL, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',8), 8)   +
				 LEFT(Rtrim(Replace(Replace(Replace(ISNULL(A.DESC_PROD, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',50), 50)      +
				 REPLACE(LEFT(Rtrim(Replace(Replace(Replace(ISNULL(A.UNIDADE, ''), '.', ''), '-', ''), '/', ''))	+ 
				 Replicate(' ',6), 6), ' ',	
				 CASE WHEN RTRIM(LTRIM(ISNULL(HASH_TAB_PRODUTO,'') + ISNULL(@HASH_TAB_CLASSIF_FISCAL_IMPOSTO,'') + ISNULL(@HASH_TAB_PRODUTOS_PRECO_COR,'') +
							ISNULL(@HASH_TAB_PRODUTOS_PRECOS,'') + ISNULL(@HASH_TAB_PRODUTO_CORES,'') + ISNULL(@HASH_TAB_PRODUTO_BARRA,'') +
							ISNULL(@HASH_TAB_LJ_PROD_ICMS_PAF_NFCE,''))) = '' THEN ' ' ELSE '?' END) + 
				'A'                              +
				 CASE ISNULL(A.INDICADOR_CFOP, 11) WHEN 10 THEN 'P' ELSE 'T' END                                                         + 
																																		 
			     ISNULL(A.ALIQUOTA, 'T' + RIGHT('0000' + CONVERT(VARCHAR, CONVERT(INT, @LOCALSAIDA_ICMS * 100)), 4))                     + 
				 RIGHT(REPLICATE('0', 12) + CONVERT(VARCHAR, CONVERT(INT, ISNULL(CASE SUBSTRING(A.PONTEIRO_PRECO_TAM, A.TAMANHO, 1) 
						WHEN 1 THEN A.PRECO1 
						WHEN 2 THEN A.PRECO2 
						WHEN 3 THEN A.PRECO3 
						WHEN 4 THEN A.PRECO4 END, 0) * 100), 12), 12) AS REGISTRO,
				 120, @TERMINAL 
				 FROM #PRODUTOSP2 A
				 INNER JOIN #LJ_ESTOQUE_PAF_NFCe B ON A.CODIGO_BARRA = B.CODIGO_PRODUTO and b.FILTRO_ESTOQUE = 0; -- POSSP-6783
	END

	
	-- REGISTRO E2-------------------------------------------------------------------------------------------------------------------------------------------------------
	Print 'Registro E2'
	IF @Verifica_Reducao = '0'
	BEGIN
		IF @MOSTRA_TICKET = 1
		BEGIN
			INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO, REGISTRO, LIMITE, TERMINAL)
			Select 4 AS TIPO, 'E2' 
                   + RIGHT(Replicate('0', 14) + Rtrim(Replace(Replace(Replace(ISNULL(CNPJ_ESTABELECIMENTO, ''), '.', ''), '-', ''), '/', '')), 14) 
                   + RIGHT(Replicate('0', 14) + LEFT(Rtrim(Replace(Replace(Replace(ISNULL(CODIGO_PRODUTO, ''), '.', ''), '-', ''), '/', '')),14), 14)
				   + LEFT(Rtrim(Replace(Replace(Replace(ISNULL(CODIGO_CEST, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',7), 7)	   
				   + LEFT(Rtrim(Replace(Replace(Replace(ISNULL(CLASSIF_FISCAL, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',8), 8)   
                   + left(Rtrim(Replace(Replace(Replace(ISNULL(DESCRICAO_PRODUTO, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ', 50), 50) 
                   + REPLACE(left(Rtrim(Replace(Replace(Replace(ISNULL(DESCRICAO_UNIDADE, ''), '.', ''), '-', ''), '/', '')) 
				   + Replicate(' ', 6), 6), ' ', 
						CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_FILIAL + CNPJ_ESTABELECIMENTO + CODIGO_PRODUTO + 
										DESCRICAO_PRODUTO + DESCRICAO_UNIDADE + Cast(SALDO_ESTOQUE AS VARCHAR)) THEN ' ' ELSE '?' END)
				   + Case When Left(SALDO_ESTOQUE, 1) ='-' Then '-' + 
						RIGHT(Replicate('0', 9) + Rtrim(Replace(Replace(Replace(ISNULL(SALDO_ESTOQUE, 0), '.', ''), '-', ''), '/', '')), 9) 
						Else '+' + RIGHT(Replicate('0', 9) + Rtrim(Replace(Replace(Replace(ISNULL(SALDO_ESTOQUE, 0), '.', ''), '-', ''), '/', '')), 9) End 
				   + Replace(CONVERT(CHAR(8), getdate(), 112), '/', '')	
				   + Replace(CONVERT(CHAR(8), DATA_PAF_NFCE, 112), '/', '')
				   as Registro, 
                   127, 
                   @TERMINAL 
              From   #LJ_ESTOQUE_PAF_NFCe 
              where  CODIGO_FILIAL = @CODIGO_FILIAL
			  and FILTRO_ESTOQUE = 1;
		END
		ELSE
		BEGIN
			INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO, REGISTRO, LIMITE, TERMINAL)
			Select 4 AS TIPO, 
                   'E2' 
                   + RIGHT(Replicate('0', 14) + Rtrim(Replace(Replace(Replace(ISNULL(CNPJ_ESTABELECIMENTO, ''), '.', ''), '-', ''), '/', '')), 14) 
                   + RIGHT(Replicate('0', 14) + LEFT(Rtrim(Replace(Replace(Replace(ISNULL(CODIGO_PRODUTO, ''), '.', ''), '-', ''), '/', '')),14), 14)
				   + LEFT(Rtrim(Replace(Replace(Replace(ISNULL(CODIGO_CEST, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',7), 7)	   
				   + LEFT(Rtrim(Replace(Replace(Replace(ISNULL(CLASSIF_FISCAL, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',8), 8)
                   + left(Rtrim(Replace(Replace(Replace(ISNULL(DESCRICAO_PRODUTO, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ', 50), 50)
				   + REPLACE(left(Rtrim(Replace(Replace(Replace(ISNULL(DESCRICAO_UNIDADE, ''), '.', ''), '-', ''), '/', '')) 
						+ Replicate(' ', 6), 6), ' ',	
                        CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER + CODIGO_FILIAL + CNPJ_ESTABELECIMENTO + CODIGO_PRODUTO + DESCRICAO_PRODUTO + 
									DESCRICAO_UNIDADE + Cast(SALDO_ESTOQUE AS VARCHAR)) THEN ' ' ELSE '?' END)	--	#1#
                   + Case When Left(SALDO_ESTOQUE, 1) = '-' Then 
						'-' + RIGHT(Replicate('0', 9) + Rtrim(Replace(Replace(Replace(ISNULL(SALDO_ESTOQUE, 0), '.', ''), '-', ''), '/', '')), 9) 
				     Else '+' + RIGHT(Replicate('0', 9) + Rtrim(Replace(Replace(Replace(ISNULL(SALDO_ESTOQUE, 0), '.', ''), '-', ''), '/', '')), 9) End 
				   + Replace(CONVERT(CHAR(8), getdate(), 112), '/', '')	
				   + Replace(CONVERT(CHAR(8), DATA_PAF_NFCE, 112), '/', '')
				   as Registro, 
                   127, 
                   @TERMINAL 
             From   #LJ_ESTOQUE_PAF_NFCe
			 where  CODIGO_FILIAL = @CODIGO_FILIAL
			 and FILTRO_ESTOQUE = 1;
		END
	END

	--REGISTRO J1 ------------------------------------------------------------------------------------------------------------------------------------------------------
	Print 'Registro J1'

	INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO, 	REGISTRO, LIMITE, TERMINAL)
	SELECT  28  as TIPO, 
			'J1' 
			+ REPLICATE('0', 14 - LEN(LTRIM(RTRIM(F.CGC_CPF)))) + CAST(LTRIM(RTRIM(F.CGC_CPF)) AS varchar)
			+ Replace(CONVERT(CHAR(8), L.DATA_HORA_EMISSAO, 112), '/', '')
			+ REPLICATE('0', 14 - LEN(REPLACE(L.VALOR_TOTAL_ITENS, '.', ''))) + CAST(REPLACE(L.VALOR_TOTAL_ITENS, '.', '') AS varchar) 
			+ REPLICATE('0', 13 - LEN(REPLACE(L.DESCONTO, '.', ''))) + CAST(REPLACE(L.DESCONTO, '.', '') AS varchar)
			+ 'V' 
			+ REPLICATE('0', 13 - LEN(REPLACE(L.ENCARGO, '.', ''))) + CAST(REPLACE(L.ENCARGO, '.', '') AS varchar) 
			+ 'V' 
			+ REPLICATE('0', 14 - LEN(REPLACE(L.VALOR_TOTAL, '.', ''))) + CAST(REPLACE(L.VALOR_TOTAL, '.', '') AS varchar)
			+ SUBSTRING(RTRIM(CAST(ISNULL(L.TIPO_EMISSAO_NFE,1) AS VARCHAR)),1,1)
			+ REPLICATE('0', 44 -LEN(ISNULL(SUBSTRING(L.CHAVE_NFE, 1, 44), REPLICATE('0', 44)))) + (ISNULL(SUBSTRING(L.CHAVE_NFE, 1, 44), REPLICATE('0', 44)))
			+ REPLICATE('0', 10 - LEN(CAST(LTRIM(RTRIM(L.NF_NUMERO)) AS NUMERIC))) + CAST(CAST(LTRIM(RTRIM(L.NF_NUMERO)) AS NUMERIC) AS VARCHAR)
			+ SUBSTRING(L.SERIE_NF, 1, 3)  
			+ RIGHT(Replicate('0', 14) + Rtrim(Replace(Replace(Replace(ISNULL(C.CPF_CGC, ''), '.', ''), '-', ''), '/', '')), 14) 
			AS REGISTRO,
			152, 
			@TERMINAL
	FROM LOJA_NOTA_FISCAL L
	INNER JOIN SERIES_NF S ON S.SERIE_NF = L.SERIE_NF
	INNER JOIN CTB_ESPECIE_SERIE E ON E.ESPECIE_SERIE = S.ESPECIE_SERIE
	INNER JOIN LOJAS_VAREJO I ON I.CODIGO_FILIAL = L.CODIGO_FILIAL 
	INNER JOIN FILIAIS F ON F.FILIAL = I.FILIAL 
	LEFT JOIN CLIENTES_VAREJO C ON C.CODIGO_CLIENTE = L.CODIGO_CLIENTE -- #12#
	WHERE E.NUMERO_MODELO_FISCAL IN ('65')
	AND L.RECEBIMENTO = 0 --NOTA DE SAÍDA
	AND L.CODIGO_FILIAL = @CODIGO_FILIAL
	AND (L.STATUS_NFE IN (5,49) OR (L.TIPO_EMISSAO_NFE = 9 AND STATUS_NFE = 1 and LOG_STATUS_NFE = 0))  -- #12#
	AND CONVERT(CHAR(8), L.DATA_HORA_EMISSAO, 112) BETWEEN @STRDT_INICIAL AND @STRDT_FINAL
	ORDER BY L.DATA_HORA_EMISSAO, L.NF_NUMERO;

	-- REGISTRO J2 -----------------------------------------------------------------------------------------------------------------------------------------------------
	Print 'Registro J2'
	
	IF Object_id('TEMPDB..#TEMP_J2') IS NOT NULL 
    BEGIN 
        DROP TABLE #TEMP_J2 
    END
	
	
	CREATE TABLE #TEMP_J2(TIPO NUMERIC, 
						NOME_REGISTRO VARCHAR(2) COLLATE DATABASE_DEFAULT,
						TIPO_NOTA VARCHAR(3) COLLATE DATABASE_DEFAULT,
						CNPJ_EMISSOR VARCHAR(14) COLLATE DATABASE_DEFAULT,
						DATA_EMISSAO_DOC VARCHAR(8) COLLATE DATABASE_DEFAULT,
						NUM_ITEM VARCHAR(3) COLLATE DATABASE_DEFAULT,
						COD_PRODUTO VARCHAR(14) COLLATE DATABASE_DEFAULT,
						REFERENCIA VARCHAR(12) COLLATE DATABASE_DEFAULT, 
						COR_PRODUTO VARCHAR(12) COLLATE DATABASE_DEFAULT,
						TAMANHO_PRODUTO VARCHAR(5) COLLATE DATABASE_DEFAULT,
						DESC_PRODUTO VARCHAR(100) COLLATE DATABASE_DEFAULT,
						QTDADE_ITEM VARCHAR(7) COLLATE DATABASE_DEFAULT,
						UNIDADE VARCHAR(3) COLLATE DATABASE_DEFAULT,
						VALOR_UNITARIO VARCHAR(8) COLLATE DATABASE_DEFAULT,
						DESCONTO VARCHAR(8) COLLATE DATABASE_DEFAULT, 
						ACRESCIMO VARCHAR(8) COLLATE DATABASE_DEFAULT,
						VALOR_TOTAL_LIQUIDO VARCHAR(14) COLLATE DATABASE_DEFAULT,
						TAXA_IMPOSTO NUMERIC(10, 2),
						TRIBUT_ICMS NUMERIC,
						NOTA_CANCELADA BIT, 
						TOTALIZADOR VARCHAR(7) COLLATE DATABASE_DEFAULT,
						CASAS_DECIMAIS_QTDADE CHAR(1) COLLATE DATABASE_DEFAULT,
						CADAS_DECIMAIS_VALOR_UNITARIO CHAR(1) COLLATE DATABASE_DEFAULT,
						NUMERO_NF VARCHAR(10) COLLATE DATABASE_DEFAULT, 
						SERIE_NF VARCHAR(3) COLLATE DATABASE_DEFAULT,
						CHAVE_NF VARCHAR(44) COLLATE DATABASE_DEFAULT,
						TIPO_DOCUMENTO CHAR(2) COLLATE DATABASE_DEFAULT, 
						NUM_LINHA NUMERIC, 
						TERMINAL VARCHAR(3) COLLATE DATABASE_DEFAULT)

	
	INSERT INTO  #TEMP_J2 (TIPO , NOME_REGISTRO , TIPO_NOTA ,CNPJ_EMISSOR ,DATA_EMISSAO_DOC ,NUM_ITEM ,	COD_PRODUTO ,
						REFERENCIA, COR_PRODUTO, TAMANHO_PRODUTO , DESC_PRODUTO , QTDADE_ITEM , UNIDADE , VALOR_UNITARIO ,
						DESCONTO , 	ACRESCIMO , VALOR_TOTAL_LIQUIDO , TAXA_IMPOSTO , I.TRIBUT_ICMS, NOTA_CANCELADA,
						TOTALIZADOR , CASAS_DECIMAIS_QTDADE , CADAS_DECIMAIS_VALOR_UNITARIO , NUMERO_NF , SERIE_NF ,
						CHAVE_NF ,	TIPO_DOCUMENTO , NUM_LINHA , TERMINAL )
	(SELECT 29 as TIPO,
		'J2' AS NOME_REGISTRO,
		CASE WHEN E.NUMERO_MODELO_FISCAL = '55' THEN 'COO' ELSE 'NF' END AS TIPO_NOTA,
		REPLICATE('0', 14 - LEN(LTRIM(RTRIM(F.CGC_CPF)))) + CAST(LTRIM(RTRIM(F.CGC_CPF)) AS varchar) AS CNPJ_EMISSOR,
		REPLACE(CONVERT(CHAR(8), L.DATA_HORA_EMISSAO, 112), '/', '') AS DATA_EMISSAO_DOC,
		SUBSTRING(I.ITEM_IMPRESSAO,2, 4) AS NUM_ITEM,
		SUBSTRING(REPLACE(I.CODIGO_ITEM, '.', ''), 1, 14) AS COD_PRODUTO,
		LTRIM(RTRIM(REFERENCIA)) AS REFERENCIA, 
		SUBSTRING(REFERENCIA_ITEM,1, 5) AS COR_PRODUTO,
		LTRIM(RTRIM(SUBSTRING(REFERENCIA_ITEM,6, 10))) AS TAMANHO_PRODUTO, 
		SUBSTRING(LTRIM(RTRIM(I.DESCRICAO_ITEM)), 1, 100) + REPLICATE(' ', 100 - LEN(LTRIM(RTRIM(I.DESCRICAO_ITEM)))) AS DESC_PRODUTO,
		REPLICATE('0', 7 - LEN(REPLACE(I.QTDE_ITEM, '.', ''))) + CAST(REPLACE(I.QTDE_ITEM, '.', '') AS varchar) AS QTDADE_ITEM,
		SUBSTRING(I.UNIDADE,1, 3) AS UNIDADE,
		REPLICATE('0', 8 - LEN( REPLACE(CAST(I.PRECO_UNITARIO AS NUMERIC(10,2)),'.', ''))) + CAST(REPLACE(CAST(I.PRECO_UNITARIO AS NUMERIC(10,2)), '.', '') AS varchar) AS VALOR_UNITARIO,
		REPLICATE('0', 8 - LEN(REPLACE(I.VALOR_DESCONTOS, '.', ''))) + CAST(REPLACE(I.VALOR_DESCONTOS, '.', '') AS varchar) AS DESCONTO,
		REPLICATE('0', 8 - LEN(REPLACE(I.VALOR_ENCARGOS, '.', ''))) + CAST(REPLACE(I.VALOR_ENCARGOS, '.', '') AS VARCHAR) AS ACRESCIMO,
		REPLICATE('0', 14 - LEN(REPLACE(I.VALOR_ITEM, '.', ''))) + CAST(REPLACE(I.VALOR_ITEM, '.', '') AS VARCHAR) AS VALOR_TOTAL_LIQUIDO,
		H.TAXA_IMPOSTO,
		I.TRIBUT_ICMS,
		L.NOTA_CANCELADA, 
		CASE WHEN I.TRIBUT_ICMS = '30' AND L.NOTA_CANCELADA = 0 THEN 'I1'+ REPLICATE(' ', 7 - LEN('I1'))
				WHEN I.TRIBUT_ICMS = '40' AND L.NOTA_CANCELADA = 0 THEN 'I1'+ REPLICATE(' ', 7 - LEN('I1'))
				WHEN I.TRIBUT_ICMS = '41' AND L.NOTA_CANCELADA = 0 THEN 'N1' + REPLICATE(' ', 7 - LEN('N1'))
				WHEN I.TRIBUT_ICMS = '50' AND L.NOTA_CANCELADA = 0 THEN 'N1' + REPLICATE(' ', 7 - LEN('N1'))
				WHEN I.TRIBUT_ICMS = '60' AND L.NOTA_CANCELADA = 0 THEN 'F1' + REPLICATE(' ', 7 - LEN('F1'))
				WHEN I.TRIBUT_ICMS = '103' AND L.NOTA_CANCELADA = 0 THEN 'I1'+ REPLICATE(' ', 7 - LEN('I1'))
				WHEN I.TRIBUT_ICMS = '203' AND L.NOTA_CANCELADA = 0 THEN 'I1'+ REPLICATE(' ', 7 - LEN('I1'))
				WHEN I.TRIBUT_ICMS = '300' AND L.NOTA_CANCELADA = 0 THEN 'I1'+ REPLICATE(' ', 7 - LEN('I1'))
				WHEN I.TRIBUT_ICMS = '400' AND L.NOTA_CANCELADA = 0 THEN 'N1' + REPLICATE(' ', 7 - LEN('N1'))
				WHEN I.TRIBUT_ICMS = '500' AND L.NOTA_CANCELADA = 0 THEN 'F1' + REPLICATE(' ', 7 - LEN('F1'))
				WHEN I.TRIBUT_ICMS = '00'  AND L.NOTA_CANCELADA = 0  AND H.TAXA_IMPOSTO = '0.00' THEN '01T0000'
				WHEN L.NOTA_CANCELADA = 1  THEN 'Can-T' + REPLICATE(' ', 7 - LEN('Can-T'))
		ELSE '' END AS TOTALIZADOR,
		'3' AS CASAS_DECIMAIS_QTDADE,
		'2' AS CADAS_DECIMAIS_VALOR_UNITARIO,
		REPLICATE('0', 10 - LEN(CAST(LTRIM(RTRIM(L.NF_NUMERO)) AS NUMERIC))) + CAST(CAST(LTRIM(RTRIM(L.NF_NUMERO)) AS NUMERIC) AS VARCHAR) AS NUMERO_NF,
		SUBSTRING(L.SERIE_NF, 1, 3) AS SERIE_NF,
		REPLICATE('0', 44 -LEN(ISNULL(SUBSTRING(L.CHAVE_NFE, 1, 44), REPLICATE('0', 44)))) + (ISNULL(SUBSTRING(L.CHAVE_NFE, 1, 44), REPLICATE('0', 44))) AS CHAVE_NF,
		CASE WHEN E.NUMERO_MODELO_FISCAL = '55' THEN '02' ELSE '03' END AS TIPO_DOCUMENTO, --#15#
		256 AS NUM_LINHA,
		@TERMINAL AS TERMINAL					
	FROM LOJA_VENDA O
	INNER JOIN LOJA_VENDA_PGTO P ON P.CODIGO_FILIAL = O.CODIGO_FILIAL AND P.LANCAMENTO_CAIXA = O.LANCAMENTO_CAIXA AND P.TERMINAL = O.TERMINAL
	RIGHT JOIN LOJA_NOTA_FISCAL L ON L.NF_NUMERO = P.NUMERO_FISCAL_VENDA AND L.CODIGO_FILIAL = O.CODIGO_FILIAL AND L.CODIGO_CLIENTE = O.CODIGO_CLIENTE AND L.SERIE_NF = P.SERIE_NF_SAIDA 
	INNER JOIN LOJA_NOTA_FISCAL_ITEM I ON I.NF_NUMERO = L.NF_NUMERO AND I.SERIE_NF = L.SERIE_NF AND I.CODIGO_FILIAL = L.CODIGO_FILIAL
	INNER JOIN SERIES_NF S ON S.SERIE_NF = L.SERIE_NF
	INNER JOIN CTB_ESPECIE_SERIE E ON E.ESPECIE_SERIE = S.ESPECIE_SERIE
	INNER JOIN LOJAS_VAREJO G ON G.CODIGO_FILIAL = L.CODIGO_FILIAL 
	INNER JOIN FILIAIS F ON F.FILIAL = G.FILIAL
	LEFT JOIN CLIENTES_VAREJO C ON C.CODIGO_CLIENTE = L.CODIGO_CLIENTE 
	INNER JOIN LOJA_NOTA_FISCAL_IMPOSTO H ON H.CODIGO_FILIAL = L.CODIGO_FILIAL AND H.SERIE_NF = L.SERIE_NF AND H.NF_NUMERO = L.NF_NUMERO
		and h.ID_IMPOSTO = 1
	WHERE E.NUMERO_MODELO_FISCAL IN ('65')
	AND L.RECEBIMENTO = 0 
	AND L.CODIGO_FILIAL = @CODIGO_FILIAL
	--and L.STATUS_NFE IN (1,5,49) and L.TIPO_EMISSAO_NFE = 9
	AND (L.STATUS_NFE IN (5,49) OR (L.TIPO_EMISSAO_NFE = 9 AND STATUS_NFE = 1 and LOG_STATUS_NFE = 0)) 
	AND L.CODIGO_FILIAL = @CODIGO_FILIAL
	AND CONVERT(CHAR(8), L.DATA_HORA_EMISSAO, 112) BETWEEN @STRDT_INICIAL AND @STRDT_FINAL);

	INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO, REGISTRO, LIMITE, TERMINAL)
	SELECT J.TIPO,
			J.NOME_REGISTRO
			+ J.CNPJ_EMISSOR
			+ J.DATA_EMISSAO_DOC
			+ J.NUM_ITEM
			+ CASE WHEN S.CODIGO_BARRA COLLATE DATABASE_DEFAULT  IS NULL THEN J.COD_PRODUTO COLLATE DATABASE_DEFAULT 
				ELSE LEFT(Rtrim(Replace(Replace(Replace(ISNULL(S.CODIGO_BARRA, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',14), 14)	
			END
			+ LEFT(Rtrim(Replace(Replace(Replace(ISNULL(J.DESC_PRODUTO, ''), '.', ''), '-', ''), '/', '')) + Replicate(' ',100), 100)
			+ J.QTDADE_ITEM
			+ J.UNIDADE
			+ J.VALOR_UNITARIO
			+ J.DESCONTO
			+ J.ACRESCIMO
			+ J.VALOR_TOTAL_LIQUIDO
			+ J.TOTALIZADOR
			+ J.CASAS_DECIMAIS_QTDADE
			+ J.CADAS_DECIMAIS_VALOR_UNITARIO
			+ J.NUMERO_NF
			+ J.SERIE_NF
			+ J.CHAVE_NF
			AS REGISTRO, 
			J.NUM_LINHA,
			J.TERMINAL
	FROM #TEMP_J2 J
	LEFT JOIN #PRODUTOSP2 S ON LTRIM(RTRIM(S.PRODUTO)) COLLATE DATABASE_DEFAULT  = RTRIM(LTRIM(J.REFERENCIA)) COLLATE DATABASE_DEFAULT 
	AND S.COR_PRODUTO COLLATE DATABASE_DEFAULT = J.COR_PRODUTO COLLATE DATABASE_DEFAULT 
	AND S.GRADE COLLATE DATABASE_DEFAULT = J.TAMANHO_PRODUTO COLLATE DATABASE_DEFAULT 
	ORDER BY J.DATA_EMISSAO_DOC, J.NUMERO_NF;


	-- REGISTRO D2 -----------------------------------------------------------------------------------------------------------------------------------------------------
	Print 'Registro	D2'
	
	IF Object_id('TEMPDB..#TEMP_D2') IS NOT NULL 
    BEGIN 
        DROP TABLE #TEMP_D2 
    END

	CREATE TABLE #TEMP_D2(  TIPO_DE_REGISTRO	VARCHAR(2) COLLATE DATABASE_DEFAULT,
							CNPJ				VARCHAR(14) COLLATE DATABASE_DEFAULT,
							NUMERO_DO_DAV		VARCHAR(13) COLLATE DATABASE_DEFAULT,
							DATA_DO_DAV			CHAR(8) COLLATE DATABASE_DEFAULT,
							TITULO_DAV			VARCHAR(30) COLLATE DATABASE_DEFAULT,
							VALOR_TOTAL_DAV     NUMERIC(14,2),
							NOME_DO_ADQUIRENTE	VARCHAR(100) COLLATE DATABASE_DEFAULT,
							CPF_CNPJ_ADQUIRENTE VARCHAR (14) COLLATE DATABASE_DEFAULT);

	INSERT INTO #TEMP_D2 (TIPO_DE_REGISTRO,  CNPJ, NUMERO_DO_DAV, DATA_DO_DAV, TITULO_DAV, VALOR_TOTAL_DAV, NOME_DO_ADQUIRENTE,CPF_CNPJ_ADQUIRENTE) 
	SELECT 
	   CASE A.LX_TIPO_PRE_VENDA WHEN 2 THEN 'D2' END AS TIPO_DE_REGISTRO,	
			A.CNPJ_ESTABELECIMENTO AS CNPJ,
			A.SEQUENCIAL_PRE_VENDA AS NUMERO_DO_DAV, 
			CONVERT(CHAR(8), A.DATA, 112) AS DATA_DO_DAV,	   	
			A.TITULO_DAV,
			B.VALOR  AS VALOR_TOTAL_DAV,
	        A.IDENTIFICACAO_CLIENTE AS NOME_DO_ADQUIRENTE, 
	        C.CPF_CGC AS CPF_CNPJ_ADQUIRENTE	   
	   FROM LOJA_PEDIDO AS A
	   INNER JOIN LOJA_PEDIDO_PGTO AS B ON B.PEDIDO = A.PEDIDO AND B.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL_ORIGEM
	   INNER JOIN CLIENTES_VAREJO C ON A.CODIGO_CLIENTE = C.CODIGO_CLIENTE
	   WHERE A.LX_TIPO_PRE_VENDA = '2' AND CONVERT(CHAR(8), A.DATA, 112) BETWEEN @strDT_INICIAL AND @strDT_FINAL;
	   
	INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO, REGISTRO, LIMITE, TERMINAL)
	SELECT 6  AS TIPO,                                                                                                                   
             'D2' 	
			+ RIGHT(Replicate('0', 14) + Rtrim(Replace(Replace(Replace(ISNULL(D2.CNPJ , ''), '.', ''), '-', ''), '/', '')), 14)
			+ RIGHT(Replicate(' ', 13) + ISNULL(D2.NUMERO_DO_DAV,''), 13) 
			+ DATA_DO_DAV
			+ RIGHT(Replicate(' ', 30) + ISNULL(D2.TITULO_DAV,''), 30)
			+ REPLICATE('0', 08 - LEN(REPLACE(D2.VALOR_TOTAL_DAV, '.', ''))) + CAST(REPLACE(D2.VALOR_TOTAL_DAV, '.', '') AS VARCHAR) +
			+ ISNULL(D2.NOME_DO_ADQUIRENTE,'')
			+ ISNULL(D2.CPF_CNPJ_ADQUIRENTE,'') AS REGISTRO, 
			129 AS NUM_LINHA,
			@TERMINAL AS TERMINAL
	FROM #TEMP_D2 D2
	ORDER BY D2.DATA_DO_DAV;
	
	-- REGISTRO D3 ----------------------------------------------------------------------------------------------------------------------------------------------------
	Print 'Registro	D3'
	
	IF Object_id('TEMPDB..#TEMP_D3') IS NOT NULL 
    BEGIN 
        DROP TABLE #TEMP_D3 
    END

	CREATE TABLE #TEMP_D3 ( TIPO_DE_REGISTRO	CHAR(02) COLLATE DATABASE_DEFAULT,
							NUMERO_DO_DAV		VARCHAR(13) COLLATE DATABASE_DEFAULT,
							DATA_DO_DAV			DATE,
							NUMERO_DO_ITEM		INT,
							CODIGO_PRODUTO		CHAR (12) COLLATE DATABASE_DEFAULT,
							DESCR_PRODUTO		VARCHAR(100) COLLATE DATABASE_DEFAULT,
							QTDE				INT,      
							UNIDADE				CHAR(3) COLLATE DATABASE_DEFAULT,
							PRECO_LIQUIDO		numeric(14,2),                        
							DESCONTO			numeric(14,2),                         
							ACRESCIMO			numeric(14,2),                         
							ALIQUOTA			VARCHAR(05) COLLATE DATABASE_DEFAULT,                               
							INDICADOR_DE_CANCELAMENTO CHAR(1) COLLATE DATABASE_DEFAULT,
							CASAS_DECIMAIS_DA_QUANTIDADE CHAR(1) COLLATE DATABASE_DEFAULT,
							CASAS_DECIMAIS_DE_VALOR_UNITARIO CHAR(1) COLLATE DATABASE_DEFAULT,
							VALOR_TOTAL_LIQUIDO numeric(14,2),
							LX_HASH				varbinary (16),
						    LX_HASH2			varbinary (16)
							)
	
	INSERT INTO #TEMP_D3 (TIPO_DE_REGISTRO, NUMERO_DO_DAV, DATA_DO_DAV, NUMERO_DO_ITEM, CODIGO_PRODUTO, DESCR_PRODUTO, QTDE, UNIDADE, 
	  PRECO_LIQUIDO, DESCONTO, ACRESCIMO, INDICADOR_DE_CANCELAMENTO, CASAS_DECIMAIS_DA_QUANTIDADE, CASAS_DECIMAIS_DE_VALOR_UNITARIO, 
	  VALOR_TOTAL_LIQUIDO, LX_HASH, LX_HASH2) 
	SELECT	CASE A.LX_TIPO_PRE_VENDA WHEN 2 THEN 'D3' END	AS TIPO_DE_REGISTRO,	
			A.SEQUENCIAL_PRE_VENDA AS NUMERO_DO_DAV,
			CONVERT (VARCHAR(10), CONVERT(DATETIME, A.data, 103), 102) AS DATA_DO_DAV,
			B.ITEM AS NUMERO_DO_ITEM,
			B.PRODUTO AS CODIGO_PRODUTO,
			B.DESCR_PRODUTO,
			B.QTDE,
			B.UNIDADE,
			B.PRECO_LIQUIDO + B.DESCONTO_ITEM,
			CASE WHEN B.DESCONTO_ITEM LIKE '-%' THEN 0 ELSE B.DESCONTO_ITEM END AS DESCONTO,
			CASE WHEN B.DESCONTO_ITEM LIKE '-%' THEN (B.DESCONTO_ITEM * (-1)) ELSE 0 END AS ACRESCIMO,
			CASE B.CANCELADO WHEN 1 THEN 'S' ELSE 'N' END AS INDICADOR_DE_CANCELAMENTO,
			'0' AS CASAS_DECIMAIS_DA_QUANTIDADE,
			'2' AS CASAS_DECIMAIS_DE_VALOR_UNITARIO,
			(B.PRECO_LIQUIDO * B.QTDE) AS VALOR_TOTAL_LIQUIDO,
			B.LX_HASH,
			HASHBYTES('MD5', @BUILD_BUFFER + B.CODIGO_FILIAL_ORIGEM + CAST(B.PEDIDO AS VARCHAR) + CAST(ITEM AS VARCHAR) + 
				CONVERT(VARCHAR, ISNULL(DATA_INCLUSAO, 0), 126) + B.CODIGO_BARRA + ISNULL(B.DESCR_PRODUTO,'') + CAST(ISNULL(B.QTDE, 0) AS VARCHAR) + 
				ISNULL(B.UNIDADE, '') + CAST(ISNULL(B.PRECO_LIQUIDO, 0) AS VARCHAR) + CAST(ISNULL(B.DESCONTO_ITEM, 0) AS VARCHAR) + 
				ISNULL(B.SITUACAO_TRIBUTARIA, '') + CAST(ISNULL(B.ALIQUOTA, 0) AS VARCHAR) + CAST(B.CANCELADO AS VARCHAR) + 
				CAST(ISNULL(B.DECIMAIS_QTDE, 0) AS VARCHAR) + CAST(ISNULL(B.DECIMAIS_PREC_UNIT, 2) AS VARCHAR)) AS LX_HASH2
	FROM LOJA_PEDIDO AS A
	INNER JOIN LOJA_PEDIDO_PRODUTO B ON A.PEDIDO = B.PEDIDO
	INNER JOIN CLIENTES_VAREJO C ON A.CODIGO_CLIENTE = C.CODIGO_CLIENTE
	WHERE CONVERT(CHAR(8), A.data, 112) BETWEEN @strDT_INICIAL AND @strDT_FINAL
	and a.LX_TIPO_PRE_VENDA = 2;
	       
	-- UPDATE PARA ALIQUOTA REGRA EXCESSAO
	UPDATE #TEMP_D3 SET 
		ALIQUOTA = case 
					when A.TRIBUT_ICMS in ('40','103') then 'I'
					when A.TRIBUT_ICMS in ('41','300','400') then 'N'
					when A.TRIBUT_ICMS in ('60','500') then 'F'
					when A.TRIBUT_ICMS in ('00','20','90','101','103','900') then 'T'
					else 'S' end 	
					+
					RIGHT(Replicate('0', 4) + CONVERT(VARCHAR(4), CONVERT(INT, A.TAXA_IMPOSTO * 100)), 4) 
	FROM #LJ_PROD_ICMS_PAF_NFCE A
	INNER JOIN #TEMP_D3 AS C ON C.CODIGO_PRODUTO = A.PRODUTO	
	WHERE A.CODIGO_FILIAL = @CODIGO_FILIAL

		
	-- UPDATE PARA ALIQUOTA PADRAO
	SELECT @DATEICMS = a.DATA_PAF_NFCE, 
			@ALIQUOTAPADRAO = (
				case when A.TRIBUT_ICMS in ('40','103') then 'I'
				 when A.TRIBUT_ICMS in ('41','300','400') then 'N'
				 when A.TRIBUT_ICMS in ('60','500') then 'F'
				 when A.TRIBUT_ICMS in ('00','20','90','101','103','900') then 'T'
			else 'S' end			
			+
			RIGHT(Replicate('0', 4) + CONVERT(VARCHAR(04), CONVERT(INT, A.TAXA_IMPOSTO * 100)), 4))		       
	FROM #LJ_PROD_ICMS_PAF_NFCE a 
	where A.produto is null AND A.CODIGO_FILIAL = @CODIGO_FILIAL

	UPDATE #TEMP_D3 SET 
			ALIQUOTA = @ALIQUOTAPADRAO
	where ALIQUOTA is null

   	INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO, REGISTRO, LIMITE, TERMINAL)
	SELECT 7 as TIPO,   
           'D3'
		   + RIGHT(Replicate('0', 13) + Rtrim(Ltrim(ISNULL(D3.NUMERO_DO_DAV, '0'))), 13) 
		   + Replace(CONVERT(CHAR(8), D3.DATA_DO_DAV, 112), '/', '')
		   + RIGHT(Replicate('0', 3) + ISNULL(CONVERT(VARCHAR, D3.NUMERO_DO_ITEM), '0'), 3)
		   + LEFT(Rtrim(D3.CODIGO_PRODUTO) + Replicate(' ', 14) , 14)
		   + REPLACE(LEFT(Rtrim(ISNULL(D3.DESCR_PRODUTO,'')) + Replicate(' ', 100) , 100), ' ', CASE WHEN LX_HASH = LX_HASH2 THEN ' ' ELSE '?' END) + 
		   + RIGHT(Replicate('0', 7) + CONVERT(VARCHAR(07), ISNULL(D3.QTDE,0)), 7)
		   + LEFT(Rtrim(D3.UNIDADE) + Replicate(' ', 3) , 3)
		   + RIGHT(Replicate('0', 8) + ISNULL(CONVERT(VARCHAR(08), CONVERT(INT, D3.PRECO_LIQUIDO * 100)), '0'), 8)
		   + RIGHT(Replicate('0', 8) + ISNULL(CONVERT(VARCHAR(08), CONVERT(INT, D3.DESCONTO * 100)), '0'), 8)
		   + RIGHT(Replicate('0', 8) + ISNULL(CONVERT(VARCHAR(08), CONVERT(INT, D3.ACRESCIMO * 100)), '0'), 8)
		   + RIGHT(Replicate('0', 14) + ISNULL(CONVERT(VARCHAR(14), CONVERT(INT, D3.VALOR_TOTAL_LIQUIDO * 100)), '0'), 14)
		   + LEFT(Rtrim(D3.ALIQUOTA) + Replicate(' ', 5) , 5)
		   + ISNULL(D3.INDICADOR_DE_CANCELAMENTO,' ')
		   + ISNULL(D3.CASAS_DECIMAIS_DA_QUANTIDADE,'0')
		   + ISNULL(D3.CASAS_DECIMAIS_DE_VALOR_UNITARIO,'2') AS REGISTRO, 
			196 AS NUM_LINHA,
			@TERMINAL AS TERMINAL
	FROM #TEMP_D3 D3
	ORDER BY D3.DATA_DO_DAV;



	-- REGISTRO D4 ----------------------------------------------------------------------------------------------------------------------------------------------------
	Print 'Registro	D4'

	IF Object_id('TEMPDB..#TEMP_D4') IS NOT NULL 
    BEGIN 
        DROP TABLE #TEMP_D4 
    END

	CREATE TABLE #TEMP_D4 (NUMERO_DO_DAV					VARCHAR(13) COLLATE DATABASE_DEFAULT,
						   DATA_DE_ALTERACAO				DATE,
						   HORA_DE_ALTERACAO				TIME,
						   PRODUTO							VARCHAR(14) COLLATE DATABASE_DEFAULT,  
						   DESCR_PRODUTO					VARCHAR(100) COLLATE DATABASE_DEFAULT,
						   QTDE								INT,     
						   UNIDADE							CHAR(03),
						   PRECO_LIQUIDO					NUMERIC(14,2),   
						   DESCONTO							NUMERIC(14,2),                         
						   ACRESCIMO						NUMERIC(14,2),
						   VALOR_TOTAL_LIQUIDO				NUMERIC(14,2),
						   ALIQUOTA							CHAR(05) COLLATE DATABASE_DEFAULT,                   
						   INDICADOR_DE_CANCELAMENTO		CHAR(01) COLLATE DATABASE_DEFAULT,
						   CASAS_DECIMAIS_DA_QUANTIDADE		CHAR(01) COLLATE DATABASE_DEFAULT,
						   CASAS_DECIMAIS_DE_VALOR_UNITARIO CHAR(01) COLLATE DATABASE_DEFAULT,
						   TIPO_ALTERACAO					CHAR(01) COLLATE DATABASE_DEFAULT,
						   LX_HASH							varbinary (16),
						   LX_HASH2							varbinary (16)
						   )
	
	INSERT INTO #TEMP_D4 (NUMERO_DO_DAV, DATA_DE_ALTERACAO, HORA_DE_ALTERACAO, PRODUTO, DESCR_PRODUTO, QTDE, UNIDADE, PRECO_LIQUIDO, DESCONTO, 
		ACRESCIMO, VALOR_TOTAL_LIQUIDO, INDICADOR_DE_CANCELAMENTO, CASAS_DECIMAIS_DA_QUANTIDADE, CASAS_DECIMAIS_DE_VALOR_UNITARIO, TIPO_ALTERACAO, 
		LX_HASH, LX_HASH2)  
	SELECT	B.NUMERO_DO_DAV, B.DATA_DE_ALTERACAO, B.HORA_DE_ALTERACAO, b.CODIGO_BARRA, B.DESCR_PRODUTO, B.QTDE, B.UNIDADE, B.PRECO_LIQUIDO,
		B.DESCONTO, B.ACRESCIMO, B.VALOR_TOTAL_LIQUIDO, B.INDICADOR_DE_CANCELAMENTO, B.CASAS_DECIMAIS_DA_QUANTIDADE, B.CASAS_DECIMAIS_DE_VALOR_UNITARIO,
		B.TIPO_ALTERACAO, B.LX_HASH, b.LX_HASH2
	FROM (
		SELECT 	A.SEQUENCIAL_PRE_VENDA AS NUMERO_DO_DAV, 			
				B.DATA_HORA_ALTERACAO AS DATA_DE_ALTERACAO,
				CONVERT(time(0), B.DATA_HORA_ALTERACAO) AS HORA_DE_ALTERACAO,
				b.CODIGO_BARRA,
				B.DESCR_PRODUTO,
				B.QTDE,
				B.UNIDADE,
				C.PRECO_LIQUIDO,
				CASE WHEN B.DESCONTO_ITEM LIKE '-%' THEN 0 ELSE B.DESCONTO_ITEM END AS DESCONTO,
				CASE WHEN B.DESCONTO_ITEM LIKE '-%' THEN (B.DESCONTO_ITEM * (-1)) ELSE 0 END AS ACRESCIMO,
				(B.PRECO_LIQUIDO * B.QTDE) AS VALOR_TOTAL_LIQUIDO,
				CASE WHEN B.CANCELADO = 1 THEN 'S' ELSE 'N' END	AS INDICADOR_DE_CANCELAMENTO,
				CAST(b.DECIMAIS_QTDE AS VARCHAR) AS CASAS_DECIMAIS_DA_QUANTIDADE,
				CAST(B.DECIMAIS_PREC_UNIT AS VARCHAR) AS CASAS_DECIMAIS_DE_VALOR_UNITARIO,
				B.TIPO_ALTERACAO,
				case when B.TIPO_ALTERACAO = 'I' THEN 1
					 WHEN B.TIPO_ALTERACAO = 'A' THEN 2
				ELSE 3 END ORDENACAO,
				row_number() over (PARTITION BY A.SEQUENCIAL_PRE_VENDA, b.CODIGO_BARRA, B.TIPO_ALTERACAO order by B.DATA_HORA_ALTERACAO desc, b.CODIGO_BARRA, B.TIPO_ALTERACAO desc) as [CONTADOR],
				B.LX_HASH,
				HASHBYTES('MD5', @BUILD_BUFFER + B.CODIGO_FILIAL_ORIGEM + B.SEQUENCIAL_PRE_VENDA + 
								CONVERT(VARCHAR, DATA_HORA_ALTERACAO, 126) + B.CODIGO_BARRA + B.DESCR_PRODUTO + CAST(B.QTDE AS VARCHAR) + B.UNIDADE + 
								CAST(B.PRECO_LIQUIDO AS VARCHAR) + CAST(B.DESCONTO_ITEM AS VARCHAR) + B.SITUACAO_TRIBUTARIA + CAST(B.ALIQUOTA AS VARCHAR) + 
								CAST(B.CANCELADO AS VARCHAR) + CAST(B.DECIMAIS_QTDE AS VARCHAR) + CAST(B.DECIMAIS_PREC_UNIT AS VARCHAR) + TIPO_ALTERACAO) AS LX_HASH2
		FROM LOJA_PEDIDO_PRODUTO_LOG AS B
		INNER JOIN LOJA_PEDIDO AS A ON A.SEQUENCIAL_PRE_VENDA = B.SEQUENCIAL_PRE_VENDA
		INNER JOIN CLIENTES_VAREJO D ON A.CODIGO_CLIENTE = D.CODIGO_CLIENTE
		LEFT JOIN LOJA_PEDIDO_PRODUTO AS C ON A.PEDIDO = C.PEDIDO AND C.CODIGO_BARRA = B.CODIGO_BARRA
		WHERE A.LX_TIPO_PRE_VENDA = 2
		and CONVERT(CHAR(8),  B.DATA_HORA_ALTERACAO, 112) BETWEEN @strDT_INICIAL AND @strDT_FINAL
	) b
	where b.CONTADOR = 1
	order by NUMERO_DO_DAV, ORDENACAO


	-- UPDATE PARA ALIQUOTA REGRA EXCESSAO
	   UPDATE #TEMP_D4 SET 
			ALIQUOTA =
					case when A.TRIBUT_ICMS in ('40','103') then 'I'
						 when A.TRIBUT_ICMS in ('41','300','400') then 'N'
						 when A.TRIBUT_ICMS in ('60','500') then 'F'
						 when A.TRIBUT_ICMS in ('00','20','90','101','103','900') then 'T'
					else 'S' end 	
					+
					RIGHT(Replicate('0', 4) + CONVERT(VARCHAR, CONVERT(INT, A.TAXA_IMPOSTO * 100)), 4) 
	    FROM #LJ_PROD_ICMS_PAF_NFCE A
		INNER JOIN #TEMP_D3 AS C ON C.CODIGO_PRODUTO = A.PRODUTO	
		WHERE A.CODIGO_FILIAL = @CODIGO_FILIAL

		-- UPDATE PARA ALIQUOTA PADRAO

		SELECT @DATEICMS = a.DATA_PAF_NFCE, 
			@ALIQUOTAPADRAO = (
				case when A.TRIBUT_ICMS in ('40','103') then 'I'
				 when A.TRIBUT_ICMS in ('41','300','400') then 'N'
				 when A.TRIBUT_ICMS in ('60','500') then 'F'
				 when A.TRIBUT_ICMS in ('00','20','90','101','103','900') then 'T'
			else 'S' end			
			+
			RIGHT(Replicate('0', 4) + CONVERT(VARCHAR, CONVERT(INT, A.TAXA_IMPOSTO * 100)), 4))		       
		FROM #LJ_PROD_ICMS_PAF_NFCE a 
		where A.produto is null AND A.CODIGO_FILIAL = @CODIGO_FILIAL

		print cast(@ALIQUOTAPADRAO as varchar(10)) + ' - ' +convert(char(10), @DATEICMS, 112)

		UPDATE #TEMP_D4 SET 
			ALIQUOTA = @ALIQUOTAPADRAO
		where ALIQUOTA is null;

	INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO, REGISTRO, LIMITE, TERMINAL)
	SELECT 8 as TIPO,   
          'D4'   
		  + RIGHT(Replicate('0', 13) + Rtrim(Ltrim(ISNULL(D4.NUMERO_DO_DAV, '0'))), 13) 
		  + CONVERT(CHAR(8), D4.DATA_DE_ALTERACAO, 112) 
		  + Replace( CONVERT(CHAR(8), D4.HORA_DE_ALTERACAO, 108), ':', '') 
		  + LEFT(Rtrim(D4.PRODUTO) + Replicate(' ', 14) , 14)
		  + REPLACE(LEFT(Rtrim(ISNULL(D4.DESCR_PRODUTO,'')) + Replicate(' ', 100) , 100), ' ', CASE WHEN LX_HASH = LX_HASH2 THEN ' ' ELSE '?' END) + 
		  + RIGHT(Replicate('0', 7) + CONVERT(VARCHAR(07), ISNULL(D4.QTDE,0)), 7)
		  + LEFT(Rtrim(D4.UNIDADE) + Replicate(' ', 3) , 3)
		  + RIGHT(Replicate('0', 8) + ISNULL(CONVERT(VARCHAR(08), CONVERT(INT, D4.PRECO_LIQUIDO * 100)), '0'), 8)
		  + RIGHT(Replicate('0', 8) + ISNULL(CONVERT(VARCHAR(08), CONVERT(INT, D4.DESCONTO * 100)), '0'), 8)
		  + RIGHT(Replicate('0', 8) + ISNULL(CONVERT(VARCHAR(08), CONVERT(INT, D4.ACRESCIMO * 100)), '0'), 8)
		  + RIGHT(Replicate('0', 14) + ISNULL(CONVERT(VARCHAR(14), CONVERT(INT, D4.VALOR_TOTAL_LIQUIDO * 100)), '0'), 14)
		  + LEFT(Rtrim(D4.ALIQUOTA) + Replicate(' ', 5) , 5)
		  + ISNULL(D4.INDICADOR_DE_CANCELAMENTO,' ')
		  + ISNULL(D4.CASAS_DECIMAIS_DA_QUANTIDADE,'0')
		  + ISNULL(D4.CASAS_DECIMAIS_DE_VALOR_UNITARIO,'2')
		  + D4.TIPO_ALTERACAO AS REGISTRO, 
		  200 AS NUM_LINHA,
		  @TERMINAL AS TERMINAL
	FROM #TEMP_D4 D4
	ORDER BY D4.DATA_DE_ALTERACAO;

	-----VERIFICA SE AS LINHAS DA TABELA LJ_TABELAS_PAF SÃO CONFIAVEIS CASO NAO SEJA JA COLOCA ? -----------------------------------------------------------------------
	SET @faltaLinha = ''
	
	SELECT @faltaLinha = CASE WHEN LX_HASH = HASHBYTES('MD5', @BUILD_BUFFER +  CODIGO_FILIAL + 	NOME_TABELA + CAST(QTDE_LINHAS AS VARCHAR)) THEN '' ELSE  '?' END 
	FROM LJ_TABELAS_PAF

	--REGISTRO A2 - Validação
	IF @faltaLinha = ''
	BEGIN 
		if exists (select * from LJ_REG_PAF_ECF_TEMP where left(registro,2) = 'A2')
        begin 
			 SELECT @faltaLinha = case when ((select count(*) from LOJA_NOTA_FISCAL_PAGAMENTO WHERE CODIGO_FILIAL = @CODIGO_FILIAL ) <> 
						(SELECT QTDE_LINHAS FROM LJ_TABELAS_PAF WHERE NOME_TABELA = 'LOJA_NOTA_FISCAL_PAGAMENTO' AND CODIGO_FILIAL = @CODIGO_FILIAL)) 
					THEN '?' ELSE '' END 
			
			 IF @faltaLinha = ''
			 BEGIN 
			    SELECT @faltaLinha = case when ((select count(*) from LOJA_NOTA_FISCAL WHERE CODIGO_FILIAL = @CODIGO_FILIAL  ) <> 
						(SELECT QTDE_LINHAS FROM LJ_TABELAS_PAF WHERE NOME_TABELA = 'LOJA_NOTA_FISCAL' AND CODIGO_FILIAL = @CODIGO_FILIAL)) 
					THEN '?' ELSE '' END 
			 end 
        END  
    END 

	--REGISTRO P2 - Validação
	if exists (select * from LJ_REG_PAF_ECF_TEMP where left(registro,2) = 'P2')
	BEGIN 
		IF @faltaLinha = ''
			BEGIN 
				SELECT @faltaLinha = 
					case when ((select count(*) from PRODUTOS) <> (SELECT QTDE_LINHAS FROM LJ_TABELAS_PAF WHERE NOME_TABELA = 'PRODUTOS' )) THEN '?' ELSE ''
			END 
        END
				
		IF @faltaLinha = ''
		BEGIN  
			SELECT @faltaLinha = 
					case when ((select count(*) from CLASSIF_FISCAL_IMPOSTO WHERE CODIGO_FILIAL = @CODIGO_FILIAL) <> 
								(SELECT QTDE_LINHAS FROM LJ_TABELAS_PAF WHERE NOME_TABELA = 'CLASSIF_FISCAL_IMPOSTO' AND CODIGO_FILIAL = @CODIGO_FILIAL)) 
			THEN '?' ELSE '' END	--	#3#
		END 

		IF @faltaLinha = ''
		BEGIN 
			SELECT @faltaLinha = 
					case when ((select count(*) from PRODUTO_CORES) <> (SELECT QTDE_LINHAS FROM LJ_TABELAS_PAF 
					WHERE NOME_TABELA = 'PRODUTO_CORES' AND CODIGO_FILIAL = @CODIGO_FILIAL)) THEN '?' ELSE '' END 
        END 

		IF @faltaLinha = ''
		BEGIN 
			SELECT @faltaLinha = 
					case when ((select count(*) from PRODUTOS_PRECOS) <> (SELECT QTDE_LINHAS FROM LJ_TABELAS_PAF 
					WHERE NOME_TABELA = 'PRODUTOS_PRECOS' AND CODIGO_FILIAL = @CODIGO_FILIAL)) THEN '?' ELSE '' END 
		END 

		IF @faltaLinha = ''
		BEGIN 
			SELECT @faltaLinha = 
					case when ((select count(*) from PRODUTOS_PRECO_COR) <> (SELECT QTDE_LINHAS FROM LJ_TABELAS_PAF 
					WHERE NOME_TABELA = 'PRODUTOS_PRECO_COR' AND CODIGO_FILIAL = @CODIGO_FILIAL)) THEN '?' ELSE '' END 
		END 

		IF @faltaLinha = ''
		BEGIN 
			SELECT @faltaLinha = 
					case when ((select count(*) from PRODUTOS_PRECO_FILIAL) <> (SELECT QTDE_LINHAS FROM LJ_TABELAS_PAF 
					WHERE NOME_TABELA = 'PRODUTOS_PRECO_FILIAL' AND CODIGO_FILIAL = @CODIGO_FILIAL)) THEN '?' ELSE '' END 
		END
	END 

	
	--REGISTRO E2 - Validação
	IF @faltaLinha = ''
	BEGIN 
		if exists (select * from LJ_REG_PAF_ECF_TEMP where left(registro,2) = 'E2')
		BEGIN 
			SELECT @faltaLinha = 
					case when ((select count(*) from LJ_ESTOQUE_PAF_NFCE WHERE CODIGO_FILIAL = @CODIGO_FILIAL ) <> (SELECT QTDE_LINHAS FROM LJ_TABELAS_PAF WHERE NOME_TABELA = 'LJ_ESTOQUE_PAF_NFCE' AND CODIGO_FILIAL = @CODIGO_FILIAL)) THEN '?' ELSE '' END 
		END 
	end 
	
	--REGISTRO J1 - Validação
	IF @faltaLinha = ''
	begin 
		CREATE TABLE #TEMP_SERIES (ID INT, SERIE_NF CHAR(3))

		INSERT INTO #TEMP_SERIES(SERIE_NF, ID)
				(SELECT X.SERIE_NF, (ROW_NUMBER() over (order by X.SERIE_NF)) AS ID
					FROM 
					(SELECT DISTINCT L.SERIE_NF 
						FROM LOJA_NOTA_FISCAL L
						WHERE CONVERT(CHAR(8), L.DATA_HORA_EMISSAO, 112) BETWEEN @strDT_INICIAL AND @strDT_FINAL
						AND L.CODIGO_FILIAL = @CODIGO_FILIAL) X)

		DECLARE @I INT,
			@TOTAL_SERIE INT,
			@J INT, 
			@Z INT,
			@TOTAL_NF INT,
			@RESULT INT,
			@SEQUENCIAL VARCHAR(12),
			@MAX_NF VARCHAR(12),
			@bContinue bit 

		SET @bContinue = 1
		SET @RESULT = 0
		SET @Z = 2
		SET @J = 1
		SET @I = 1
		SET @TOTAL_SERIE = (SELECT COUNT(*) FROM  #TEMP_SERIES)

		WHILE ((@I <= @TOTAL_SERIE) AND @bContinue = 1)
		begin
			CREATE TABLE #TEMP_SERIE_NF(ID INT, SERIE_NF CHAR(3), NF_NUMERO VARCHAR(12))

			INSERT INTO #TEMP_SERIE_NF(ID, SERIE_NF, NF_NUMERO)
				(SELECT DISTINCT (ROW_NUMBER() over (order by L.SERIE_NF)) AS ID,
							L.SERIE_NF, 
							L.NF_NUMERO
					FROM LOJA_NOTA_FISCAL L
					WHERE CONVERT(CHAR(8), L.DATA_HORA_EMISSAO, 112) BETWEEN @strDT_INICIAL AND @strDT_FINAL
					AND L.CODIGO_FILIAL = @CODIGO_FILIAL
					AND L.SERIE_NF = (SELECT SERIE_NF FROM #TEMP_SERIES WHERE ID = @I) )

			CREATE TABLE #TEMP_SERIES_FILIAL (SERIES CHAR(3), SEQUENCIAL VARCHAR(12), FILIAL VARCHAR(30), CODIGO_FILIAL VARCHAR(6))
			INSERT INTO #TEMP_SERIES_FILIAL (SERIES, SEQUENCIAL, FILIAL, CODIGO_FILIAL)
				(SELECT F.SERIE_NF, 
					F.SEQUENCIAL, 
					F.FILIAL, 
					L.CODIGO_FILIAL
				FROM DBO.FATURAMENTO_SEQUENCIAIS F
				INNER JOIN DBO.LOJAS_VAREJO L ON L.FILIAL = F.FILIAL 
				WHERE L.CODIGO_FILIAL = @CODIGO_FILIAL
				AND F.SERIE_NF = (SELECT SERIE_NF FROM #TEMP_SERIES WHERE ID = @I) )

			SET @SEQUENCIAL = (SELECT SEQUENCIAL FROM #TEMP_SERIES_FILIAL)
			SET @MAX_NF = (SELECT MAX(SERIE_NF) FROM #TEMP_SERIE_NF)	
			SET @TOTAL_NF = (SELECT COUNT(*) FROM #TEMP_SERIE_NF)

			IF @SEQUENCIAL <> @MAX_NF
			BEGIN
				SET @bContinue = 0
				SET @faltaLinha = '?'
			END

			WHILE ((@J <= @TOTAL_NF) and @bContinue = 1)
			BEGIN					
				(SELECT @RESULT = SUM(K.NF_NUMERO_Z - K.NF_NUMERO_J) 
					FROM
					(SELECT CONVERT ( INT, F.NF_NUMERO) AS NF_NUMERO_J,
						(SELECT CONVERT(INT, F.NF_NUMERO)
							FROM #TEMP_SERIE_NF F 
							WHERE ID = @Z) AS NF_NUMERO_Z
							FROM #TEMP_SERIE_NF F 
					WHERE ID = @J) K)
					
				IF @RESULT > 1
				BEGIN
					SET @bContinue = 0
					SET @faltaLinha = '?'
				END
						
				SET @J = @J+1
				SET @Z = @Z+1
			END

			SET @I = @I+1
		end
	end
	-- REGISTRO J2 -----------------------------------------------------------------------------------------------------------------------------------------------------
	IF @faltaLinha = ''
	BEGIN
		DECLARE @I2 INT,
				@TOTAL_NFE2 INT,
				@J2 INT,
				@Z2 INT,
				@TOTAL_ITENS2 INT,
				@bContinue2 BIT,
				@DIF AS INT

		SET @I2 = 1
		SET @bContinue2 = 1
		SET @J2 = 1
		SET @Z2 = 2
		SET @DIF = 0

		--TEMPORARIA DAS NF'S
		CREATE TABLE #NFE(CODIGO_FILIAL VARCHAR(6), NF_NUMERO VARCHAR(12), SERIE_NF VARCHAR(3), QTDE_TOTAL INT, ID INT)
		INSERT INTO #NFE (CODIGO_FILIAL, NF_NUMERO, SERIE_NF, QTDE_TOTAL, ID)
				(SELECT L.CODIGO_FILIAL, 
						L.NF_NUMERO, 
						L.SERIE_NF,
						CONVERT(INT, L.QTDE_TOTAL) AS QTDE_TOTAL,
						(ROW_NUMBER() over (order by L.NF_NUMERO)) AS ID
				FROM LOJA_NOTA_FISCAL L
				INNER JOIN SERIES_NF S ON S.SERIE_NF = L.SERIE_NF
				INNER JOIN CTB_ESPECIE_SERIE E ON E.ESPECIE_SERIE = S.ESPECIE_SERIE
				WHERE L.CODIGO_FILIAL = @CODIGO_FILIAL
				AND E.NUMERO_MODELO_FISCAL IN ( '65')
				AND CONVERT(CHAR(8), L.DATA_HORA_EMISSAO, 112) BETWEEN @strDT_INICIAL AND @strDT_FINAL)

		--TEMPORARIA DOS ITENS
		CREATE TABLE #ITENS_NFE(CODIGO_FILIAL VARCHAR(6), NF_NUMERO VARCHAR(12), SERIE_NF VARCHAR(3), ITEM_IMPRESSAO CHAR(4))
		INSERT INTO #ITENS_NFE (CODIGO_FILIAL, NF_NUMERO, SERIE_NF, ITEM_IMPRESSAO)
				(SELECT L.CODIGO_FILIAL, 
						L.NF_NUMERO, 
						L.SERIE_NF, 
						I.ITEM_IMPRESSAO
				FROM LOJA_NOTA_FISCAL L
				INNER JOIN LOJA_NOTA_FISCAL_ITEM I ON I.CODIGO_FILIAL = L.CODIGO_FILIAL AND L.NF_NUMERO = I.NF_NUMERO AND L.SERIE_NF = I.SERIE_NF
				INNER JOIN SERIES_NF S ON S.SERIE_NF = L.SERIE_NF
				INNER JOIN CTB_ESPECIE_SERIE E ON E.ESPECIE_SERIE = S.ESPECIE_SERIE
				WHERE L.CODIGO_FILIAL = @CODIGO_FILIAL
				AND CONVERT(CHAR(8), L.DATA_HORA_EMISSAO, 112) BETWEEN @strDT_INICIAL AND @strDT_FINAL
				AND E.NUMERO_MODELO_FISCAL IN ('65'))

		SET @TOTAL_NFE2 = (SELECT COUNT(*) FROM #NFE)
		
		WHILE ((@I2 <= @TOTAL_NFE2) AND @bContinue2 = 1)
		BEGIN
			CREATE TABLE #CONFERENCIA (ITEM_IMPRESSAO INT, ID INT)
			INSERT INTO #CONFERENCIA (ITEM_IMPRESSAO, ID) 
			(
				SELECT CONVERT(INT, ITEM_IMPRESSAO) AS ITEM,
						(ROW_NUMBER() over (order by ITEM_IMPRESSAO)) AS ID
				FROM #ITENS_NFE 
				WHERE NF_NUMERO = (SELECT NF_NUMERO FROM #NFE WHERE ID = @I2) 
				AND SERIE_NF = (SELECT SERIE_NF FROM #NFE WHERE ID = @I2)
			)
			
			SELECT @TOTAL_ITENS2 = COUNT(*) FROM #CONFERENCIA
			WHILE ((@J2 <= @TOTAL_ITENS2 ) AND @bContinue2 = 1 AND @TOTAL_ITENS2 > 1)
			BEGIN
				IF EXISTS(SELECT ITEM_IMPRESSAO AS ITEM_Z2 FROM #CONFERENCIA WHERE ID = @Z2)
				BEGIN
					SELECT @DIF = SUM(X.ITEM_Z2 - X.ITEM_J2)
					FROM 
					(
						SELECT ITEM_IMPRESSAO AS ITEM_J2,
							(SELECT ITEM_IMPRESSAO AS ITEM_Z2 FROM #CONFERENCIA WHERE ID = @Z2) AS ITEM_Z2
						FROM #CONFERENCIA
						WHERE ID = @J2
					) X

					IF (@DIF > 1)
					BEGIN
						SET @faltaLinha = '?'
						SET @bContinue2 = 0
					END
				end

				SET @J2 = @J2+1
				SET @Z2 = @Z2+1
			END

			SET @I2 = @I2 + 1

			IF EXISTS(SELECT *FROM #CONFERENCIA)
			BEGIN
				DROP TABLE #CONFERENCIA	
			END
		end
	end
	
	-- REGISTRO U1 ----------------------------------------------------------------------------------------------------------------------------------------------------- 
	Print 'Registro	U1'

	IF @faltaLinha = ''
	BEGIN
		SET @faltaLinha = ' ' 
	END

	INSERT INTO LJ_REG_PAF_ECF_TEMP (TIPO,  REGISTRO, LIMITE, TERMINAL) 
      SELECT 1 AS TIPO,
			 --@IDREG, 
             'U1' 
             + RIGHT(Replicate('0', 14) + Rtrim(Replace(Replace(Replace(ISNULL(D.CGC_CPF, ''), '.', ''), '-', ''), '/', '')), 14) 
             + CONVERT(CHAR(14), Rtrim(Replace(Replace(Replace(ISNULL(D.RG_IE, ''), '.', ''), '-', ''), '/', ''))) 
             + CONVERT(CHAR(14), Rtrim(Replace(Replace(Replace(ISNULL(D.IM, ''), '.', ''), '-', ''), '/', '')))
             + Replace(CONVERT(CHAR(50), D.RAZAO_SOCIAL), ' ', @faltaLinha),
             94 AS LIMITE, 
             @TERMINAL AS TERMINAL 
      FROM   dbo.CADASTRO_CLI_FOR D 
      WHERE  D.NOME_CLIFOR = @FILIAL; 

	  -- EXTRAÇÃO EM TELA--------------------------------------------------------------------------------
      SELECT REGISTRO 
      FROM   LJ_REG_PAF_ECF_TEMP --where TERMINAL = @TERMINAL
      ORDER  BY TIPO 
END
