CREATE FUNCTION [DBO].[FN_REFERENCIA_ECF_NFE_DEV] (@NOTAFISCAL CHAR(15), @SERIENOTA CHAR(6), @CODIGO_FILIAL CHAR(6))
RETURNS @LOJA_VENDA_ORIGEM TABLE
(
	MODELO_FISCAL			VARCHAR(2),
	NUMERO_ECF				SMALLINT, 
	NF						CHAR(15),
	SERIE					CHAR(6),
	FILIAL					VARCHAR(25) ,              
	ORIGEM_ENTRADA_SAIDA	VARCHAR(1),
	NF_ORIGEM				CHAR(15),
	SERIE_NF_ORIGEM			CHAR(6),
	CHAVE_NFE_ORIGEM        CHAR(44),                    
	NUMERO_ECF_ORIGEM		SMALLINT,
	NUMERO_COO_ORIGEM		VARCHAR(12)
)
AS 

-- SUSTSP-1386	- Fillipi Ramos/Wendel Crespigio -  #SUSTSP-1386# - 30/09/2020 - Tratamento para pegar sempre somente o primeiro registo para evitar problemas com lojas com mais de um ECF.
-- DM 77455	- Diego Moreno -  #52# - 08/06/2018 - Criação da function para melhoria de performance.

BEGIN				
		DECLARE @CODIGO_FILIAL_FILTRO CHAR(6), @TICKET_FILTRO CHAR(8), @DATA_VENDA_FILTRO DATETIME, 
				@NUMERO_FISCAL_TROCA CHAR(15), @SERIE_NF_ENTRADA CHAR(6), @NUMERO_MODELO_FISCAL VARCHAR(2)

						SELECT	@CODIGO_FILIAL_FILTRO = C.CODIGO_FILIAL_ORIGEM, 
								@TICKET_FILTRO = C.TICKET_ORIGEM, 
								@DATA_VENDA_FILTRO = C.DATA_VENDA_ORIGEM,
								@NUMERO_FISCAL_TROCA = A.NUMERO_FISCAL_TROCA, 
								@SERIE_NF_ENTRADA = A.SERIE_NF_ENTRADA  ,
								@NUMERO_MODELO_FISCAL = '2D'
						FROM LOJA_VENDA_PGTO A
						INNER   JOIN LOJA_VENDA B ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND 
								A.TERMINAL = B.TERMINAL AND 
								A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
						INNER   JOIN LOJA_VENDA_TROCA_ORIGEM C ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND 
								C.DATA_VENDA = B.DATA_VENDA AND 
								C.TICKET = B.TICKET AND 
								C.TICKET_ORIGEM <> B.TICKET 
						WHERE	A.NUMERO_FISCAL_TROCA =  @NOTAFISCAL
						AND		A.SERIE_NF_ENTRADA = @SERIENOTA

		INSERT INTO @LOJA_VENDA_ORIGEM( MODELO_FISCAL, NUMERO_ECF, NF, SERIE, FILIAL, ORIGEM_ENTRADA_SAIDA, NF_ORIGEM, SERIE_NF_ORIGEM, CHAVE_NFE_ORIGEM, NUMERO_ECF_ORIGEM, NUMERO_COO_ORIGEM)
		--SELECT	DISTINCT '2D' AS MODELO_FISCAL,   &&SUSTSP-1386 - RETIRADO O DISTINCT E COLOCADO TOP 1
		SELECT	TOP 1'2D' AS MODELO_FISCAL,   
				ISNULL(
					(SELECT TOP 1 ECF 
					 FROM	LOJA_CONTROLE_FISCAL 
					 WHERE	ID_EQUIPAMENTO = B.ID_EQUIPAMENTO AND DATA_SISTEMA = B.DATA
					 ORDER BY DATA_SISTEMA DESC
					 ), 1) AS NUMERO_ECF,   
				--CONVERT(INT, B.NUMERO_CUPOM_FISCAL) AS NUMERO_COO, --#1#  
				A.NF_NUMERO AS NF,   
				A.SERIE_NF AS SERIE,   
				E.FILIAL,   
				'S' AS ORIGEM_ENTRADA_SAIDA,
				NF_ORIGEM.NF_ORIGEM,
				NF_ORIGEM.SERIE_NF_ORIGEM,
				NF_ORIGEM.CHAVE_NFE_ORIGEM,
				ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL WHERE ID_EQUIPAMENTO = NF_ORIGEM.NUMERO_ECF ORDER BY DATA_SISTEMA DESC), 1) AS NUMERO_ECF_ORIGEM,   		   
				LTRIM(RTRIM(NF_ORIGEM.NUMERO_COO)) AS NUMERO_COO_ORIGEM  --#5#
				
		FROM LOJA_NOTA_FISCAL A   
		LEFT JOIN LOJA_VENDA_PGTO B ON A.NF_NUMERO = B.NUMERO_FISCAL_TROCA  AND A.SERIE_NF = B.SERIE_NF_ENTRADA  
		INNER JOIN SERIES_NF C ON A.SERIE_NF = C.SERIE_NF   
		LEFT JOIN CTB_ESPECIE_SERIE D ON C.ESPECIE_SERIE = D.ESPECIE_SERIE   
		INNER JOIN LOJAS_VAREJO E ON A.CODIGO_FILIAL = E.CODIGO_FILIAL   
		INNER JOIN (
						SELECT 
								D.CODIGO_FILIAL,
								F.NF_NUMERO AS NF_ORIGEM, 
								F.SERIE_NF AS SERIE_NF_ORIGEM,  
								F.CHAVE_NFE  AS CHAVE_NFE_ORIGEM,
								@NUMERO_FISCAL_TROCA AS NF_TROCA,
								@SERIE_NF_ENTRADA AS SERIE_NF_TROCA,
								@NUMERO_MODELO_FISCAL AS MODELO_FISCAL,
								ISNULL(E.ID_EQUIPAMENTO, 1) AS NUMERO_ECF , 
								CASE WHEN ISNULL(CONVERT(INT, E.NUMERO_CUPOM_FISCAL),0) > 0 
									THEN CONVERT(INT, E.NUMERO_CUPOM_FISCAL) 
									ELSE CONVERT(INT, E.NUMERO_FISCAL_VENDA) 
								END AS NUMERO_COO  
						FROM LOJA_VENDA D -- ON D.CODIGO_FILIAL = C.CODIGO_FILIAL AND D.DATA_VENDA = C.DATA_VENDA_ORIGEM AND D.TICKET = C.TICKET_ORIGEM 
						INNER JOIN LOJA_VENDA_PGTO E ON E.CODIGO_FILIAL = D.CODIGO_FILIAL AND E.TERMINAL = D.TERMINAL AND E.LANCAMENTO_CAIXA = D.LANCAMENTO_CAIXA 
						LEFT  JOIN LOJA_NOTA_FISCAL F ON F.CODIGO_FILIAL = E.CODIGO_FILIAL AND 
								F.NF_NUMERO = E.NUMERO_FISCAL_VENDA AND 
								F.SERIE_NF = E.SERIE_NF_SAIDA AND 
								F.STATUS_NFE > = 5 AND 
								F.STATUS_NFE <> 70 --#4#
						WHERE	D.CODIGO_FILIAL = @CODIGO_FILIAL_FILTRO
						AND		D.TICKET = @TICKET_FILTRO 
						AND		D.DATA_VENDA = @DATA_VENDA_FILTRO
						AND		LTRIM(RTRIM(ISNULL(E.ID_EQUIPAMENTO,''))) != '' --#3#
 						
						UNION ALL
							SELECT	A.CODIGO_FILIAL, 
									F.NF_NUMERO AS NF_ORIGEM, 
									F.SERIE_NF AS SERIE_NF_ORIGEM,  
									NULL AS CHAVE_NFE_ORIGEM, 
									A.NUMERO_FISCAL_CANCELAMENTO AS NF_TROCA, 
									A.SERIE_NF_CANCELAMENTO AS SERIE_NF_TROCA,
									'2D' AS MODELO_FISCAL, 
									ISNULL(A.ID_EQUIPAMENTO, 1) AS NUMERO_ECF , 
									CASE WHEN ISNULL(CONVERT(INT, A.NUMERO_CUPOM_FISCAL),0) > 0 
										THEN CONVERT(INT, A.NUMERO_CUPOM_FISCAL) 
										ELSE CONVERT(INT, A.NUMERO_FISCAL_VENDA) 
									END AS NUMERO_COO --#6# 
						FROM LOJA_VENDA_PGTO A
						INNER JOIN LOJA_VENDA B ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TERMINAL = B.TERMINAL AND A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
						INNER JOIN LOJA_NOTA_FISCAL F ON F.CODIGO_FILIAL = A.CODIGO_FILIAL AND F.NF_NUMERO = A.NUMERO_FISCAL_CANCELAMENTO AND F.SERIE_NF = A.SERIE_NF_CANCELAMENTO
						WHERE A.VENDA_FINALIZADA = 1 AND A.CANCELADO_FISCAL = 0
						AND		A.NUMERO_FISCAL_CANCELAMENTO =  @NOTAFISCAL
						AND		A.SERIE_NF_CANCELAMENTO = @SERIENOTA

	) AS NF_ORIGEM ON NF_ORIGEM.NF_TROCA = A.NF_NUMERO AND NF_ORIGEM.SERIE_NF_TROCA = A.SERIE_NF AND NF_ORIGEM.CODIGO_FILIAL = A.CODIGO_FILIAL 
		WHERE A.STATUS_NFE NOT IN ('49','59') and
		a.NF_NUMERO = @NOTAFISCAL and 
		a.SERIE_NF = @SERIENOTA and 
		a.CODIGO_FILIAL = @CODIGO_FILIAL_FILTRO 
		
	RETURN 
END