CREATE TRIGGER [DBO].[LXU_LOJA_NOTA_FISCAL] ON [DBO].[LOJA_NOTA_FISCAL] 
WITH ENCRYPTION 
FOR UPDATE NOT FOR REPLICATION 
AS 

-- WENDEL CRESPIGIO  - #4# - (07/02/2022) - PRODSHOP-10572 - NAO PERMITIR DE FORMA ALGUMA NFC-E DESVINCULADAS DE VENDAS SEJAM AUTORIZADAS , TRIGGER PASSOU A SER CRIPTOGRAFADA.
-- WENDEL CRESPIGIO  - #3# - (30/01/2020) - MODASP-10541   - TRATAMENTO PARA NIKE - NÃƒO PERMITIR QUE PROTOCOLO E CHAVE SEJAM ALTERADOS PARA BRANCO OU NULL
-- WENDEL CRESPIGIO  - #2# - (16/03/2015) - TPs 8052501 e 8055839 - Impacto no ETL na carga das tabelas LOJA_NOTA_FISCAL e LOJA_CONTROLE_FISCAL
-- JORGE.DAMASCO     - #1# - (05/12/2014) - SOLICITADO POR THIAGO.MARCON DEVIDO Ã€ SINCRONIZAÃ‡ÃƒO COM O MID-E.
-- UPDATE TRIGGER ON LOJA_NOTA_FISCAL

BEGIN 

DECLARE	@NUMROWS	      INT,
		@NULLCNT	      INT,
		@VALIDCNT	      INT,
		@INSCODIGO_FILIAL CHAR(6), 
		@INSNF_NUMERO     CHAR(15), 
		@INSSERIE_NF      CHAR(6),
		@DELCODIGO_FILIAL CHAR(6), 
		@DELNF_NUMERO	  CHAR(15), 
		@DELSERIE_NF      CHAR(6),
		@ERRNO		      INT,
		@ERRMSG		      VARCHAR(255)
 

	SELECT @NUMROWS = @@ROWCOUNT

-- LOJAS_VAREJO - CHILD UPDATE RESTRICT
	IF	UPDATE(CODIGO_FILIAL)
	BEGIN
		SELECT @NULLCNT = 0
		SELECT @VALIDCNT = COUNT(*)
		FROM INSERTED, LOJAS_VAREJO
		WHERE	INSERTED.CODIGO_FILIAL = LOJAS_VAREJO.CODIGO_FILIAL

		IF @VALIDCNT + @NULLCNT != @NUMROWS
		BEGIN
			SELECT	@ERRNO  = 30002,
				@ERRMSG = 'IMPOSSÃVEL ATUALIZAR #LOJA_NOTA_FISCAL #PORQUE #LOJAS_VAREJO #NÃƒO EXISTE.'
			GOTO ERROR
		END
	END

-- CLIENTES_VAREJO - CHILD UPDATE RESTRICT
	IF	UPDATE(CODIGO_CLIENTE)
	BEGIN
		SELECT @NULLCNT = 0
		SELECT @VALIDCNT = COUNT(*)
		FROM INSERTED, CLIENTES_VAREJO
		WHERE	INSERTED.CODIGO_CLIENTE = CLIENTES_VAREJO.CODIGO_CLIENTE

		SELECT @NULLCNT = COUNT(*)
		FROM INSERTED 
		WHERE	INSERTED.CODIGO_CLIENTE IS NULL

		IF @VALIDCNT + @NULLCNT != @NUMROWS
		BEGIN
			SELECT	@ERRNO  = 30002,
				@ERRMSG = 'IMPOSSÃVEL ATUALIZAR #LOJA_NOTA_FISCAL #PORQUE #CLIENTES_VAREJO #NÃƒO EXISTE.'
			GOTO ERROR
		END
	END

-- LOJAS_VAREJO - CHILD UPDATE RESTRICT
	IF	UPDATE(COD_CLIFOR)
	BEGIN
		SELECT @NULLCNT = 0
		SELECT @VALIDCNT = COUNT(*)
		FROM INSERTED, CADASTRO_CLI_FOR
		WHERE	INSERTED.COD_CLIFOR = CADASTRO_CLI_FOR.COD_CLIFOR

		SELECT @NULLCNT = COUNT(*)
		FROM INSERTED 
		WHERE	INSERTED.COD_CLIFOR IS NULL

		IF @VALIDCNT + @NULLCNT != @NUMROWS
		BEGIN
			SELECT	@ERRNO  = 30002,
				@ERRMSG = 'IMPOSSÃVEL ATUALIZAR #LOJA_NOTA_FISCAL #PORQUE #CADASTRO_CLI_FOR #NÃƒO EXISTE.'
			GOTO ERROR
		END
	END

-- LOJAS_NATUREZA_OPERACAO - CHILD UPDATE RESTRICT
	IF	UPDATE(NATUREZA_OPERACAO_CODIGO)
	BEGIN
		SELECT @NULLCNT = 0
		SELECT @VALIDCNT = COUNT(*)
		FROM INSERTED, LOJAS_NATUREZA_OPERACAO
		WHERE	INSERTED.NATUREZA_OPERACAO_CODIGO = LOJAS_NATUREZA_OPERACAO.NATUREZA_OPERACAO_CODIGO

		IF @VALIDCNT + @NULLCNT != @NUMROWS
		BEGIN
			SELECT	@ERRNO  = 30002,
				@ERRMSG = 'IMPOSSÃVEL ATUALIZAR #LOJA_NOTA_FISCAL #PORQUE #LOJAS_NATUREZA_OPERACAO #NÃƒO EXISTE.'
			GOTO ERROR
		END
	END

	
-- LOJA_NOTA_FISCAL_ITEM - PARENT UPDATE CASCADE
	IF	UPDATE(CODIGO_FILIAL) OR 
		UPDATE(NF_NUMERO) OR 
		UPDATE(SERIE_NF)
	BEGIN	
		IF EXISTS (	SELECT * 
				FROM INSERTED 
					LEFT JOIN DELETED ON 
						DELETED.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL AND 
					DELETED.NF_NUMERO = INSERTED.NF_NUMERO AND 
					DELETED.SERIE_NF = INSERTED.SERIE_NF
				WHERE	DELETED.CODIGO_FILIAL IS NULL  OR  
				DELETED.NF_NUMERO IS NULL  OR  
				DELETED.SERIE_NF IS NULL
			)
		BEGIN
			DECLARE CURI_LOJA_NOTA_FISCAL_ITEM2170 CURSOR FOR 
				SELECT	CODIGO_FILIAL ,  
				NF_NUMERO ,  
				SERIE_NF
				FROM INSERTED
			DECLARE CURD_LOJA_NOTA_FISCAL_ITEM2170 CURSOR FOR 
				SELECT	CODIGO_FILIAL ,  
				NF_NUMERO ,  
				SERIE_NF
				FROM DELETED
			OPEN CURI_LOJA_NOTA_FISCAL_ITEM2170
			OPEN CURD_LOJA_NOTA_FISCAL_ITEM2170
			FETCH NEXT FROM CURI_LOJA_NOTA_FISCAL_ITEM2170
					INTO	@INSCODIGO_FILIAL ,  
					@INSNF_NUMERO ,  
					@INSSERIE_NF
			FETCH NEXT FROM CURD_LOJA_NOTA_FISCAL_ITEM2170
					INTO	@DELCODIGO_FILIAL ,  
					@DELNF_NUMERO ,  
					@DELSERIE_NF
			WHILE @@FETCH_STATUS = 0
			BEGIN
				UPDATE LOJA_NOTA_FISCAL_ITEM
				SET	CODIGO_FILIAL = @INSCODIGO_FILIAL, 
				NF_NUMERO = @INSNF_NUMERO, 
				SERIE_NF = @INSSERIE_NF
				WHERE	CODIGO_FILIAL = @DELCODIGO_FILIAL AND 
				NF_NUMERO = @DELNF_NUMERO AND 
				SERIE_NF = @DELSERIE_NF

				FETCH NEXT FROM CURI_LOJA_NOTA_FISCAL_ITEM2170
						INTO	@INSCODIGO_FILIAL ,  
						@INSNF_NUMERO ,  
						@INSSERIE_NF
				FETCH NEXT FROM CURD_LOJA_NOTA_FISCAL_ITEM2170
						INTO	@DELCODIGO_FILIAL ,  
						@DELNF_NUMERO ,  
						@DELSERIE_NF
			END
		CLOSE CURI_LOJA_NOTA_FISCAL_ITEM2170
		CLOSE CURD_LOJA_NOTA_FISCAL_ITEM2170
		DEALLOCATE CURI_LOJA_NOTA_FISCAL_ITEM2170
		DEALLOCATE CURD_LOJA_NOTA_FISCAL_ITEM2170
		END
	END

-- LOJA_NOTA_FISCAL_IMPOSTO - PARENT UPDATE CASCADE
	IF	UPDATE(CODIGO_FILIAL) OR 
		UPDATE(NF_NUMERO) OR 
		UPDATE(SERIE_NF)
	BEGIN	
		IF EXISTS (	SELECT * 
				FROM INSERTED 
					LEFT JOIN DELETED ON 
						DELETED.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL AND 
					DELETED.NF_NUMERO = INSERTED.NF_NUMERO AND 
					DELETED.SERIE_NF = INSERTED.SERIE_NF
				WHERE	DELETED.CODIGO_FILIAL IS NULL  OR  
				DELETED.NF_NUMERO IS NULL  OR  
				DELETED.SERIE_NF IS NULL
			)
		BEGIN
			DECLARE CURI_LOJA_NOTA_FISCAL_IMPOSTO2171 CURSOR FOR 
				SELECT	CODIGO_FILIAL ,  
				NF_NUMERO ,  
				SERIE_NF
				FROM INSERTED
			DECLARE CURD_LOJA_NOTA_FISCAL_IMPOSTO2171 CURSOR FOR 
				SELECT	CODIGO_FILIAL ,  
				NF_NUMERO ,  
				SERIE_NF
				FROM DELETED
			OPEN CURI_LOJA_NOTA_FISCAL_IMPOSTO2171
			OPEN CURD_LOJA_NOTA_FISCAL_IMPOSTO2171
			FETCH NEXT FROM CURI_LOJA_NOTA_FISCAL_IMPOSTO2171
					INTO	@INSCODIGO_FILIAL ,  
					@INSNF_NUMERO ,  
					@INSSERIE_NF
			FETCH NEXT FROM CURD_LOJA_NOTA_FISCAL_IMPOSTO2171
					INTO	@DELCODIGO_FILIAL ,  
					@DELNF_NUMERO ,  
					@DELSERIE_NF
			WHILE @@FETCH_STATUS = 0
			BEGIN
				UPDATE LOJA_NOTA_FISCAL_IMPOSTO
				SET	CODIGO_FILIAL = @INSCODIGO_FILIAL, 
				NF_NUMERO = @INSNF_NUMERO, 
				SERIE_NF = @INSSERIE_NF
				WHERE	CODIGO_FILIAL = @DELCODIGO_FILIAL AND 
				NF_NUMERO = @DELNF_NUMERO AND 
				SERIE_NF = @DELSERIE_NF

				FETCH NEXT FROM CURI_LOJA_NOTA_FISCAL_IMPOSTO2171
						INTO	@INSCODIGO_FILIAL ,  
						@INSNF_NUMERO ,  
						@INSSERIE_NF
				FETCH NEXT FROM CURD_LOJA_NOTA_FISCAL_IMPOSTO2171
						INTO	@DELCODIGO_FILIAL ,  
						@DELNF_NUMERO ,  
						@DELSERIE_NF
			END
		CLOSE CURI_LOJA_NOTA_FISCAL_IMPOSTO2171
		CLOSE CURD_LOJA_NOTA_FISCAL_IMPOSTO2171
		DEALLOCATE CURI_LOJA_NOTA_FISCAL_IMPOSTO2171
		DEALLOCATE CURD_LOJA_NOTA_FISCAL_IMPOSTO2171
		END
	END
	
---------------------------------------------------------------------------------------------------------------------
	-- #2#
	IF NOT UPDATE(LX_STATUS_NOTA_FISCAL)
	UPDATE 	LOJA_NOTA_FISCAL
	SET 	LX_STATUS_NOTA_FISCAL = 1
	FROM 	LOJA_NOTA_FISCAL, INSERTED
	WHERE	LOJA_NOTA_FISCAL.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL AND   
			LOJA_NOTA_FISCAL.NF_NUMERO = INSERTED.NF_NUMERO AND   
			LOJA_NOTA_FISCAL.SERIE_NF = INSERTED.SERIE_NF    

  -----------------------------------------------------------------------------------------------------  

	---DATA PARA TRANSFERENCIA---------------------------------------------------------------------------
	IF NOT UPDATE(DATA_PARA_TRANSFERENCIA)
	UPDATE 	LOJA_NOTA_FISCAL
	SET 	DATA_PARA_TRANSFERENCIA = GETDATE()
	FROM 	LOJA_NOTA_FISCAL, INSERTED
	WHERE	LOJA_NOTA_FISCAL.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL AND 
			LOJA_NOTA_FISCAL.NF_NUMERO = INSERTED.NF_NUMERO AND 
			LOJA_NOTA_FISCAL.SERIE_NF = INSERTED.SERIE_NF
			AND (INSERTED.DATA_PARA_TRANSFERENCIA IS NULL 
			OR LOJA_NOTA_FISCAL.DATA_PARA_TRANSFERENCIA = INSERTED.DATA_PARA_TRANSFERENCIA) 
-------------------------------------------------------------------------------------------------------------------------------------------------------
--#3# INICIO 

IF UPDATE (CHAVE_NFE)
	IF (SELECT isnull(INSERTED.CHAVE_NFE,'') 
	FROM LOJA_NOTA_FISCAL, INSERTED
	WHERE LOJA_NOTA_FISCAL.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL AND
	LOJA_NOTA_FISCAL.NF_NUMERO = INSERTED.NF_NUMERO AND
	LOJA_NOTA_FISCAL.SERIE_NF = INSERTED.SERIE_NF)='' 
	BEGIN
	UPDATE LOJA_NOTA_FISCAL	SET CHAVE_NFE = deleted.CHAVE_NFE
	FROM LOJA_NOTA_FISCAL, deleted
	WHERE LOJA_NOTA_FISCAL.CODIGO_FILIAL = deleted.CODIGO_FILIAL
	AND LOJA_NOTA_FISCAL.NF_NUMERO       = deleted.NF_NUMERO
	AND LOJA_NOTA_FISCAL.SERIE_NF        = deleted.SERIE_NF
END

IF UPDATE (CHAVE_NFE)
BEGIN
	IF (SELECT isnull(INSERTED.CHAVE_NFE,'') 
		FROM LOJA_NOTA_FISCAL, INSERTED
		WHERE LOJA_NOTA_FISCAL.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL AND
		LOJA_NOTA_FISCAL.NF_NUMERO = INSERTED.NF_NUMERO AND
		LOJA_NOTA_FISCAL.SERIE_NF = INSERTED.SERIE_NF)='' 
	BEGIN
		UPDATE LOJA_NOTA_FISCAL	SET CHAVE_NFE = deleted.CHAVE_NFE
		FROM LOJA_NOTA_FISCAL, deleted
		WHERE LOJA_NOTA_FISCAL.CODIGO_FILIAL = deleted.CODIGO_FILIAL
		AND LOJA_NOTA_FISCAL.NF_NUMERO       = deleted.NF_NUMERO
		AND LOJA_NOTA_FISCAL.SERIE_NF        = deleted.SERIE_NF
	END
END

IF UPDATE (PROTOCOLO_AUTORIZACAO_NFE)
BEGIN 
	IF (SELECT isnull(INSERTED.PROTOCOLO_AUTORIZACAO_NFE,'') 
		FROM LOJA_NOTA_FISCAL, INSERTED
		WHERE LOJA_NOTA_FISCAL.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL AND
		LOJA_NOTA_FISCAL.NF_NUMERO = INSERTED.NF_NUMERO AND
		LOJA_NOTA_FISCAL.SERIE_NF = INSERTED.SERIE_NF)='' 

	BEGIN
		UPDATE LOJA_NOTA_FISCAL	SET PROTOCOLO_AUTORIZACAO_NFE = deleted.PROTOCOLO_AUTORIZACAO_NFE
		FROM LOJA_NOTA_FISCAL, deleted
		WHERE LOJA_NOTA_FISCAL.CODIGO_FILIAL = deleted.CODIGO_FILIAL
		AND LOJA_NOTA_FISCAL.NF_NUMERO       = deleted.NF_NUMERO
		AND LOJA_NOTA_FISCAL.SERIE_NF        = deleted.SERIE_NF
	END
END

--#3# Fim
------------------------------------------------------------------------------------------------------------------------------------------
--#4# INICIO - NOTAS NAO VINCULADAS A VENDAS NAO SERAO MAIS AUTORIZADAS NO SISTEMA.

IF UPDATE(STATUS_NFE)
BEGIN 
	IF EXISTS (SELECT 1 FROM DBO.LOJA_NOTA_FISCAL A     (NOLOCK)
                     INNER JOIN DBO.SERIES_NF B         (NOLOCK)
                             ON A.SERIE_NF = B.SERIE_NF
                     INNER JOIN DBO.CTB_ESPECIE_SERIE C (NOLOCK)
                             ON C.ESPECIE_SERIE  = B.ESPECIE_SERIE
                     LEFT JOIN LOJA_VENDA_PGTO D        (NOLOCK)
					         ON  A.NF_NUMERO     = D.NUMERO_FISCAL_VENDA
							 AND A.SERIE_NF      = D.SERIE_NF_SAIDA 
							 AND A.CODIGO_FILIAL = D.CODIGO_FILIAL 
                     INNER JOIN INSERTED 
					         ON A.NF_NUMERO      = INSERTED.NF_NUMERO 
							 AND A.SERIE_NF      = INSERTED.SERIE_NF
							 AND A.CODIGO_FILIAL = INSERTED.CODIGO_FILIAL 
					WHERE C.NUMERO_MODELO_FISCAL = '65'
							AND A.STATUS_NFE NOT IN (59,49,70)
						    AND INSERTED.STATUS_NFE = 5
							AND D.NUMERO_FISCAL_VENDA IS NULL)
	BEGIN 
		UPDATE A SET STATUS_NFE =52 , LOG_STATUS_NFE =0 FROM LOJA_NOTA_FISCAL A , INSERTED 
			WHERE A.NF_NUMERO =INSERTED.NF_NUMERO 
			AND   A.SERIE_NF = INSERTED.SERIE_NF 
			AND   A.CODIGO_FILIAL =INSERTED.CODIGO_FILIAL 
	END 
END 

------------------------------------------------------------------------------------------------------------------------------------------
--#4# Fim 


RETURN
	ERROR:
		RAISERROR(@ERRMSG, 18, 1)
		ROLLBACK TRANSACTION
	END