	
	CREATE PROCEDURE dbo.LX_CALL_ENTIDADES_CREDITO_CONSULTAS
		(	@NOVA BIT,
			@TIPO VARCHAR(25),
			@DOCUMENTO VARCHAR(19),
			@CODIGO_FILIAL VARCHAR(6),
			@CODIGO_CLIENTE VARCHAR(14) = NULL,
			@CLIENTE_VAREJO VARCHAR(40) = NULL,
			@RESPOSTA INT = NULL,
			@VALIDAPARAMETROS BIT) 
		AS 

		/*******************************************************************************
		 FUNCAO:		PROCEDURE PARA CHAMAR A EXECUCAO DO WEBSERVICE CRIAR NOVA CONSULTA OU RETORNAR CONSULTAS JA EXISTENTES E GRAVAR NA TABELA - LOJA
		 EMPRESA:	MEGASULT - 
		 AUTOR:		CARLOS MEGASULT - KATUXA
		 DATA:		??/??/??
		 EX:			EXEC LX_CALL_ENTIDADES_CREDITO_CONSULTAS 1,'SCPC','12312312387','000004',NULL,0,0
		********************************************************************************/

		DECLARE @XML XML  ,@AUX VARCHAR(MAX),@RETORNOXML XML,@COD_FILIAL VARCHAR(6)
		SET ANSI_WARNINGS ON

   	    SELECT @COD_FILIAL = A.COD_FILIAL FROM FILIAIS A JOIN LOJAS_VAREJO B ON A.FILIAL = B.FILIAL WHERE B.CODIGO_FILIAL=@CODIGO_FILIAL
        SET @COD_FILIAL = isnull(@COD_FILIAL,@CODIGO_FILIAL)

		SET @AUX = '<Support>'+(SELECT * 
											from (SELECT	@TIPO					as TIPO,
																@DOCUMENTO			as DOCUMENTO,
																@NOVA					as NOVA,
																@CODIGO_CLIENTE	AS CODIGO_CLIENTE,
																@CLIENTE_VAREJO	AS CLIENTE_VAREJO,
																@RESPOSTA			as RESPOSTA,
																@COD_FILIAL		as CODIGO_FILIAL,
																@VALIDAPARAMETROS AS VALIDAPARAMETROS ) ENTIDADES_CREDITO_CONSULTAS FOR XML AUTO,ELEMENTS)+'</Support>'


		EXEC LX_WS_USP @COD_FILIAL, 'Support',@AUX,@RETORNOXML = @RETORNOXML OUTPUT

        if charindex('Support',substring(cast(@retornoxml as varchar(max)),1,100)) = 0 
         begin
             SELECT substring(cast(@retornoxml as varchar(max)),1,100)  AS MENSAGEM
			GOTO RETORNO
         end

		IF EXISTS (SELECT STATUS FROM (SELECT @RETORNOXML.value('/Support[1]/@status','INT') STATUS ) A WHERE STATUS > 0 )
		BEGIN
			SELECT @RETORNOXML.value('/Support[1]/@message','VARCHAR(250)')  AS MENSAGEM
			GOTO RETORNO
		END


		IF @RETORNOXML IS NOT NULL
		BEGIN
			DELETE FROM ENTIDADES_CREDITO_CONSULTAS WHERE DOCUMENTO = @DOCUMENTO 

			INSERT INTO ENTIDADES_CREDITO_CONSULTAS (ID,TIPO,DOCUMENTO,CODIGO_CLIENTE,COD_FILIAL,DATA,STATUS,RESPOSTA,MENSAGEM,RETORNO_XML)
			SELECT  
						C.value('@ID', 'INT') AS ID,
						C.value('@TIPO', 'VARCHAR(25)') AS TIPO,
						C.value('@DOCUMENTO', 'VARCHAR(19)') AS DOCUMENTO,
						C.value('@CODIGO_CLIENTE', 'VARCHAR(14)') AS CODIGO_CLIENTE,
						C.value('@COD_FILIAL', 'VARCHAR(6)') AS COD_FILIAL,
						C.value('@DATA', 'DATETIME') AS DATA,
						C.value('@STATUS', 'VARCHAR(15)') AS STATUS,
						C.value('@RESPOSTA', 'INT') AS RESPOSTA,
						C.value('@MENSAGEM', 'VARCHAR(250)') AS MENSAGEM,
						CASE WHEN @TIPO='SCPC' THEN C.query('RETORNO_XML/SPCA-XML') ELSE CASE WHEN @TIPO='SPC' THEN   C.query('RETORNO_XML/SEnvelope') ELSE '' END END AS RETORNO_XML 
			FROM  @RETORNOXML.nodes('Support/Retorno/row') AS T(C)
			WHERE C.value('@ID', 'INT') IS NOT NULL

			IF @NOVA = 1
			BEGIN
				SELECT 'CONSULTA REALIZADA' AS MENSAGEM
				RETURN
			END
			ELSE
			BEGIN
				SELECT LTRIM(RTRIM(STR(COUNT(*))))+' CONSULTA(S) ENCONTRADO(S)' AS MENSAGEM FROM ENTIDADES_CREDITO_CONSULTAS WHERE DOCUMENTO=@DOCUMENTO
				RETURN
			END
		END
		ELSE
			select 'RETORNOU NULO' AS MENSAGEM
			GOTO RETORNO

		RETORNO:
			BEGIN
				RETURN
			END
	




