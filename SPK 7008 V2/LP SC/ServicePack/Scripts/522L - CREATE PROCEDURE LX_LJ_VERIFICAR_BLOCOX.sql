CREATE PROCEDURE [dbo].[LX_LJ_VERIFICAR_BLOCOX]
(
	@CODIGO_FILIAL CHAR(6), 
	@ID_EQUIPAMENTO VARCHAR(20), 
	@DATA_INI_BX DATETIME, 
	@BUSCAR_NOVA_PENDENCIA BIT, 
	@TIPO_ARQ TINYINT, 
	@DIAS_RZ INT, 
	@DIAS_EM INT, 
	@PROXIMA BIT)
AS 
BEGIN
	SET NOCOUNT ON 
	DECLARE @ULT_ID INT

	UPDATE LJ_BLOCOX_CONTROLE_GERA_XML SET SITUACAO =2, MSG_RET_SEFAZ = '' WHERE SITUACAO =5 AND MSG_RET_SEFAZ LIKE'%AGUARDANDO%' 

	BEGIN TRY
		IF (OBJECT_ID('TempDB.dbo.#LTEMP_NOVAS_RZ') IS NOT NULL)
			DROP TABLE #LTEMP_NOVAS_RZ

		if (OBJECT_ID('TemDB.dbo.#LOJA_CONTROLE_FISCAL') IS NOT NULL)	-- #1#
			DROP TABLE #LOJA_CONTROLE_FISCAL							-- #1#


		IF (@BUSCAR_NOVA_PENDENCIA = 1 AND (@TIPO_ARQ = 0 OR @TIPO_ARQ = 1))	-- Apenas quando sistema tem que exibir resultado (RZ, Menu Fiscal, Inicia)
		BEGIN
			-- #1# Início
			SELECT DISTINCT CODIGO_FILIAL, ID_EQUIPAMENTO, CONTADOR_REINICIO_OPERACAO, QTDE_REDUCOES_Z, DATA_FISCAL 
			INTO #LOJA_CONTROLE_FISCAL
			FROM LOJA_CONTROLE_FISCAL LCF
			WHERE LCF.CODIGO_FILIAL = @CODIGO_FILIAL 
			AND (LCF.ID_EQUIPAMENTO = @ID_EQUIPAMENTO OR ISNULL(@ID_EQUIPAMENTO, '') = '')
			AND LCF.DATA_FISCAL >= @DATA_INI_BX 
			-- #1# Fim

			SELECT 
					LCF.CODIGO_FILIAL, LCF.ID_EQUIPAMENTO, LCF.CONTADOR_REINICIO_OPERACAO AS CRO,
					LCF.QTDE_REDUCOES_Z AS CRZ, DATA_FISCAL AS DATA_MES, IDENTITY(INT, 1, 1) AS SEQ
			INTO #LTEMP_NOVAS_RZ
			FROM #LOJA_CONTROLE_FISCAL LCF	-- #1#
			LEFT JOIN LJ_BLOCOX_CONTROLE_GERA_XML BX	-- #2#
			ON LCF.CODIGO_FILIAL = BX.CODIGO_FILIAL AND LCF.DATA_FISCAL = BX.DATA_MES AND LCF.CONTADOR_REINICIO_OPERACAO = BX.CRO AND LCF.QTDE_REDUCOES_Z = BX.CRZ AND 'RZ' = BX.TIPO_ARQUIVO 
			WHERE BX.CODIGO_FILIAL IS NULL	-- #1#
			--WHERE LCF.CODIGO_FILIAL = @CODIGO_FILIAL											-- #1#
			--AND (LCF.ID_EQUIPAMENTO = @ID_EQUIPAMENTO OR ISNULL(@ID_EQUIPAMENTO, '') = '')	-- #1#
			--AND LCF.DATA_FISCAL >= @DATA_INI_BX												-- #1#
			--AND BX.CODIGO_FILIAL IS NULL														-- #1#

			IF EXISTS(SELECT TOP 1 1 FROM #LTEMP_NOVAS_RZ)
			BEGIN
				BEGIN TRAN
				SELECT @ULT_ID = MAX(ID_BLOCOX) FROM LJ_BLOCOX_CONTROLE_GERA_XML WHERE CODIGO_FILIAL = @CODIGO_FILIAL	-- #2#
				IF (@ULT_ID IS NULL)
					SET @ULT_ID = 0
				INSERT INTO LJ_BLOCOX_CONTROLE_GERA_XML		-- #2#
				(CODIGO_FILIAL, TIPO_ARQUIVO, ID_EQUIPAMENTO, CRO, CRZ, DATA_MES, SITUACAO, COD_RET_SEFAZ, MSG_RET_SEFAZ, RECIBO, DATA_PARA_TRANSFERENCIA, ID_BLOCOX)
				SELECT CODIGO_FILIAL, 'RZ', ID_EQUIPAMENTO, CRO, CRZ, DATA_MES, 1, NULL, NULL, NULL, GETDATE(), SEQ + @ULT_ID 
				FROM #LTEMP_NOVAS_RZ

				COMMIT TRAN

				DROP TABLE #LTEMP_NOVAS_RZ
			END 
		END

		IF (@BUSCAR_NOVA_PENDENCIA = 1 AND (@TIPO_ARQ = 0 OR @TIPO_ARQ = 2))	-- Apenas quando sistema tem que exibir resultado (RZ, Menu Fiscal, Inicia)
		BEGIN
			DECLARE @MES_ATUAL DATE, @MES DATE, @ID_BX INT
			DECLARE @DATAS TABLE (MES DATE, SEQ INT IDENTITY)

			SET @MES_ATUAL = GETDATE()
			SET @MES = CAST(LEFT(CONVERT(VARCHAR, @DATA_INI_BX, 112), 6) + '01' AS DATE)
			SET @MES = DATEADD(DAY, -1, DATEADD(MONTH, 1, @MES))

			WHILE @MES < @MES_ATUAL
			BEGIN
				INSERT INTO @DATAS VALUES (@MES)
				SET @MES = CAST(LEFT(CONVERT(VARCHAR, @MES, 112), 6) + '01' AS DATE)
				SET @MES = DATEADD(DAY, -1, DATEADD(MONTH, 2, @MES))
			END
			
			BEGIN TRAN

			SELECT @ULT_ID = MAX(ID_BLOCOX) FROM LJ_BLOCOX_CONTROLE_GERA_XML WHERE CODIGO_FILIAL = @CODIGO_FILIAL	-- #2#
			IF (@ULT_ID IS NULL)
				SET @ULT_ID = 0

			INSERT INTO LJ_BLOCOX_CONTROLE_GERA_XML	-- #2#
			(CODIGO_FILIAL, TIPO_ARQUIVO, ID_EQUIPAMENTO, CRO, CRZ, DATA_MES, SITUACAO, COD_RET_SEFAZ, MSG_RET_SEFAZ, RECIBO, DATA_PARA_TRANSFERENCIA, ID_BLOCOX)
			SELECT @CODIGO_FILIAL, 'EM', NULL, NULL, NULL, MES, 1, NULL, NULL, NULL, GETDATE(), SEQ + @ULT_ID 
			FROM @DATAS D
			LEFT JOIN LJ_BLOCOX_CONTROLE_GERA_XML C	-- #2#
			ON @CODIGO_FILIAL = C.CODIGO_FILIAL AND D.MES = C.DATA_MES AND 'EM' = C.TIPO_ARQUIVO 
			WHERE C.ID_BLOCOX IS NULL

			COMMIT TRAN
		END

	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0
			ROLLBACK TRAN
		SET NOCOUNT OFF
		DECLARE @MensagemErro VARCHAR(2047), @Severidade INT
		SET @MensagemErro = ERROR_MESSAGE();
		SET @Severidade = ERROR_SEVERITY();
		RAISERROR(@MensagemErro, @Severidade, 1)
		--RETURN;
	END CATCH

	SET NOCOUNT OFF

	SELECT * FROM DBO.FX_LJ_VERIFICAR_PENDENCIAS_BLOCOX(@CODIGO_FILIAL, @TIPO_ARQ, @ID_EQUIPAMENTO, @DIAS_RZ, @DIAS_EM, @PROXIMA)

END