CREATE PROCEDURE [dbo].[LX_ESTOQUE_PAF_NFCE] @CODIGO_FILIAL VARCHAR(6) , @Filial varchar(50) ,@CNPJ_LOCAL AS VARCHAR(14) ,@StringBufer varchar(100)
AS

SET NOCOUNT ON 
BEGIN
	Set @StringBufer = rtrim(ltrim(@StringBufer))
	Set @Filial = rtrim(ltrim(@Filial))


	IF Object_id('TEMPDB..#TABPRODUTOE2') IS NOT NULL 
	BEGIN 
		DROP TABLE #TABPRODUTOE2 
	END;

	CREATE TABLE #TABPRODUTOE2 
	(
		PRODUTO		   VARCHAR(30) COLLATE DATABASE_DEFAULT, 
		COR_PRODUTO    VARCHAR(10) COLLATE DATABASE_DEFAULT, 
		GRADE          VARCHAR(8)  COLLATE DATABASE_DEFAULT,  
		CODIGO_PRODUTO VARCHAR(25) COLLATE DATABASE_DEFAULT, 
		DESC_PRODUTO   VARCHAR(40) COLLATE DATABASE_DEFAULT,
		UNIDADE		   VARCHAR(5)  COLLATE DATABASE_DEFAULT, 
		TAMANHO        INT,
		TIPO_COD_BAR   INT,
    	CODIGO_BARRA   VARCHAR(25) COLLATE DATABASE_DEFAULT,
		CODIGO_CEST    varchar(07) COLLATE DATABASE_DEFAULT,
		CLASSIF_FISCAL char(10) COLLATE DATABASE_DEFAULT,
		SALDO_ESTOQUE  INT )

	CREATE TABLE #PRODUTOS_BARRA_TEMP
	(
		PRODUTO     VARCHAR(30) COLLATE DATABASE_DEFAULT, 
		COR_PRODUTO  VARCHAR(10) COLLATE DATABASE_DEFAULT, 
		GRADE     VARCHAR(8)  COLLATE DATABASE_DEFAULT,  
		CODIGO_PRODUTO  VARCHAR(25) COLLATE DATABASE_DEFAULT,
		TAMANHO     INT, 
		TIPO_COD_BAR  INT,
		CODIGO_BARRA   VARCHAR(25)COLLATE DATABASE_DEFAULT,
		TIPO BIT
	)

	INSERT INTO #PRODUTOS_BARRA_TEMP(PRODUTO, COR_PRODUTO, GRADE, CODIGO_PRODUTO, TAMANHO, TIPO_COD_BAR, CODIGO_BARRA, TIPO)
	SELECT PRODUTO, COR_PRODUTO, GRADE, LEFT(MAX(CODIGO_BARRA), 14) AS CODIGO_BARRA14, MAX(TAMANHO) AS TAMANHO, 
			MAX(TIPO_COD_BAR) AS TIPO_COD_BAR, MAX(CODIGO_BARRA) AS CODIGO_BARRA, 
			max(CASE WHEN TIPO_COD_BAR = 1 AND LEN(CODIGO_BARRA) <= 14 THEN 1 ELSE 0 END) AS TIPO
	FROM PRODUTOS_BARRA
	WHERE TIPO_COD_BAR IS NOT NULL AND INATIVO = 0 
	GROUP BY PRODUTO, COR_PRODUTO, GRADE
	   	 
	INSERT #TABPRODUTOE2  ( PRODUTO ,COR_PRODUTO,GRADE, CODIGO_PRODUTO ,TAMANHO,TIPO_COD_BAR,CODIGO_BARRA, SALDO_ESTOQUE, DESC_PRODUTO, UNIDADE, 
							CLASSIF_FISCAL, CODIGO_CEST  )
	SELECT  fxl.PRODUTO ,fxl.COR_PRODUTO ,fxl.GRADE,fxl.CODIGO_PRODUTO ,fxl.TAMANHO ,fxl.TIPO_COD_BAR ,fxl.CODIGO_BARRA,
	CASE fxl.TAMANHO 
				WHEN 1 THEN ISNULL(EST.ES1, 0) 
				WHEN 2 THEN ISNULL(EST.ES2, 0) 
				WHEN 3 THEN ISNULL(EST.ES3, 0) 
				WHEN 4 THEN ISNULL(EST.ES4, 0) 
				WHEN 5 THEN ISNULL(EST.ES5, 0) 
				WHEN 6 THEN ISNULL(EST.ES6, 0) 
				WHEN 7 THEN ISNULL(EST.ES7, 0) 
				WHEN 8 THEN ISNULL(EST.ES8, 0) 
				WHEN 9 THEN ISNULL(EST.ES9, 0) 
				WHEN 10 THEN ISNULL(EST.ES10, 0) 
				ELSE 
					CASE fxl.TAMANHO 
					WHEN 11 THEN ISNULL(EST.ES11, 0) 
					WHEN 12 THEN ISNULL(EST.ES12, 0) 
					WHEN 13 THEN ISNULL(EST.ES13, 0) 
					WHEN 14 THEN ISNULL(EST.ES14, 0) 
					WHEN 15 THEN ISNULL(EST.ES15, 0) 
					WHEN 16 THEN ISNULL(EST.ES16, 0) 
					WHEN 17 THEN ISNULL(EST.ES17, 0) 
					WHEN 18 THEN ISNULL(EST.ES18, 0) 
					WHEN 19 THEN ISNULL(EST.ES19, 0) 
					WHEN 20 THEN ISNULL(EST.ES20, 0) 
					ELSE
						CASE fxl.TAMANHO 
						WHEN 21 THEN ISNULL(EST.ES21, 0) 
						WHEN 21 THEN ISNULL(EST.ES21, 0) 
						WHEN 22 THEN ISNULL(EST.ES22, 0) 
						WHEN 23 THEN ISNULL(EST.ES23, 0) 
						WHEN 24 THEN ISNULL(EST.ES24, 0) 
						WHEN 25 THEN ISNULL(EST.ES25, 0) 
						WHEN 26 THEN ISNULL(EST.ES26, 0) 
						WHEN 27 THEN ISNULL(EST.ES27, 0) 
						WHEN 28 THEN ISNULL(EST.ES28, 0) 
						WHEN 29 THEN ISNULL(EST.ES29, 0) 
						WHEN 30 THEN ISNULL(EST.ES30, 0) 
						ELSE
							CASE fxl.TAMANHO 
							WHEN 31 THEN ISNULL(EST.ES31, 0) 
							WHEN 32 THEN ISNULL(EST.ES32, 0) 
							WHEN 33 THEN ISNULL(EST.ES33, 0) 
							WHEN 34 THEN ISNULL(EST.ES34, 0) 
							WHEN 35 THEN ISNULL(EST.ES35, 0) 
							WHEN 36 THEN ISNULL(EST.ES36, 0) 
							WHEN 37 THEN ISNULL(EST.ES37, 0) 
							WHEN 38 THEN ISNULL(EST.ES38, 0) 
							WHEN 39 THEN ISNULL(EST.ES39, 0) 
							WHEN 40 THEN ISNULL(EST.ES40, 0) 
							ELSE
								CASE fxl.TAMANHO 
								WHEN 41 THEN ISNULL(EST.ES41, 0) 
								WHEN 42 THEN ISNULL(EST.ES42, 0) 
								WHEN 43 THEN ISNULL(EST.ES43, 0) 
								WHEN 44 THEN ISNULL(EST.ES44, 0) 
								WHEN 45 THEN ISNULL(EST.ES45, 0) 
								WHEN 46 THEN ISNULL(EST.ES46, 0) 
								WHEN 47 THEN ISNULL(EST.ES47, 0) 
								WHEN 48 THEN ISNULL(EST.ES48, 0) 
								ELSE 0 
								END
							END
						END
					END
				END AS SALDO_ESTOQUE, PRD.DESC_PRODUTO, UNIDADE, PRD.CLASSIF_FISCAL, d.CODIGO_CEST 
		FROM #PRODUTOS_BARRA_TEMP fxl
		INNER JOIN DBO.ESTOQUE_PRODUTOS EST				
			ON fxl.PRODUTO = EST.PRODUTO AND fxl.COR_PRODUTO = EST.COR_PRODUTO 
		INNER JOIN DBO.PRODUTOS PRD						
			ON	EST.PRODUTO = PRD.PRODUTO
		LEFT JOIN CEST_NCM C ON PRD.ID_CEST_NCM = C.ID
		LEFT JOIN TABELA_LX_CEST D ON C.ID_CEST = D.ID

		WHERE EST.FILIAL = @Filial	
		AND  fxl.TIPO in(0,1);

		INSERT INTO DBO.LJ_ESTOQUE_PAF_NFCE  WITH(XLOCK ROWLOCK)
			(CODIGO_FILIAL, CODIGO_PRODUTO, CNPJ_ESTABELECIMENTO, DESCRICAO_PRODUTO,DESCRICAO_UNIDADE,SALDO_ESTOQUE,LX_HASH, CLASSIF_FISCAL, CODIGO_CEST)
		SELECT 	@CODIGO_FILIAL,
				C.CODIGO_BARRA ,
				@CNPJ_LOCAL,				
				C.DESC_PRODUTO,
				C.UNIDADE,
				C.SALDO_ESTOQUE, 
				HASHBYTES('MD5', @StringBufer),
				CLASSIF_FISCAL,
				CODIGO_CEST
		FROM #TABPRODUTOE2 C 
		WHERE C.SALDO_ESTOQUE IS NOT NULL 
		GROUP BY C.CODIGO_BARRA,
				 C.DESC_PRODUTO, 
				 C.UNIDADE,
				 SALDO_ESTOQUE,
				 CLASSIF_FISCAL,
				 CODIGO_CEST
		ORDER BY C.CODIGO_BARRA	;

		UPDATE 
			DBO.LJ_ESTOQUE_PAF_NFCE  WITH(XLOCK ROWLOCK) 
		SET LX_HASH = HASHBYTES('MD5', @StringBufer + CODIGO_FILIAL + CNPJ_ESTABELECIMENTO + CODIGO_PRODUTO + DESCRICAO_PRODUTO + 
						DESCRICAO_UNIDADE + CAST(SALDO_ESTOQUE AS VARCHAR))
		WHERE
			CODIGO_FILIAL = @CODIGO_FILIAL	
			AND CONVERT(CHAR(10) , DATA_PAF_NFCE, 112 ) = CONVERT(CHAR(10) , GETDATE(), 112);


		----- ATUALIZAÇÃO DA TABELA LJ_PROD_ICMS_PAF_NFCE
		EXEC [DBO].[LX_LJ_PROD_ICMS_PAF_NFCE] @CODIGO_FILIAL, @StringBufer ;
END