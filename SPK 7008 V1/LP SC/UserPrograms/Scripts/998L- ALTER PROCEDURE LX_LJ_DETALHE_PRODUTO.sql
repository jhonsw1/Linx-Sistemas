ALTER PROCEDURE [dbo].[LX_LJ_DETALHE_PRODUTO] (@PRODUTO VARCHAR(25), @CODIGO_TAB_PRECO VARCHAR(2), @FILIAL VARCHAR(25), @PESQUISA_FOTO BIT,@VALIDA_GTIN BIT = 1)      
--#99# 15/05/2018 - Marcio - Melhoria para conversao de estoque para que não de erro no mobile
--#99# 15/05/2018 - Marcio - Melhoria de performance para buscar apenas itens com preço por parametro
--#99# 15/05/2018 - Marcio - Melhoria de buscar produto e cor_produto
--#10# 09/04/2018 - Diego Moreno - Dados para árvore mercadológica para o Linx Mobile.
-- #9# 09/10/2017 - Diego Moreno - Melhorias para o motor de promoção da NIKE.
-- #8# 12/08/2016 - Gilvano Santos - ID7692 - Filtro para capturar somente o codigo CEST ativo.  
-- #7# 05/05/2016 - Giedson Silva - ID2634 - Alteração CEST/NCM reformulando vínculo para busca das informações NCM e CEST.  
-- #6# 03/05/2016 - Giedson Silva - ID2609 - Alteração no relacionamento entre as tabelas:  CEST_NCM e TABELA_LX_NCM.  
-- #5# 28/04/2016 - Giedson Silva - ID2571 - Alteração para considerar o CEST e NCM no Cupom Fiscal.   
-- #4# 06/07/2015 - Gerson Prado - TP8279508 - Programação do LinxPOS para o PAF-ECF 2015 - Otimização da procedure para trazer o produto considerando o GTIN.   
-- #3# 15/06/2015 - Gerson Prado - TP8279508 - Programação do LinxPOS para o PAF-ECF 2015 - Inclusão do campo ARREDONDA da tabela de produtos  
-- #2# 05/09/2014 - Victor Kajiyama - TP 5829698 - Incluindo campo para que o valor seja usado em validação no Visual FoxPro.  
-- #1# 29/11/2013 - Diego Camargo - TP 4598975 - Adicionado a coluna Montagem Kit para se utilizada ao desmembrar o kit.    
AS      
BEGIN      
   SET NOCOUNT ON      
   -- #4# [Inicio]  
   DECLARE @TMP_PRODUCT_BARRA TABLE( PRODUTO CHAR(12), COR_PRODUTO CHAR(10), CODIGO_BARRA VARCHAR(25), TAMANHO INT, GRADE VARCHAR(8), ID_SKU INT, TIPO_COD_BAR TINYINT)  
   BEGIN   
	--#99# inicio precos 
	DECLARE @PRECOVALIDA NUMERIC(10,2)=0.00 
     IF EXISTS(SELECT 1 FROM PARAMETROS WHERE PARAMETRO ='HR_SH_PRECO_ZERO' AND VALOR_ATUAL >'0') 
		SET @PRECOVALIDA =0.01
	--#99# fim

 IF @VALIDA_GTIN = 1 
	BEGIN
		INSERT INTO @TMP_PRODUCT_BARRA
		SELECT PRODUTO,
			   COR_PRODUTO,
			   MAX(CODIGO_BARRA) AS CODIGO_BARRA,
			   TAMANHO,
			   GRADE,
			   ID_SKU,
			   ISNULL(TIPO_COD_BAR, 255)
		FROM PRODUTOS_BARRA
		WHERE PRODUTO = substring(@PRODUTO,1,4) and COR_PRODUTO like RTRIM(substring(@PRODUTO,5,6))+'%' --#99#
		  AND INATIVO = 0
		GROUP BY PRODUTO,
				 COR_PRODUTO,
				 TAMANHO,
				 GRADE,
				 ID_SKU,
				 TIPO_COD_BAR BEGIN
		DELETE @TMP_PRODUCT_BARRA
		FROM @TMP_PRODUCT_BARRA P
		LEFT JOIN
		  (SELECT *
		   FROM @TMP_PRODUCT_BARRA
		   WHERE TIPO_COD_BAR = 1 ) T ON P.PRODUTO = T.PRODUTO
		AND P.COR_PRODUTO = T.COR_PRODUTO
		AND P.TAMANHO = T.TAMANHO
		WHERE P.TIPO_COD_BAR <> 1
		  AND T.PRODUTO IS NOT NULL
		  DELETE @TMP_PRODUCT_BARRA
		  FROM @TMP_PRODUCT_BARRA P
		  LEFT JOIN
			(SELECT PRODUTO,
					COR_PRODUTO,
					TAMANHO,
					MAX(CODIGO_BARRA) AS CODIGO_BARRA
			 FROM @TMP_PRODUCT_BARRA
			 WHERE TIPO_COD_BAR <> 1
			 GROUP BY PRODUTO,
					  COR_PRODUTO,
					  TAMANHO) T ON P.PRODUTO = T.PRODUTO
		  AND P.COR_PRODUTO = T.COR_PRODUTO
		  AND P.TAMANHO = T.TAMANHO
		  AND P.CODIGO_BARRA = T.CODIGO_BARRA WHERE P.TIPO_COD_BAR <> 1
		  AND T.PRODUTO IS NULL 
	END  
END 

if @VALIDA_GTIN = 0 
	BEGIN 
	--print 'Else'
		INSERT INTO @TMP_PRODUCT_BARRA
		SELECT PRODUTO,
			   COR_PRODUTO,
			   CODIGO_BARRA,
			   TAMANHO,
			   GRADE,
			   ID_SKU,
			   ISNULL(TIPO_COD_BAR, 255)
		FROM PRODUTOS_BARRA
		WHERE PRODUTO = substring(@PRODUTO,1,4) and COR_PRODUTO like RTRIM((substring(@PRODUTO,5,6)))+'%' --#99#
		  AND INATIVO = 0
		GROUP BY PRODUTO,
				 COR_PRODUTO,
				 TAMANHO,
				 GRADE,
				 ID_SKU,
				 TIPO_COD_BAR,
				 CODIGO_BARRA 
	END 


  END  
  -- #4# [Fim]      
   SELECT       
   A.PRODUTO, A.DESC_PROD_NF, A.UNIDADE, A.VARIA_PRECO_COR, A.VARIA_PRECO_TAM, A.PESO, A.INATIVO,     
   CASE WHEN B.FIM_VENDAS < GETDATE() THEN convert(bit,1) ELSE convert(bit,0) END AS FIM_VENDA,  -- #2#     
   A.PONTEIRO_PRECO_TAM, B.COR_PRODUTO, B.DESC_COR_PRODUTO, C.TAMANHO, C.GRADE,       
   D.CLASSIF_FISCAL, D.CLASSIF_REDUZIDA, A.TRIBUT_ICMS,  ISNULL(B.TRIBUT_ORIGEM, A.TRIBUT_ORIGEM) AS TRIBUT_ORIGEM,       
   dbo.fn_TaxException_2_00(A.CLASSIF_FISCAL, M.UF, @FILIAL, 2, D.IPI, A.PRODUTO) AS IPI,      
   dbo.fn_TaxException_2_00(A.CLASSIF_FISCAL, M.UF, @FILIAL, 1, NULL, A.PRODUTO) AS ALIQUOTA,      
   dbo.fn_TaxException_2_00(A.CLASSIF_FISCAL, M.UF, @FILIAL, 14, -10, A.PRODUTO) AS ISS,       
   PRECO1 = ISNULL(G.PRECO1, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO1 ELSE E.PRECO1 END),       
   PRECO2 = ISNULL(G.PRECO2, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO2 ELSE E.PRECO2 END),       
   PRECO3 = ISNULL(G.PRECO3, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO3 ELSE E.PRECO3 END),       
   PRECO4 = ISNULL(G.PRECO4, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO4 ELSE E.PRECO4 END),       
   PRECO_LIQUIDO1 = ISNULL(ISNULL(G.PRECO_LIQUIDO1, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO_LIQUIDO1 ELSE E.PRECO_LIQUIDO1 END), 0),       
   PRECO_LIQUIDO2 = ISNULL(ISNULL(G.PRECO_LIQUIDO2, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO_LIQUIDO2 ELSE E.PRECO_LIQUIDO2 END), 0),       
   PRECO_LIQUIDO3 = ISNULL(ISNULL(G.PRECO_LIQUIDO3, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO_LIQUIDO3 ELSE E.PRECO_LIQUIDO3 END), 0),       
   PRECO_LIQUIDO4 = ISNULL(ISNULL(G.PRECO_LIQUIDO4, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO_LIQUIDO4 ELSE E.PRECO_LIQUIDO4 END), 0),       
   PRECO = ISNULL(G.PRECO1, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO1 ELSE E.PRECO1 END),       
   PRECO_LIQUIDO = ISNULL(ISNULL(G.PRECO_LIQUIDO1, CASE A.VARIA_PRECO_COR WHEN 1 THEN F.PRECO_LIQUIDO1 ELSE E.PRECO_LIQUIDO1 END), 0),       
   PROMOCAO_DESCONTO = ISNULL(G.PROMOCAO_DESCONTO, CASE WHEN VARIA_PRECO_COR = 1 THEN F.PROMOCAO_DESCONTO ELSE E.PROMOCAO_DESCONTO END),       
   INICIO_PROMOCAO = ISNULL(G.INICIO_PROMOCAO, CASE WHEN VARIA_PRECO_COR =1 THEN F.INICIO_PROMOCAO ELSE E.INICIO_PROMOCAO END),       
   FIM_PROMOCAO = ISNULL(G.FIM_PROMOCAO, CASE WHEN VARIA_PRECO_COR = 1 THEN F.FIM_PROMOCAO ELSE E.FIM_PROMOCAO END),       
   E.LIMITE_DESCONTO,       
   PATH_FOTO = CASE WHEN @PESQUISA_FOTO = 1 THEN ISNULL(CONTEUDO_FOTO, ISNULL(THUMBNAIL_FOTO, PATH_FOTO)) ELSE CONVERT(VARCHAR(10), '') END,       
   C.CODIGO_BARRA, A.VARIA_CUSTO_TAM,       
   CUSTO_REPOSICAO1 = CASE A.VARIA_CUSTO_COR WHEN 1 THEN B.CUSTO_REPOSICAO1 ELSE A.CUSTO_REPOSICAO1 END,       
   CUSTO_REPOSICAO2 = CASE A.VARIA_CUSTO_COR WHEN 1 THEN B.CUSTO_REPOSICAO2 ELSE A.CUSTO_REPOSICAO2 END,       
   CUSTO_REPOSICAO3 = CASE A.VARIA_CUSTO_COR WHEN 1 THEN B.CUSTO_REPOSICAO3 ELSE A.CUSTO_REPOSICAO3 END,       
   CUSTO_REPOSICAO4 = CASE A.VARIA_CUSTO_COR WHEN 1 THEN B.CUSTO_REPOSICAO4 ELSE A.CUSTO_REPOSICAO4 END,       
   ESTOQUE = CONVERT(INT,ISNULL(CASE C.TAMANHO WHEN 1 THEN ES1 WHEN 2 THEN ES2 WHEN 3 THEN ES3 WHEN 4 THEN ES4 WHEN 5 THEN ES5 WHEN 6 THEN ES6 WHEN 7 THEN ES7      
   WHEN 8 THEN ES8 WHEN 9 THEN ES9 WHEN 10 THEN ES10 WHEN 11 THEN ES11 WHEN 12 THEN ES12 WHEN 13 THEN ES13 WHEN 14 THEN ES14 WHEN 15 THEN ES15      
   WHEN 16 THEN ES16 WHEN 17 THEN ES17 WHEN 18 THEN ES18 WHEN 19 THEN ES19 WHEN 20 THEN ES20 WHEN 21 THEN ES21 WHEN 22 THEN ES22 WHEN 23 THEN ES23      
   WHEN 24 THEN ES24 WHEN 25 THEN ES25 WHEN 26 THEN ES26 WHEN 27 THEN ES27 WHEN 28 THEN ES28 WHEN 29 THEN ES29 WHEN 30 THEN ES30 WHEN 31 THEN ES31      
   WHEN 32 THEN ES32 WHEN 33 THEN ES33 WHEN 34 THEN ES34 WHEN 35 THEN ES35 WHEN 36 THEN ES36 WHEN 37 THEN ES37 WHEN 38 THEN ES38 WHEN 39 THEN ES39      
   WHEN 40 THEN ES40 WHEN 41 THEN ES41 WHEN 42 THEN ES42 WHEN 43 THEN ES43 WHEN 44 THEN ES44 WHEN 45 THEN ES45 WHEN 46 THEN ES46 WHEN 47 THEN ES47      
   WHEN 48 THEN ES48 ELSE 0 END, 0)),       
   ISNULL(K.INDICADOR_CFOP, A.INDICADOR_CFOP) AS INDICADOR_CFOP, J.DESCRICAO AS TRIBUT_ORIGEM_DESCRICAO,       
   D.DESC_CLASSIFICACAO, L.DESCRICAO_INDICADOR_CFOP, A.CONTA_CONTABIL, A.CONTA_CONTABIL_VENDA,       
   A.CONTA_CONTABIL_DEV_VENDA, A.PERMITE_ENTREGA_FUTURA, C.ID_SKU, A.ID_ARTIGO, A.MONTAGEM_KIT, A.ARREDONDA, C.TIPO_COD_BAR, --#1# #3#     
   CEST.CODIGO_CEST, ISNULL(NCM.CODIGO_NCM, SUBSTRING(REPLACE(A.CLASSIF_FISCAL,'.',''),1,8)) AS CODIGO_NCM, -- #5##7#  
   A.GRUPO_PRODUTO AS GRUPO_PRODUTO, A.SUBGRUPO_PRODUTO AS SUBGRUPO_PRODUTO, A.COLECAO AS COLECAO--#MOBILIDADE#
   FROM       
   PRODUTOS A       
   INNER JOIN PRODUTO_CORES B ON A.PRODUTO = B.PRODUTO       
   INNER JOIN @TMP_PRODUCT_BARRA C ON A.PRODUTO = C.PRODUTO AND B.COR_PRODUTO = C.COR_PRODUTO  --#4#       
   INNER JOIN CLASSIF_FISCAL D ON D.CLASSIF_FISCAL = A.CLASSIF_FISCAL       
   LEFT JOIN PRODUTOS_PRECOS E ON A.PRODUTO = E.PRODUTO AND E.CODIGO_TAB_PRECO = @CODIGO_TAB_PRECO       
   LEFT JOIN PRODUTOS_PRECO_COR F ON E.CODIGO_TAB_PRECO = F.CODIGO_TAB_PRECO AND E.PRODUTO = F.PRODUTO AND C.COR_PRODUTO = F.COR_PRODUTO AND E.CODIGO_TAB_PRECO =    @CODIGO_TAB_PRECO       
  LEFT JOIN PRODUTOS_PRECO_FILIAL G ON E.CODIGO_TAB_PRECO = G.CODIGO_TAB_PRECO AND B.PRODUTO = G.PRODUTO AND B.COR_PRODUTO = G.COR_PRODUTO AND G.FILIAL = @FILIAL       
  LEFT JOIN (SELECT A.PRODUTO, A.CONTEUDO_FOTO, A.THUMBNAIL_FOTO, A.PATH_FOTO FROM PRODUTOS_FOTO A INNER JOIN (SELECT PRODUTO, MIN(NUMERO_FOTO) AS NUMERO_FOTO FROM   PRODUTOS_FOTO GROUP BY PRODUTO) B ON A.PRODUTO = B.PRODUTO AND A.NUMERO_FOTO = B.NUMERO_FOTO) H ON A.PRODUTO = H.PRODUTO       
  LEFT JOIN ESTOQUE_PRODUTOS I ON A.PRODUTO = I.PRODUTO AND B.COR_PRODUTO = I.COR_PRODUTO AND I.FILIAL = @FILIAL       
  INNER JOIN TRIBUT_ORIGEM J ON A.TRIBUT_ORIGEM = J.TRIBUT_ORIGEM       
  LEFT JOIN PRODUTOS_INDICADOR_CFOP K ON A.PRODUTO = K.PRODUTO AND K.FILIAL = @FILIAL       
  LEFT JOIN CTB_LX_INDICADOR_CFOP L ON ISNULL(K.INDICADOR_CFOP, A.INDICADOR_CFOP) = L.INDICADOR_CFOP       
  LEFT JOIN CADASTRO_CLI_FOR M ON M.NOME_CLIFOR = @FILIAL   
  LEFT JOIN CEST_NCM CEST_NCM ON A.ID_CEST_NCM = CEST_NCM.ID AND CEST_NCM.INATIVO = 0 --#5# #8#  
  LEFT JOIN TABELA_LX_NCM NCM ON NCM.ID = CEST_NCM.ID_NCM--#5##6#  
  LEFT JOIN TABELA_LX_CEST CEST ON CEST.ID = CEST_NCM.ID_CEST --#5#  
  WHERE       
     A.PRODUTO = SUBSTRING(@PRODUTO,1,4) AND B.COR_PRODUTO LIKE RTRIM(SUBSTRING(@PRODUTO,5,6))+'%' AND F.PRECO1 >=@PRECOVALIDA --#99#

 SET NOCOUNT OFF      
END

