CREATE FUNCTION [DBO].[FX_CTB_SIMULA_PARCELAS] (@FILIAL VARCHAR(25), @NF_SAIDA CHAR(15), @SERIE_NF CHAR(6), @TIPO_DOC CHAR(2), @COD_TRANSACAO VARCHAR(23))

-- DM 109532 - Eder Silva - #1# - 14/02/2019 - Tratamento para as Tags referentes aos "Dados da Cobrança" - conforme Grupo Y da NT 2016.002 Versão 1.61 e alinhado com Roberto Beda.

RETURNS @SIMULACAO_PARCELAS TABLE (
									NFAT  VARCHAR(15)		NULL,
									VORIG NUMERIC(15,2)     NULL,
									VDESC NUMERIC(15,2)     NULL,
									VLIQ  NUMERIC(15,2)     NULL,
									NDUP  VARCHAR(60)       NULL,
									DVENC DATETIME          NULL,
									VDUP  NUMERIC(15,2)     NULL,
									ID_PARCELA VARCHAR(2))
AS 
BEGIN
	INSERT INTO @SIMULACAO_PARCELAS(NFAT, VORIG, VDESC, VLIQ, NDUP, DVENC, VDUP, ID_PARCELA) 

		SELECT  
		--#1# - INÍCIO

			-- GRUPO FATURA (FAT)
			RTRIM(@NF_SAIDA)						AS NFAT,
			B.VALOR									AS VORIG,
			0										AS VDESC,
			B.VALOR									AS VLIQ,
		
			-- GRUPO PARCELAS (DUP)
			RIGHT('00' + CAST(ROW_NUMBER() OVER (ORDER BY B.VENCIMENTO) AS VARCHAR),3)	AS NDUP,
			B.VENCIMENTO							AS DVENC,
			B.VALOR									AS VDUP,
			RTRIM(B.PARCELA)						AS ID_PARCELA
		
		FROM LOJA_VENDA_PGTO A 
		INNER JOIN LOJA_VENDA_PARCELAS B 
				ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TERMINAL = B.TERMINAL AND A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
		INNER JOIN LOJAS_VAREJO C 
				ON A.CODIGO_FILIAL = C.CODIGO_FILIAL 
		WHERE	((A.NUMERO_FISCAL_VENDA = @NF_SAIDA AND A.SERIE_NF_SAIDA = @SERIE_NF) OR 
				 (A.NUMERO_FISCAL_VINCULADA = @NF_SAIDA AND A.SERIE_NF_VINCULADA = @SERIE_NF)) AND 
				C.FILIAL = @FILIAL AND 
				A.TOTAL_VENDA > 0 AND 
				B.TIPO_PGTO = 'J'		
		ORDER BY B.VENCIMENTO
		
		-- DUPLICATAS
		--Select  
		--NULL									AS NFAT,
		--NULL									AS VORIG,		
		--NULL									AS VDESC,
		--NULL									AS VLIQ,
		--RTRIM(@NF_SAIDA)+'-'+RTRIM(B.PARCELA)	AS NDUP,		
		--B.VENCIMENTO							AS DVENC,
		--B.VALOR									AS VDUP,
		--RTRIM(B.PARCELA)						AS ID_PARCELA
		--From LOJA_VENDA_PGTO A 
		--Inner Join LOJA_VENDA_PARCELAS B On A.CODIGO_FILIAL = B.CODIGO_FILIAL And A.TERMINAL = B.TERMINAL And A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
		--Inner Join LOJAS_VAREJO C On A.CODIGO_FILIAL = C.CODIGO_FILIAL 
		--Where A.NUMERO_FISCAL_VENDA = @NF_SAIDA And A.SERIE_NF_SAIDA = @SERIE_NF And C.FILIAL = @FILIAL AND A.TOTAL_VENDA > 0
		--	--AND EXISTS(SELECT 1 FROM LOJA_VENDA_PARCELAS WHERE CODIGO_FILIAL = B.CODIGO_FILIAL AND TERMINAL = B.TERMINAL AND LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND TIPO_PGTO = 'J')
		--	AND B.TIPO_PGTO = 'J'
		
		--#1# - FIM

		--Union All	
		---- FATURAS SEM DINHEIRO NEGATIVO
		--SELECT * 
		--FROM 
		--	(
		--	Select  
		--	RTRIM(@NF_SAIDA)						AS NFAT, 
		--	SUM(B.VALOR)							AS VORIG,
		--	0										AS VDESC,
		--	SUM(B.VALOR)							AS VLIQ,
		--	NULL									AS NDUP,
		--	NULL 									AS DVENC,
		--	NULL									AS VDUP,
		--	'01'									AS ID_PARCELA
		--	From LOJA_VENDA_PGTO A 
		--	Inner Join LOJA_VENDA_PARCELAS B On A.CODIGO_FILIAL = B.CODIGO_FILIAL And A.TERMINAL = B.TERMINAL And A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
		--	Inner Join LOJAS_VAREJO C On A.CODIGO_FILIAL = C.CODIGO_FILIAL 
		--	Inner Join 
		--		(
		--		SELECT A.CODIGO_FILIAL, A.TERMINAL, A.LANCAMENTO_CAIXA, SUM(CASE WHEN B.TIPO_PGTO = 'J' THEN 1 ELSE 0 END) AS QTDE_DUP,
		--				SUM(CASE WHEN B.VALOR < 0 THEN 1 ELSE 0 END) AS QTDE_NEGATIVO
		--		From LOJA_VENDA_PGTO A 
		--		Inner Join LOJA_VENDA_PARCELAS B On A.CODIGO_FILIAL = B.CODIGO_FILIAL And A.TERMINAL = B.TERMINAL And A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
		--		Inner Join LOJAS_VAREJO C On A.CODIGO_FILIAL = C.CODIGO_FILIAL 
		--		Where A.NUMERO_FISCAL_VENDA = @NF_SAIDA And A.SERIE_NF_SAIDA = @SERIE_NF And C.FILIAL = @FILIAL AND A.TOTAL_VENDA > 0		
		--		GROUP BY A.CODIGO_FILIAL, A.TERMINAL, A.LANCAMENTO_CAIXA
		--		) D
		--		On A.CODIGO_FILIAL = D.CODIGO_FILIAL And A.TERMINAL = D.TERMINAL And A.LANCAMENTO_CAIXA = D.LANCAMENTO_CAIXA 
		--	Where A.NUMERO_FISCAL_VENDA = @NF_SAIDA And A.SERIE_NF_SAIDA = @SERIE_NF And C.FILIAL = @FILIAL AND A.TOTAL_VENDA > 0
		--		AND D.QTDE_DUP = 0 AND D.QTDE_NEGATIVO = 0 AND B.VENCIMENTO > A.DATA
		--	) A
		--WHERE VLIQ IS NOT NULL
		--Union All
		---- FATURAS COM DINHEIRO NEGATIVO
		--SELECT * 
		--FROM 
		--	(
		--	Select  
		--	RTRIM(@NF_SAIDA)						AS NFAT, 
		--	SUM(B.VALOR)							AS VORIG,
		--	0										AS VDESC,
		--	SUM(B.VALOR)							AS VLIQ,
		--	NULL									AS NDUP,
		--	NULL 									AS DVENC,
		--	NULL									AS VDUP,
		--	'01'									AS ID_PARCELA
		--	From LOJA_VENDA_PGTO A 
		--	Inner Join LOJA_VENDA_PARCELAS B On A.CODIGO_FILIAL = B.CODIGO_FILIAL And A.TERMINAL = B.TERMINAL And A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
		--	Inner Join LOJAS_VAREJO C On A.CODIGO_FILIAL = C.CODIGO_FILIAL 
		--	Inner Join 
		--		(
		--		SELECT A.CODIGO_FILIAL, A.TERMINAL, A.LANCAMENTO_CAIXA, SUM(CASE WHEN B.TIPO_PGTO = 'J' THEN 1 ELSE 0 END) AS QTDE_DUP,
		--				SUM(CASE WHEN B.VALOR < 0 THEN 1 ELSE 0 END) AS QTDE_NEGATIVO
		--		From LOJA_VENDA_PGTO A 
		--		Inner Join LOJA_VENDA_PARCELAS B On A.CODIGO_FILIAL = B.CODIGO_FILIAL And A.TERMINAL = B.TERMINAL And A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
		--		Inner Join LOJAS_VAREJO C On A.CODIGO_FILIAL = C.CODIGO_FILIAL 
		--		Where A.NUMERO_FISCAL_VENDA = @NF_SAIDA And A.SERIE_NF_SAIDA = @SERIE_NF And C.FILIAL = @FILIAL AND A.TOTAL_VENDA > 0		
		--		GROUP BY A.CODIGO_FILIAL, A.TERMINAL, A.LANCAMENTO_CAIXA
		--		) D
		--		On A.CODIGO_FILIAL = D.CODIGO_FILIAL And A.TERMINAL = D.TERMINAL And A.LANCAMENTO_CAIXA = D.LANCAMENTO_CAIXA 
		--	Where A.NUMERO_FISCAL_VENDA = @NF_SAIDA And A.SERIE_NF_SAIDA = @SERIE_NF And C.FILIAL = @FILIAL AND A.TOTAL_VENDA > 0
		--		AND D.QTDE_DUP = 0 AND D.QTDE_NEGATIVO = 1
		--	Having MAX(B.VENCIMENTO) > MAX(A.DATA)
		--	) A
		--WHERE VLIQ IS NOT NULL
		--Order by ID_PARCELA 
	
	RETURN
END
